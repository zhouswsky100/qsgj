(function() {
  var DB_STATE_INIT, DB_STATE_OPEN, READ_ONLY_REGEX, SQLiteFactory, SQLitePlugin, SQLitePluginTransaction, SelfTest, argsArray, dblocations, iosLocationMap, newSQLError, nextTick, root, txLocks;

  root = this;

  READ_ONLY_REGEX = /^\s*(?:drop|delete|insert|update|create)\s/i;

  DB_STATE_INIT = "INIT";

  DB_STATE_OPEN = "OPEN";

  txLocks = {};

  newSQLError = function(error, code) {
    var sqlError;
    sqlError = error;
    if (!code) {
      code = 0;
    }
    if (!sqlError) {
      sqlError = new Error("a plugin had an error but provided no response");
      sqlError.code = code;
    }
    if (typeof sqlError === "string") {
      sqlError = new Error(error);
      sqlError.code = code;
    }
    if (!sqlError.code && sqlError.message) {
      sqlError.code = code;
    }
    if (!sqlError.code && !sqlError.message) {
      sqlError = new Error("an unknown error was returned: " + JSON.stringify(sqlError));
      sqlError.code = code;
    }
    return sqlError;
  };

  nextTick = window.setImmediate || function(fun) {
    window.setTimeout(fun, 0);
  };


  /*
    Utility that avoids leaking the arguments object. See
    https://www.npmjs.org/package/argsarray
   */

  argsArray = function(fun) {
    return function() {
      var args, i, len;
      len = arguments.length;
      if (len) {
        args = [];
        i = -1;
        while (++i < len) {
          args[i] = arguments[i];
        }
        return fun.call(this, args);
      } else {
        return fun.call(this, []);
      }
    };
  };

  SQLitePlugin = function(openargs, openSuccess, openError) {
    var dbname;
    if (!(openargs && openargs['name'])) {
      throw newSQLError("Cannot create a SQLitePlugin db instance without a db name");
    }
    dbname = openargs.name;
    if (typeof dbname !== 'string') {
      throw newSQLError('sqlite plugin database name must be a string');
    }
    this.openargs = openargs;
    this.dbname = dbname;
    this.openSuccess = openSuccess;
    this.openError = openError;
    this.openSuccess || (this.openSuccess = function() {
      console.log("DB opened: " + dbname);
    });
    this.openError || (this.openError = function(e) {
      console.log(e.message);
    });
    this.open(this.openSuccess, this.openError);
  };

  SQLitePlugin.prototype.databaseFeatures = {
    isSQLitePluginDatabase: true
  };

  SQLitePlugin.prototype.openDBs = {};

  SQLitePlugin.prototype.addTransaction = function(t) {
    if (!txLocks[this.dbname]) {
      txLocks[this.dbname] = {
        queue: [],
        inProgress: false
      };
    }
    txLocks[this.dbname].queue.push(t);
    if (this.dbname in this.openDBs && this.openDBs[this.dbname] !== DB_STATE_INIT) {
      this.startNextTransaction();
    } else {
      if (this.dbname in this.openDBs) {
        console.log('new transaction is waiting for open operation');
      } else {
        console.log('database is closed, new transaction is [stuck] waiting until db is opened again!');
      }
    }
  };

  SQLitePlugin.prototype.transaction = function(fn, error, success) {
    if (!this.openDBs[this.dbname]) {
      error(newSQLError('database not open'));
      return;
    }
    this.addTransaction(new SQLitePluginTransaction(this, fn, error, success, true, false));
  };

  SQLitePlugin.prototype.readTransaction = function(fn, error, success) {
    if (!this.openDBs[this.dbname]) {
      error(newSQLError('database not open'));
      return;
    }
    this.addTransaction(new SQLitePluginTransaction(this, fn, error, success, false, true));
  };

  SQLitePlugin.prototype.startNextTransaction = function() {
    var self;
    self = this;
    nextTick((function(_this) {
      return function() {
        var txLock;
        if (!(_this.dbname in _this.openDBs) || _this.openDBs[_this.dbname] !== DB_STATE_OPEN) {
          console.log('cannot start next transaction: database not open');
          return;
        }
        txLock = txLocks[self.dbname];
        if (!txLock) {
          console.log('cannot start next transaction: database connection is lost');
          return;
        } else if (txLock.queue.length > 0 && !txLock.inProgress) {
          txLock.inProgress = true;
          txLock.queue.shift().start();
        }
      };
    })(this));
  };

  SQLitePlugin.prototype.abortAllPendingTransactions = function() {
    var j, len1, ref, tx, txLock;
    txLock = txLocks[this.dbname];
    if (!!txLock && txLock.queue.length > 0) {
      ref = txLock.queue;
      for (j = 0, len1 = ref.length; j < len1; j++) {
        tx = ref[j];
        tx.abortFromQ(newSQLError('Invalid database handle'));
      }
      txLock.queue = [];
      txLock.inProgress = false;
    }
  };

  SQLitePlugin.prototype.open = function(success, error) {
    var openerrorcb, opensuccesscb;
    if (this.dbname in this.openDBs) {
      console.log('database already open: ' + this.dbname);
      nextTick((function(_this) {
        return function() {
          success(_this);
        };
      })(this));
    } else {
      console.log('OPEN database: ' + this.dbname);
      opensuccesscb = (function(_this) {
        return function() {
          var txLock;
          if (!_this.openDBs[_this.dbname]) {
            console.log('database was closed during open operation');
          }
          if (_this.dbname in _this.openDBs) {
            _this.openDBs[_this.dbname] = DB_STATE_OPEN;
          }
          if (!!success) {
            success(_this);
          }
          txLock = txLocks[_this.dbname];
          if (!!txLock && txLock.queue.length > 0 && !txLock.inProgress) {
            _this.startNextTransaction();
          }
        };
      })(this);
      openerrorcb = (function(_this) {
        return function() {
          console.log('OPEN database: ' + _this.dbname + ' failed, aborting any pending transactions');
          if (!!error) {
            error(newSQLError('Could not open database'));
          }
          delete _this.openDBs[_this.dbname];
          _this.abortAllPendingTransactions();
        };
      })(this);
      this.openDBs[this.dbname] = DB_STATE_INIT;
      cordova.exec(opensuccesscb, openerrorcb, "SQLitePlugin", "open", [this.openargs]);
    }
  };

  SQLitePlugin.prototype.close = function(success, error) {
    if (this.dbname in this.openDBs) {
      if (txLocks[this.dbname] && txLocks[this.dbname].inProgress) {
        console.log('cannot close: transaction is in progress');
        error(newSQLError('database cannot be closed while a transaction is in progress'));
        return;
      }
      console.log('CLOSE database: ' + this.dbname);
      delete this.openDBs[this.dbname];
      if (txLocks[this.dbname]) {
        console.log('closing db with transaction queue length: ' + txLocks[this.dbname].queue.length);
      } else {
        console.log('closing db with no transaction lock state');
      }
      cordova.exec(success, error, "SQLitePlugin", "close", [
        {
          path: this.dbname
        }
      ]);
    } else {
      console.log('cannot close: database is not open');
      if (error) {
        nextTick(function() {
          return error();
        });
      }
    }
  };

  SQLitePlugin.prototype.executeSql = function(statement, params, success, error) {
    var myerror, myfn, mysuccess;
    mysuccess = function(t, r) {
      if (!!success) {
        return success(r);
      }
    };
    myerror = function(t, e) {
      if (!!error) {
        return error(e);
      }
    };
    myfn = function(tx) {
      tx.addStatement(statement, params, mysuccess, myerror);
    };
    this.addTransaction(new SQLitePluginTransaction(this, myfn, null, null, false, false));
  };

  SQLitePlugin.prototype.sqlBatch = function(sqlStatements, success, error) {
    var batchList, j, len1, myfn, st;
    if (!sqlStatements || sqlStatements.constructor !== Array) {
      throw newSQLError('sqlBatch expects an array');
    }
    batchList = [];
    for (j = 0, len1 = sqlStatements.length; j < len1; j++) {
      st = sqlStatements[j];
      if (st.constructor === Array) {
        if (st.length === 0) {
          throw newSQLError('sqlBatch array element of zero (0) length');
        }
        batchList.push({
          sql: st[0],
          params: st.length === 0 ? [] : st[1]
        });
      } else {
        batchList.push({
          sql: st,
          params: []
        });
      }
    }
    myfn = function(tx) {
      var elem, k, len2, results;
      results = [];
      for (k = 0, len2 = batchList.length; k < len2; k++) {
        elem = batchList[k];
        results.push(tx.addStatement(elem.sql, elem.params, null, null));
      }
      return results;
    };
    this.addTransaction(new SQLitePluginTransaction(this, myfn, error, success, true, false));
  };

  SQLitePluginTransaction = function(db, fn, error, success, txlock, readOnly) {
    if (typeof fn !== "function") {

      /*
      This is consistent with the implementation in Chrome -- it
      throws if you pass anything other than a function. This also
      prevents us from stalling our txQueue if somebody passes a
      false value for fn.
       */
      throw newSQLError("transaction expected a function");
    }
    this.db = db;
    this.fn = fn;
    this.error = error;
    this.success = success;
    this.txlock = txlock;
    this.readOnly = readOnly;
    this.executes = [];
    if (txlock) {
      this.addStatement("BEGIN", [], null, function(tx, err) {
        throw newSQLError("unable to begin transaction: " + err.message, err.code);
      });
    } else {
      this.addStatement("SELECT 1", [], null, null);
    }
  };

  SQLitePluginTransaction.prototype.start = function() {
    var err, error1;
    try {
      this.fn(this);
      this.run();
    } catch (error1) {
      err = error1;
      txLocks[this.db.dbname].inProgress = false;
      this.db.startNextTransaction();
      if (this.error) {
        this.error(newSQLError(err));
      }
    }
  };

  SQLitePluginTransaction.prototype.executeSql = function(sql, values, success, error) {
    if (this.finalized) {
      throw {
        message: 'InvalidStateError: DOM Exception 11: This transaction is already finalized. Transactions are committed after its success or failure handlers are called. If you are using a Promise to handle callbacks, be aware that implementations following the A+ standard adhere to run-to-completion semantics and so Promise resolution occurs on a subsequent tick and therefore after the transaction commits.',
        code: 11
      };
      return;
    }
    if (this.readOnly && READ_ONLY_REGEX.test(sql)) {
      this.handleStatementFailure(error, {
        message: 'invalid sql for a read-only transaction'
      });
      return;
    }
    this.addStatement(sql, values, success, error);
  };

  SQLitePluginTransaction.prototype.addStatement = function(sql, values, success, error) {
    var j, len1, params, t, v;
    params = [];
    if (!!values && values.constructor === Array) {
      for (j = 0, len1 = values.length; j < len1; j++) {
        v = values[j];
        t = typeof v;
        params.push((v === null || v === void 0 || t === 'number' || t === 'string' ? v : v instanceof Blob ? v.valueOf() : v.toString()));
      }
    }
    this.executes.push({
      success: success,
      error: error,
      sql: sql,
      params: params
    });
  };

  SQLitePluginTransaction.prototype.handleStatementSuccess = function(handler, response) {
    var payload, rows;
    if (!handler) {
      return;
    }
    rows = response.rows || [];
    payload = {
      rows: {
        item: function(i) {
          return rows[i];
        },
        length: rows.length
      },
      rowsAffected: response.rowsAffected || 0,
      insertId: response.insertId || void 0
    };
    handler(this, payload);
  };

  SQLitePluginTransaction.prototype.handleStatementFailure = function(handler, response) {
    if (!handler) {
      throw newSQLError("a statement with no error handler failed: " + response.message, response.code);
    }
    if (handler(this, response) !== false) {
      throw newSQLError("a statement error callback did not return false: " + response.message, response.code);
    }
  };

  SQLitePluginTransaction.prototype.run = function() {
    var batchExecutes, handlerFor, i, mycb, mycbmap, request, tropts, tx, txFailure, waiting;
    txFailure = null;
    tropts = [];
    batchExecutes = this.executes;
    waiting = batchExecutes.length;
    this.executes = [];
    tx = this;
    handlerFor = function(index, didSucceed) {
      return function(response) {
        var err, error1;
        try {
          if (didSucceed) {
            tx.handleStatementSuccess(batchExecutes[index].success, response);
          } else {
            tx.handleStatementFailure(batchExecutes[index].error, newSQLError(response));
          }
        } catch (error1) {
          err = error1;
          if (!txFailure) {
            txFailure = newSQLError(err);
          }
        }
        if (--waiting === 0) {
          if (txFailure) {
            tx.abort(txFailure);
          } else if (tx.executes.length > 0) {
            tx.run();
          } else {
            tx.finish();
          }
        }
      };
    };
    i = 0;
    mycbmap = {};
    while (i < batchExecutes.length) {
      request = batchExecutes[i];
      mycbmap[i] = {
        success: handlerFor(i, true),
        error: handlerFor(i, false)
      };
      tropts.push({
        qid: 1111,
        sql: request.sql,
        params: request.params
      });
      i++;
    }
    mycb = function(result) {
      var j, last, q, r, ref, res, type;
      last = result.length - 1;
      for (i = j = 0, ref = last; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        r = result[i];
        type = r.type;
        res = r.result;
        q = mycbmap[i];
        if (q) {
          if (q[type]) {
            q[type](res);
          }
        }
      }
    };
    cordova.exec(mycb, null, "SQLitePlugin", "backgroundExecuteSqlBatch", [
      {
        dbargs: {
          dbname: this.db.dbname
        },
        executes: tropts
      }
    ]);
  };

  SQLitePluginTransaction.prototype.abort = function(txFailure) {
    var failed, succeeded, tx;
    if (this.finalized) {
      return;
    }
    tx = this;
    succeeded = function(tx) {
      txLocks[tx.db.dbname].inProgress = false;
      tx.db.startNextTransaction();
      if (tx.error) {
        tx.error(txFailure);
      }
    };
    failed = function(tx, err) {
      txLocks[tx.db.dbname].inProgress = false;
      tx.db.startNextTransaction();
      if (tx.error) {
        tx.error(newSQLError("error while trying to roll back: " + err.message, err.code));
      }
    };
    this.finalized = true;
    if (this.txlock) {
      this.addStatement("ROLLBACK", [], succeeded, failed);
      this.run();
    } else {
      succeeded(tx);
    }
  };

  SQLitePluginTransaction.prototype.finish = function() {
    var failed, succeeded, tx;
    if (this.finalized) {
      return;
    }
    tx = this;
    succeeded = function(tx) {
      txLocks[tx.db.dbname].inProgress = false;
      tx.db.startNextTransaction();
      if (tx.success) {
        tx.success();
      }
    };
    failed = function(tx, err) {
      txLocks[tx.db.dbname].inProgress = false;
      tx.db.startNextTransaction();
      if (tx.error) {
        tx.error(newSQLError("error while trying to commit: " + err.message, err.code));
      }
    };
    this.finalized = true;
    if (this.txlock) {
      this.addStatement("COMMIT", [], succeeded, failed);
      this.run();
    } else {
      succeeded(tx);
    }
  };

  SQLitePluginTransaction.prototype.abortFromQ = function(sqlerror) {
    if (this.error) {
      this.error(sqlerror);
    }
  };

  dblocations = ["docs", "libs", "nosync"];

  iosLocationMap = {
    'default': 'nosync',
    'Documents': 'docs',
    'Library': 'libs'
  };

  SQLiteFactory = {

    /*
    NOTE: this function should NOT be translated from Javascript
    back to CoffeeScript by js2coffee.
    If this function is edited in Javascript then someone will
    have to translate it back to CoffeeScript by hand.
     */
    openDatabase: argsArray(function(args) {
      var dblocation, errorcb, okcb, openargs;
      if (args.length < 1 || !args[0]) {
        throw newSQLError('Sorry missing mandatory open arguments object in openDatabase call');
      }
      if (args[0].constructor === String) {
        throw newSQLError('Sorry first openDatabase argument must be an object');
      }
      openargs = args[0];
      if (!openargs.name) {
        throw newSQLError('Database name value is missing in openDatabase call');
      }
      if (!openargs.iosDatabaseLocation && !openargs.location && openargs.location !== 0) {
        throw newSQLError('Database location or iosDatabaseLocation value is now mandatory in openDatabase call');
      }
      dblocation = !!openargs.location && openargs.location === 'default' ? iosLocationMap['default'] : !!openargs.iosDatabaseLocation ? iosLocationMap[openargs.iosDatabaseLocation] : dblocations[openargs.location];
      openargs.dblocation = dblocation;
      if (!!openargs.createFromLocation && openargs.createFromLocation === 1) {
        openargs.createFromResource = "1";
      }
      if (!!openargs.androidDatabaseImplementation && openargs.androidDatabaseImplementation === 2) {
        openargs.androidOldDatabaseImplementation = 1;
      }
      if (!!openargs.androidLockWorkaround && openargs.androidLockWorkaround === 1) {
        openargs.androidBugWorkaround = 1;
      }
      okcb = null;
      errorcb = null;
      if (args.length >= 2) {
        okcb = args[1];
        if (args.length > 2) {
          errorcb = args[2];
        }
      }
      return new SQLitePlugin(openargs, okcb, errorcb);
    }),
    deleteDatabase: function(first, success, error) {
      var args, dblocation;
      args = {};
      if (first.constructor === String) {
        throw newSQLError('Sorry first deleteDatabase argument must be an object');
      } else {
        if (!(first && first['name'])) {
          throw new Error("Please specify db name");
        }
        args.path = first.name;
      }
      if (!first.iosDatabaseLocation && !first.location && first.location !== 0) {
        throw newSQLError('Database location or iosDatabaseLocation value is now mandatory in deleteDatabase call');
      }
      dblocation = !!first.location && first.location === 'default' ? iosLocationMap['default'] : !!first.iosDatabaseLocation ? iosLocationMap[first.iosDatabaseLocation] : dblocations[first.location];
      args.dblocation = dblocation;
      delete SQLitePlugin.prototype.openDBs[args.path];
      return cordova.exec(success, error, "SQLitePlugin", "delete", [args]);
    }
  };

  SelfTest = {
    DBNAME: '___$$$___litehelpers___$$$___test___$$$___.db',
    start: function(successcb, errorcb) {
      return SQLiteFactory.deleteDatabase({
        name: SelfTest.DBNAME,
        location: 'default'
      }, (function() {
        return SelfTest.start2(successcb, errorcb);
      }), (function() {
        return SelfTest.start2(successcb, errorcb);
      }));
    },
    start2: function(successcb, errorcb) {
      return SQLiteFactory.openDatabase({
        name: SelfTest.DBNAME,
        location: 'default'
      }, function(db) {
        return db.sqlBatch(['CREATE TABLE TestTable(TestColumn);', ['INSERT INTO TestTable (TestColumn) VALUES (?);', ['test-value']]], function() {
          return db.executeSql('SELECT * FROM TestTable', [], function(resutSet) {
            if (!resutSet.rows) {
              SelfTest.finishWithError(errorcb, 'Missing resutSet.rows');
              return;
            }
            if (!resutSet.rows.length) {
              SelfTest.finishWithError(errorcb, 'Missing resutSet.rows.length');
              return;
            }
            if (resutSet.rows.length !== 1) {
              SelfTest.finishWithError(errorcb, "Incorrect resutSet.rows.length value: " + resutSet.rows.length + " (expected: 1)");
              return;
            }
            if (!resutSet.rows.item(0).TestColumn) {
              SelfTest.finishWithError(errorcb, 'Missing resutSet.rows.item(0).TestColumn');
              return;
            }
            if (resutSet.rows.item(0).TestColumn !== 'test-value') {
              SelfTest.finishWithError(errorcb, "Incorrect resutSet.rows.item(0).TestColumn value: " + (resutSet.rows.item(0).TestColumn) + " (expected: 'test-value')");
              return;
            }
            return db.transaction(function(tx) {
              return tx.executeSql('UPDATE TestTable SET TestColumn = ?', ['new-value']);
            }, function(tx_err) {
              return SelfTest.finishWithError(errorcb, "UPDATE transaction error: " + tx_err);
            }, function() {
              return db.readTransaction(function(tx2) {
                return tx2.executeSql('SELECT * FROM TestTable', [], function(ignored, resutSet2) {
                  if (!resutSet2.rows) {
                    throw newSQLError('Missing resutSet.rows');
                  }
                  if (!resutSet2.rows.length) {
                    throw newSQLError('Missing resutSet.rows.length');
                  }
                  if (resutSet2.rows.length !== 1) {
                    throw newSQLError("Incorrect resutSet.rows.length value: " + resutSet.rows.length + " (expected: 1)");
                  }
                  if (!resutSet2.rows.item(0).TestColumn) {
                    throw newSQLError('Missing resutSet.rows.item(0).TestColumn');
                  }
                  if (resutSet2.rows.item(0).TestColumn !== 'new-value') {
                    throw newSQLError("Incorrect resutSet.rows.item(0).TestColumn value: " + (resutSet.rows.item(0).TestColumn) + " (expected: 'test-value')");
                  }
                });
              }, function(tx2_err) {
                return SelfTest.finishWithError(errorcb, "readTransaction error: " + tx2_err);
              }, function() {
                return db.close(function() {
                  return SQLiteFactory.deleteDatabase({
                    name: SelfTest.DBNAME,
                    location: 'default'
                  }, successcb, function(cleanup_err) {
                    return SelfTest.finishWithError(errorcb, "Cleanup error: " + cleanup_err);
                  });
                }, function(close_err) {
                  return SelfTest.finishWithError(errorcb, "close error: " + close_err);
                });
              });
            });
          }, function(select_err) {
            return SelfTest.finishWithError(errorcb, "SELECT error: " + select_err);
          });
        }, function(batch_err) {
          return SelfTest.finishWithError(errorcb, "sql batch error: " + batch_err);
        });
      }, function(open_err) {
        return SelfTest.finishWithError(errorcb, "Open database error: " + open_err);
      });
    },
    finishWithError: function(errorcb, message) {
      return SQLiteFactory.deleteDatabase({
        name: SelfTest.DBNAME,
        location: 'default'
      }, function() {
        return errorcb(newSQLError(message));
      }, function(err2) {
        return errorcb(newSQLError("Cleanup error: " + err2 + " for error: " + message));
      });
    }
  };

  root.sqlitePlugin = {
    sqliteFeatures: {
      isSQLitePlugin: true
    },
    echoTest: function(okcb, errorcb) {
      var error, ok;
      ok = function(s) {
        if (s === 'test-string') {
          return okcb();
        } else {
          return errorcb("Mismatch: got: '" + s + "' expected 'test-string'");
        }
      };
      error = function(e) {
        return errorcb(e);
      };
      return cordova.exec(okcb, errorcb, "SQLitePlugin", "echoStringValue", [
        {
          value: 'test-string'
        }
      ]);
    },
    selfTest: SelfTest.start,
    openDatabase: SQLiteFactory.openDatabase,
    deleteDatabase: SQLiteFactory.deleteDatabase
  };

}).call(this);

angular.module('starter.unit', [])
//统一提示弹出
.factory('tip',function($ionicLoading,$timeout,$cordovaToast){
  return function(text,callback){
    $cordovaToast.show(text,'short','center')
    .then(function(success) {  
      callback&&callback(); 
    });
  }
})
//生成请求流水号
.factory('req',function($ionicHistory,$ionicPlatform,$cordovaAppVersion,$cordovaDevice,$cordovaSQLite,$q,$state,$stateParams,$rootScope){   
    var deviceInformation = ionic.Platform.device();
    var isWebView = ionic.Platform.isWebView();
    var isIPad = ionic.Platform.isIPad();
    var isIOS = ionic.Platform.isIOS();
    var isAndroid = ionic.Platform.isAndroid();
    var isWindowsPhone = ionic.Platform.isWindowsPhone();
    var currentPlatform = ionic.Platform.platform();
    var currentPlatformVersion = ionic.Platform.version();
    return {
      MethodCode:function(MethodCode){
        return MethodCode+"";
      },
      //获取请求时间
      time:function(){
        var yyyy=(new Date()).getFullYear()+"";
        var MM=(new Date()).getMonth()+1;
        var dd=(new Date()).getDate();
        var hh=(new Date()).getHours()<10?("0"+(new Date()).getHours()):(new Date()).getHours();
        var mm=(new Date()).getMinutes()<10?("0"+(new Date()).getMinutes()):(new Date()).getMinutes();
        var ss=(new Date()).getSeconds()<10?("0"+(new Date()).getSeconds()):(new Date()).getSeconds();
        return yyyy+MM+dd+hh+mm+ss;
      },
      //获取请求流水号
      id:function(){
         var XXXX= isIOS?"IPHONE":(isAndroid?"ANDROID":"");//设备名称的缩写
         var yyyy=(new Date()).getFullYear();
         var mm=(new Date()).getMonth();
         var dd=(new Date()).getDate();
         var random8=function(){
          var result="",data=["0","1","2","3","4","5","6","7","8","9"];
          for(var i=0;i<8;i++){ //产生8位就使i<8
            r=Math.floor(Math.random()*10); //10为数组里面数据的数量，目的是以此当下标取数组data里的值！ 
            result+=data[r]; //输出8次随机数的同时，让r加8次，就是8位的随机字符串了。 
          } 
          return result;
         };
         return XXXX+yyyy+mm+dd+random8();
      },
       //MVER手机系统版本
      MVER:function(){
        return currentPlatformVersion+"";
      },
      //MTYPE客户端类型
      MTYPE:function(){
        return isIOS?"3":(isAndroid?"1":"");
      },
      
      //计算日期
     addDay: function(dataStr,dayCount) {
    	 	var strdate=dataStr; //日期字符串
    	    var isdate = new Date(strdate.replace(/-/g,"/"));  //把日期字符串转换成日期格式
    	    isdate = new Date((isdate/1000+(86400*dayCount))*1000);  //日期加1天
    	    var mon =  (isdate.getMonth()+1);
    	    if(mon<10) mon ='0'+mon;
    	    var pdate = isdate.getFullYear()+"-"+mon+"-"+(isdate.getDate());   //把日期格式转换成字符串
    	    return pdate;
      },
      //时间差
      day: function(date1,date2){
    	    var oDate1 = new Date(date1);
    	    var oDate2 = new Date(date2);
    	    if(oDate1.getTime() <= oDate2.getTime()){
    	       return true ;
    	    } else {
    	       return false ;    	
    	   }
      },
      /** 
       * 计算两日期时间差 
       *  interval 计算类型：D是按照天、H是按照小时、M是按照分钟、S是按照秒、T是按照毫秒 
       *  date1 起始日期  格式为年月格式 为2012-06-20 
       *  date2 结束日期 
       * 
       */
      countTimeLength: function(interval, date1, date2) {  
    	    var objInterval = {'D' : 1000 * 60 * 60 * 24, 'H' : 1000 * 60 * 60, 'M' : 1000 * 60, 'S' : 1000, 'T' : 1};  
    	    interval = interval.toUpperCase();  
    	    var dt1 = Date.parse(date1.replace(/-/g, "/"));  
    	    var dt2 = Date.parse(date2.replace(/-/g, "/"));  
    	    try{  
    	        return ((dt2 - dt1) / objInterval[interval]).toFixed(2);//保留两位小数点  
    	    }catch (e){  
    	        return e.message;  
    	    }  
    	},
      //生成签名信息
      //bodyInfo:为body请求json信息对象
      //signKey:加密密钥
      signInfo:function(bodyInfo,signKey){
        var keyArr=[];
		//signKey丢失时返回登录
    		if($rootScope.logined == '1' && (signKey==''||signKey==null||signKey==undefined)){
    			 $state.go("login");
    		}
        for(var key in bodyInfo){
          keyArr.push(key);
        }
        keyArr.sort();
        var valStr="";
        for(var i=0;i<keyArr.length;i++){
          if(bodyInfo[keyArr[i]]!==""){//过滤非空的值
            valStr+=bodyInfo[keyArr[i]];
          }
        }
        return MD5.hex(MD5.hex(valStr).toUpperCase()+signKey).toUpperCase();
      },
      deviceInfo:function(){
        var deferred= $q.defer();
        var deferredInfo={
          "signKey":"",//签名密钥
          "sessionId":"",//登录sessionId
          "APPID":"",
          "APPVER":"",
          "imei":"",
          "PMODEL":"",
          "PBRAND":"",
          "chid":$rootScope.chid,
          "msgFlg":false
        }
        $ionicPlatform.ready(function() {
           var db="";
           if (window.cordova) {//手机设备
              db = $cordovaSQLite.openDB({ name:"hpApp.db",iosDatabaseLocation:'default'});
           }
           else{//浏览器
              db = window.openDatabase("hpApp.db", '1', 'my', 1024 * 1024 * 100);
           }
           $cordovaAppVersion.getVersionCode().then(function (build) {
              deferredInfo.APPID=build+"";
              $cordovaAppVersion.getVersionNumber().then(function (version) {
                  deferredInfo.APPVER="V"+version;
                  deferredInfo.imei=$cordovaDevice.getUUID()+"";//uuid替代imei标识做设备唯一标识用;
                  deferredInfo.PMODEL=$cordovaDevice.getModel().split(" ")[1]+"";
                  deferredInfo.PBRAND=$cordovaDevice.getModel().split(" ")[0]+"";
                  $cordovaSQLite.execute(db, "SELECT sessionId FROM loginInfo").then(function(res) {
                    deferredInfo.sessionId=res.rows.length > 0?res.rows.item(0).sessionId:"";
                    $cordovaSQLite.execute(db, "SELECT signKey FROM loginInfo").then(function(res) {
                      deferredInfo.signKey=(res.rows.length > 0?res.rows.item(0).signKey:"");
                      deferred.resolve(deferredInfo);
                    }, function (err) {
                      deferred.resolve(deferredInfo);
                    });
                  }, function (err) {
                    deferred.resolve(deferredInfo);
                  });
              });
           });
        })
        return deferred.promise;
      }
    }
})
//处理ajax数据结果处理
.factory('_responseData',function(tip,state){
  return function(data,callback){
    if(data.returnCode == '0' || data.returnCode == '1'){
      callback&&callback();
    }else if(data.returnCode == "999"){
      tip("您的账号在其他设备登录",function(){
        //$location.path('/login');
        state.go("login");
      });
    } else {
      tip(data.returnMsg);
    }
  }
})
//视图跳转
.factory('state',function($ionicHistory,$state,$stateParams,$q,$timeout,$rootScope,sqLiteLoginInfo){
  return {
    /*
    stateName：状态名称
    第一个参数是statename状态名
    如果只有2个参数，第二个参数是对象的话就是stateParams，如果是boolen类型，那么第二个参数就是disableBack
    如果有3个参数，第二个参数是对象的话就是stateParams，第三个参数就是disableBack
    */
    go:function(){
      var stateName = arguments[0];
      var stateParams={},disableBack=false;
      if(arguments.length=2){
         if (typeof arguments[1] == "object"){
            stateParams=arguments[1];
         }else if(typeof arguments[1] == "boolean"){
            disableBack=arguments[1];
         }
      }
      if(arguments.length=3 && typeof arguments[1] == "object" && typeof arguments[2] == "boolean")
      {
          stateParams=arguments[1];
          disableBack=arguments[2];
      }
      // go 的时候
      var backHistoryId = $ionicHistory && $ionicHistory.currentHistoryId();
      var backViewId = $ionicHistory && $ionicHistory.currentView() && $ionicHistory.currentView().viewId;
      $ionicHistory.nextViewOptions({
        disableBack: disableBack
      });




      var loginname=[
          'tab.investHly',
          'tab.invest', 
          'tab.,',   
          'tab.assetStatistics',    
          'tab.capitalFlow',       
          'investTickets',
          'tab.accountM',
          'tab.assetStatistics',          
          'tab.updateLoginPwd',   
          'tab.updateTradePwd',  
          'tab.resetTradePwd',    
          'tab.resetTradePwdContent', 
          'tab.updatePhn',  
          'tab.updatePhnStep2',
          'withdraw ',             
          'withdrawFee', 
          'withdrawIptPwd',
          'quickPayment',  
          'wechatPayment', 
          'tab.myInvest',
          'tab.myInvestNew', 
          'tab.investDetail',
          'login',   
          'record',  
          'recordInfo',
          'tab.investZzb',
          'tab.myTasks'].join();//需要登录的页面
      //委托
      var deferred= $q.defer();
      //判断是否登录
      var isLogined=function(){
        // sqLiteLoginInfo.getSessionId(function(sid){
        //   console.log("1");
        //   if(sid){
        //      deferred.resolve({logined:1});
        //   }else{
        //     deferred.resolve({logined:0});
        //   }
        // })
        // return deferred.promise;
      }

     // isLogined().then(function(loginInfo){
      
        console.log("当前页面的状态名称："+stateName);
        if(localStorage.token=="undefined"||localStorage.token==''||localStorage.token==null){
          //未登录
          if(loginname.indexOf(stateName)>=0){
            $state.go("login"); 
          }else{
            $state.go(stateName, stateParams);
          }
        }else if(localStorage.token!="undefined"||localStorage.token!=''||localStorage.token!=null){
           $state.go(stateName, stateParams);
        }
     // });
      
      
    },
    back:function(){
      // back 的时候
      var backHistoryId = $ionicHistory.currentHistoryId();
      var backViewId = $ionicHistory.currentView().viewId;
      var backView = $ionicHistory.viewHistory().histories[backHistoryId].stack.filter(function (v) {
        return v.stateId === $stateParams.backViewId;
      })[0];
      $ionicHistory.backView(backView);
      $ionicHistory.goBack();
    }
  }
})
//滚动加载列表方法
.factory('scrollList',function(){
  var scrollList=[];
  return {
    getAll:function(){
      return scrollList;
    },
    //append必须为数组
    add:function(append){
      scrollList = scrollList.concat(append);
      return scrollList;
    },
    init:function(){
      scrollList = [];
      return this;
    }
  }
})
//一些公共函数
.factory('commonFunction',function(){
  return {
    /*base64加密*/
    base64encode:function(str){
      var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";  
      var out, i, len;  
      var c1, c2, c3;  
      len = str.length;  
      i = 0;  
      out = "";  
      while (i < len) {  
          c1 = str.charCodeAt(i++) & 0xff;  
          if (i == len) {  
              out += base64EncodeChars.charAt(c1 >> 2);  
              out += base64EncodeChars.charAt((c1 & 0x3) << 4);  
              out += "==";  
              break;  
          }  
          c2 = str.charCodeAt(i++);  
          if (i == len) {  
              out += base64EncodeChars.charAt(c1 >> 2);  
              out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));  
              out += base64EncodeChars.charAt((c2 & 0xF) << 2);  
              out += "=";  
              break;  
          }  
          c3 = str.charCodeAt(i++);  
          out += base64EncodeChars.charAt(c1 >> 2);  
          out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));  
          out += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));  
          out += base64EncodeChars.charAt(c3 & 0x3F);  
      }  
      return out;        
    },
    /*utf16转utf8 */
    utf16to8:function(str){
      var out, i, len, c;  
      out = "";  
      len = str.length;  
      for (i = 0; i < len; i++) {  
          c = str.charCodeAt(i);  
          if ((c >= 0x0001) && (c <= 0x007F)) {  
              out += str.charAt(i);  
          }  
          else   
              if (c > 0x07FF) {  
                  out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));  
                  out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));  
                  out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));  
              }  
              else {  
                  out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));  
                  out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));  
              }  
      }  
      return out;       
    },
    /*获取字符串长度，支持中文*/
    getRealLength:function(str) {
        var realLength = 0, len = str.length, charCode = -1;
        for (var i = 0; i < len; i++) {
            charCode = str.charCodeAt(i);
            if (charCode >= 0 && charCode <= 128){
              realLength += 1;
            }else{
              realLength += 2;
            } 
        }
        return realLength;
    },
    /*截取字符串，支持中文*/
    subRealString:function(str, limiteLen) {  
        var realLength = 0,len = str.length,s = "",charCode = -1;  
        for (var i = 0; i < len; i++) { 
          charCode = str.charCodeAt(i); 
            if (charCode >= 0 && charCode <= 128){
                realLength += 1;
            }else{
                realLength += 2;
            } 
            s += str.charAt(i);  
            if (realLength >= limiteLen) {  
                return s+"...";  
            }  
        }  
        return s;  
    }
  }
})
//极光推送
.factory('jpushService', function() {
  var push;
  return {
    setBadge: function(badge) {
      if (push) {
        console.log('jpush: set badge', badge);
        plugins.jPushPlugin.reSetBadge();
        plugins.jPushPlugin.setBadge(badge);
      }
    },
    setAlias: function(alias) {
      if (push) {
        plugins.jPushPlugin.setAlias(alias)
      }
    },
    check: function() {
      if (window.jpush && push) {
        plugins.jPushPlugin.receiveNotificationIniOSCallback(window.jpush);
        window.jpush = null;
      }
    },
    init: function(notificationCallback) {
      push = window.plugins && window.plugins.jPushPlugin;
      if (push) {
        console.log('jpush: init');
        plugins.jPushPlugin.init();
        plugins.jPushPlugin.setDebugMode(true);
        document.addEventListener("jpush.openNotification", notificationCallback, false);
      }
    }
  };
})

//获取用户基本信息
.factory('baseInfo', function($http,$rootScope, reqRoot, req, tip) {
  return function(callback) {
    req.deviceInfo().then(function(deviceInfo){
      $rootScope.loadingShow();
      $http.post(reqRoot, {
        "id": req.id(),
        "MethodCode":req.MethodCode("LM007"),
        "time":req.time(),
        "signInfo":req.signInfo({
          "sessionId" : deviceInfo.sessionId
        }, deviceInfo.signKey),
        "imei":deviceInfo.imei,//手机唯一标识
        "APPID":deviceInfo.APPID,//客户端id
        "APPVER":deviceInfo.APPVER,//客户端版本
        "MVER":req.MVER(),//手机系统版本
        "MTYPE":req.MTYPE(),//客户端类型
        "PMODEL":deviceInfo.PMODEL,//机型
        "PBRAND":deviceInfo.PBRAND,//手机品牌
        "chid":deviceInfo.chid,//推广渠道号
        "body": {
          "sessionId" : deviceInfo.sessionId
        }
      }).success(function(data){
        $rootScope.loadingHide();
        if(data.returnCode == '1') {
          callback(data.body[0]);
        } else {
          tip(data.returnMsg);
        }
      }).error(function (error) {
        tip("网络忙，请稍后再试……");
      });
    });
  }
})

//存储需要多级返回的页面stateName以及需要返回的级数
.factory('backMore', function() {
  return {
    'tab.investSuccess': -3,//投资成功页面返回到投资列表
    'tab.resetTradePwdContent': -2//重新设置交易密码之后返回到密码管理页面
  }
})

.filter("formatMoney",function(){
    return function(num,step){
        var out = Math.ceil(num*100)*1.0/100;
        return out;
    }
})
.filter("formatMoneyFloor",function(){//金额保留2位小数并向下取整
    return function(num){
        var out = Math.floor(num*10000/100)*1.0/100;
        return out;
    }
})
.filter("formatMoneyRound",function(){//金额四舍五入
    return function(num){
        var out = Math.round(num*10000/100)*1.0/100;
        return out;
    }
})
.filter("memberCenterMoneyFormat", function() {
  function formatMoney(s, n) {
    n = n >= 0 && n <= 20 ? n : 2;
    s = parseFloat((s + "").replace(/[^\d\.-]/g, "")).toFixed(n) + "";
    var l = s.split(".")[0].split("").reverse(),
    r = s.split(".")[1];
    t = "";
    for (i = 0; i < l.length; i++) {
        t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? "," : "");
    }
    return t.split("").reverse().join("") + "." + r;
  }
  return function(value) {
    if(value == '') {
      value = 0;
    }
    if(value >= 100000) {
      value = parseFloat(value / 10000);
      return formatMoney(value,2) + '万';
    }
    return formatMoney(value,2);
  }
})
//手机号中间用*号隐藏
.filter("formatMoblie",function(){
  return function(phone){
    if(phone && Object.prototype.toString.call(phone) === "[object String]" && phone != ''){
      return phone.substring(0,3)+'****'+phone.substring(phone.length-4,phone.length);
    }else{
      return '';
    }
  }
})
//真实姓名结尾用*号隐藏
.filter("frormatRelNm",function(){
  return function(name){
    if(name && Object.prototype.toString.call(name) === "[object String]" && name != ''){
      if(name.length == 2){
          return name.substring(0,1)+'*';
      }else{
          return name.substring(0,1)+'**';
      }
    }else{
      return '';
    }
  }
})
 //身份证号中间用*号隐藏
.filter("formatIdNo",function(){
  return function(idNo){
    if(idNo && Object.prototype.toString.call(idNo) === "[object String]" && idNo != ''){
      return idNo.substring(0,4)+'********'+idNo.substring(idNo.length-4,idNo.length);
    }else{
      return '';
    }
  }
})
 //银行卡号中间用*号隐藏
.filter("formatCardNo",function(){
  return function(cardNo){
    if(cardNo && Object.prototype.toString.call(cardNo) === "[object String]" && cardNo != ''){
      return cardNo.substring(0,4)+' **** **** '+cardNo.substring(cardNo.length-4,cardNo.length);
    }else{
      return '';
    }
  }
})
.filter("passwordFormat",function(){
  return function(num){
    if(num && Object.prototype.toString.call(num) === "[object String]" && num != ''){
      return num.replace(/./g,'·');
    }else{
      return '';
    }
  }
})
;

/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/*
 * Configurable variables. You may need to tweak these to be compatible with
 * the server-side, but the defaults work in most cases.
 */
(function(w){
	var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */
	var b64pad  = ""; /* base-64 pad character. "=" for strict RFC compliance   */
	var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */
	
	/*
	 * These are the functions you'll usually want to call
	 * They take string arguments and return either hex or base-64 encoded strings
	 */
	function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}
	function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}
	function str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}
	function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }
	function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }
	function str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }
	
	var _MD5={
		hex:hex_md5,
		b64:b64_md5,
		str:str_md5,
		hex_hmac:hex_hmac_md5,
		b64_hmac:b64_hmac_md5,
		str_hmac:str_hmac_md5
	}
	//像外部暴漏的接口
	window.MD5=_MD5;
	/*
	 * Perform a simple self-test to see if the VM is working
	 */
	function md5_vm_test()
	{
	  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
	}
	
	/*
	 * Calculate the MD5 of an array of little-endian words, and a bit length
	 */
	function core_md5(x, len)
	{
	  /* append padding */
	  x[len >> 5] |= 0x80 << ((len) % 32);
	  x[(((len + 64) >>> 9) << 4) + 14] = len;
	
	  var a =  1732584193;
	  var b = -271733879;
	  var c = -1732584194;
	  var d =  271733878;
	
	  for(var i = 0; i < x.length; i += 16)
	  {
		var olda = a;
		var oldb = b;
		var oldc = c;
		var oldd = d;
	
		a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
		d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
		c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
		b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
		a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
		d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
		c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
		b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
		a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
		d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
		c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
		b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
		a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
		d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
		c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
		b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);
	
		a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
		d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
		c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
		b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
		a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
		d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
		c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
		b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
		a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
		d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
		c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
		b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
		a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
		d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
		c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
		b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);
	
		a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
		d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
		c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
		b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
		a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
		d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
		c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
		b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
		a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
		d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
		c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
		b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
		a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
		d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
		c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
		b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);
	
		a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
		d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
		c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
		b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
		a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
		d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
		c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
		b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
		a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
		d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
		c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
		b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
		a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
		d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
		c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
		b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);
	
		a = safe_add(a, olda);
		b = safe_add(b, oldb);
		c = safe_add(c, oldc);
		d = safe_add(d, oldd);
	  }
	  return Array(a, b, c, d);
	
	}
	
	/*
	 * These functions implement the four basic operations the algorithm uses.
	 */
	function md5_cmn(q, a, b, x, s, t)
	{
	  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
	}
	function md5_ff(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
	}
	function md5_gg(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
	}
	function md5_hh(a, b, c, d, x, s, t)
	{
	  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	}
	function md5_ii(a, b, c, d, x, s, t)
	{
	  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
	}
	
	/*
	 * Calculate the HMAC-MD5, of a key and some data
	 */
	function core_hmac_md5(key, data)
	{
	  var bkey = str2binl(key);
	  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);
	
	  var ipad = Array(16), opad = Array(16);
	  for(var i = 0; i < 16; i++)
	  {
		ipad[i] = bkey[i] ^ 0x36363636;
		opad[i] = bkey[i] ^ 0x5C5C5C5C;
	  }
	
	  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
	  return core_md5(opad.concat(hash), 512 + 128);
	}
	
	/*
	 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	 * to work around bugs in some JS interpreters.
	 */
	function safe_add(x, y)
	{
	  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  return (msw << 16) | (lsw & 0xFFFF);
	}
	
	/*
	 * Bitwise rotate a 32-bit number to the left.
	 */
	function bit_rol(num, cnt)
	{
	  return (num << cnt) | (num >>> (32 - cnt));
	}
	
	/*
	 * Convert a string to an array of little-endian words
	 * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
	 */
	function str2binl(str)
	{
	  var bin = Array();
	  var mask = (1 << chrsz) - 1;
	  for(var i = 0; i < str.length * chrsz; i += chrsz)
		bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);
	  return bin;
	}
	
	/*
	 * Convert an array of little-endian words to a string
	 */
	function binl2str(bin)
	{
	  var str = "";
	  var mask = (1 << chrsz) - 1;
	  for(var i = 0; i < bin.length * 32; i += chrsz)
		str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);
	  return str;
	}
	
	/*
	 * Convert an array of little-endian words to a hex string.
	 */
	function binl2hex(binarray)
	{
	  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
	  var str = "";
	  for(var i = 0; i < binarray.length * 4; i++)
	  {
		str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +
			   hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);
	  }
	  return str;
	}
	
	/*
	 * Convert an array of little-endian words to a base-64 string
	 */
	function binl2b64(binarray)
	{
	  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
	  var str = "";
	  for(var i = 0; i < binarray.length * 4; i += 3)
	  {
		var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)
					| (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )
					|  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);
		for(var j = 0; j < 4; j++)
		{
		  if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;
		  else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);
		}
	  }
	  return str;
	}

})(window)
/** 
 * DES 加密算法 
 * 
 * 该函数接受一个 8 字节字符串作为普通 DES 算法的密钥（也就是 64 位，但是算法只使用 56 位），或者接受一个 24 字节字符串作为 3DES 
 * 算法的密钥；第二个参数是要加密或解密的信息字符串；第三个布尔值参数用来说明信息是加密还是解密；接下来的可选参数 mode 如果是 0 表示 ECB 
 * 模式，1 表示 CBC 模式，默认是 ECB 模式；最后一个可选项是一个 8 字节的输入向量字符串（在 ECB 模式下不使用）。返回的密文是字符串。 
 * 
 * 参数： <br> 
 * key: 8字节字符串作为普通 DES 算法的密钥,或 24 字节字符串作为 3DES <br> 
 * message： 加密或解密的信息字符串<br> 
 * encrypt: 布尔值参数用来说明信息是加密还是解密<br> 
 * mode: 1:CBC模式，0:ECB模式(默认)<br> 
 * iv:<br> 
 * padding: 可选项, 8字节的输入向量字符串（在 ECB 模式下不使用） 
 */
//des http://www.cnblogs.com/bullub/archive/2013/05/02/3054798.html
//this takes the key, the message, and whether to encrypt or decrypt
function des (key, message, encrypt, mode, iv, padding) {
    if(encrypt) //如果是加密的话，首先转换编码
        message = unescape(encodeURIComponent(message));
    //declaring this locally speeds things up a bit
    var spfunction1 = new Array (0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004);
    var spfunction2 = new Array (-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000);
    var spfunction3 = new Array (0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200);
    var spfunction4 = new Array (0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080);
    var spfunction5 = new Array (0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100);
    var spfunction6 = new Array (0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010);
    var spfunction7 = new Array (0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002);
    var spfunction8 = new Array (0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000);
 
    //create the 16 or 48 subkeys we will need
    var keys = des_createKeys (key);
    var m=0, i, j, temp, temp2, right1, right2, left, right, looping;
    var cbcleft, cbcleft2, cbcright, cbcright2
    var endloop, loopinc;
    var len = message.length;
    var chunk = 0;
    //set up the loops for single and triple des
    var iterations = keys.length == 32 ? 3 : 9; //single or triple des
    if (iterations == 3) {looping = encrypt ? new Array (0, 32, 2) : new Array (30, -2, -2);}
    else {looping = encrypt ? new Array (0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array (94, 62, -2, 32, 64, 2, 30, -2, -2);}
 
    //pad the message depending on the padding parameter
    if (padding == 2) message += "        "; //pad the message with spaces
    else if (padding == 1) {
        if(encrypt) {
            temp = 8-(len%8);
            message += String.fromCharCode(temp,temp,temp,temp,temp,temp,temp,temp);
            if (temp===8) len+=8;
        }
    } //PKCS7 padding
    else if (!padding) message += "\0\0\0\0\0\0\0\0"; //pad the message out with null bytes
 
    //store the result here
    var result = "";
    var tempresult = "";
 
    if (mode == 1) { //CBC mode
        cbcleft = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);
        cbcright = (iv.charCodeAt(m++) << 24) | (iv.charCodeAt(m++) << 16) | (iv.charCodeAt(m++) << 8) | iv.charCodeAt(m++);
        m=0;
    }
 
    //loop through each 64 bit chunk of the message
    while (m < len) {
        left = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);
        right = (message.charCodeAt(m++) << 24) | (message.charCodeAt(m++) << 16) | (message.charCodeAt(m++) << 8) | message.charCodeAt(m++);
 
        //for Cipher Block Chaining mode, xor the message with the previous result
        if (mode == 1) {if (encrypt) {left ^= cbcleft; right ^= cbcright;} else {cbcleft2 = cbcleft; cbcright2 = cbcright; cbcleft = left; cbcright = right;}}
 
        //first each 64 but chunk of the message must be permuted according to IP
        temp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);
        temp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);
        temp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);
        temp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);
        temp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);
 
        left = ((left << 1) | (left >>> 31));
        right = ((right << 1) | (right >>> 31));
 
        //do this either 1 or 3 times for each chunk of the message
        for (j=0; j<iterations; j+=3) {
            endloop = looping[j+1];
            loopinc = looping[j+2];
            //now go through and perform the encryption or decryption
            for (i=looping[j]; i!=endloop; i+=loopinc) { //for efficiency
                right1 = right ^ keys[i];
                right2 = ((right >>> 4) | (right << 28)) ^ keys[i+1];
                //the result is attained by passing these bytes through the S selection functions
                temp = left;
                left = right;
                right = temp ^ (spfunction2[(right1 >>> 24) & 0x3f] | spfunction4[(right1 >>> 16) & 0x3f]
                    | spfunction6[(right1 >>>  8) & 0x3f] | spfunction8[right1 & 0x3f]
                    | spfunction1[(right2 >>> 24) & 0x3f] | spfunction3[(right2 >>> 16) & 0x3f]
                    | spfunction5[(right2 >>>  8) & 0x3f] | spfunction7[right2 & 0x3f]);
            }
            temp = left; left = right; right = temp; //unreverse left and right
        } //for either 1 or 3 iterations
 
        //move then each one bit to the right
        left = ((left >>> 1) | (left << 31));
        right = ((right >>> 1) | (right << 31));
 
        //now perform IP-1, which is IP in the opposite direction
        temp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);
        temp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);
        temp = ((right >>> 2) ^ left) & 0x33333333; left ^= temp; right ^= (temp << 2);
        temp = ((left >>> 16) ^ right) & 0x0000ffff; right ^= temp; left ^= (temp << 16);
        temp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);
 
        //for Cipher Block Chaining mode, xor the message with the previous result
        if (mode == 1) {if (encrypt) {cbcleft = left; cbcright = right;} else {left ^= cbcleft2; right ^= cbcright2;}}
        tempresult += String.fromCharCode ((left>>>24), ((left>>>16) & 0xff), ((left>>>8) & 0xff), (left & 0xff), (right>>>24), ((right>>>16) & 0xff), ((right>>>8) & 0xff), (right & 0xff));
 
        chunk += 8;
        if (chunk == 512) {result += tempresult; tempresult = ""; chunk = 0;}
    } //for every 8 characters, or 64 bits in the message
 
    //return the result as an array
    result += tempresult;
    result = result.replace(/\0*$/g, "");
 
    if(!encrypt ) { //如果是解密的话，解密结束后对PKCS7 padding进行解码，并转换成utf-8编码
        if(padding === 1) { //PKCS7 padding解码
            var len = result.length, paddingChars = 0;
            len && (paddingChars = result.charCodeAt(len-1));
            (paddingChars <= 8) && (result = result.substring(0, len - paddingChars));
        }
        //转换成UTF-8编码
        result = decodeURIComponent(escape(result));
    }
 
    return result;
} //end of des
 
 
 
//des_createKeys
//this takes as input a 64 bit key (even though only 56 bits are used)
//as an array of 2 integers, and returns 16 48 bit keys
function des_createKeys (key) {
    //declaring this locally speeds things up a bit
    var pc2bytes0  = new Array (0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204);
    var pc2bytes1  = new Array (0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101);
    var pc2bytes2  = new Array (0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808);
    var pc2bytes3  = new Array (0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000);
    var pc2bytes4  = new Array (0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010);
    var pc2bytes5  = new Array (0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420);
    var pc2bytes6  = new Array (0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002);
    var pc2bytes7  = new Array (0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800);
    var pc2bytes8  = new Array (0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002);
    var pc2bytes9  = new Array (0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408);
    var pc2bytes10 = new Array (0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020);
    var pc2bytes11 = new Array (0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200);
    var pc2bytes12 = new Array (0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010);
    var pc2bytes13 = new Array (0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105);
 
    //how many iterations (1 for des, 3 for triple des)
    var iterations = key.length > 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys
    //stores the return keys
    var keys = new Array (32 * iterations);
    //now define the left shifts which need to be done
    var shifts = new Array (0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);
    //other variables
    var lefttemp, righttemp, m=0, n=0, temp;
 
    for (var j=0; j<iterations; j++) { //either 1 or 3 iterations
        var left = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);
        var right = (key.charCodeAt(m++) << 24) | (key.charCodeAt(m++) << 16) | (key.charCodeAt(m++) << 8) | key.charCodeAt(m++);
 
        temp = ((left >>> 4) ^ right) & 0x0f0f0f0f; right ^= temp; left ^= (temp << 4);
        temp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);
        temp = ((left >>> 2) ^ right) & 0x33333333; right ^= temp; left ^= (temp << 2);
        temp = ((right >>> -16) ^ left) & 0x0000ffff; left ^= temp; right ^= (temp << -16);
        temp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);
        temp = ((right >>> 8) ^ left) & 0x00ff00ff; left ^= temp; right ^= (temp << 8);
        temp = ((left >>> 1) ^ right) & 0x55555555; right ^= temp; left ^= (temp << 1);
 
        //the right side needs to be shifted and to get the last four bits of the left side
        temp = (left << 8) | ((right >>> 20) & 0x000000f0);
        //left needs to be put upside down
        left = (right << 24) | ((right << 8) & 0xff0000) | ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0);
        right = temp;
 
        //now go through and perform these shifts on the left and right keys
        for (var i=0; i < shifts.length; i++) {
            //shift the keys either one or two bits to the left
            if (shifts[i]) {left = (left << 2) | (left >>> 26); right = (right << 2) | (right >>> 26);}
            else {left = (left << 1) | (left >>> 27); right = (right << 1) | (right >>> 27);}
            left &= -0xf; right &= -0xf;
 
            //now apply PC-2, in such a way that E is easier when encrypting or decrypting
            //this conversion will look like PC-2 except only the last 6 bits of each byte are used
            //rather than 48 consecutive bits and the order of lines will be according to
            //how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7
            lefttemp = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf]
                | pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf]
                | pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf]
                | pc2bytes6[(left >>> 4) & 0xf];
            righttemp = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf]
                | pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf]
                | pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf]
                | pc2bytes13[(right >>> 4) & 0xf];
            temp = ((righttemp >>> 16) ^ lefttemp) & 0x0000ffff;
            keys[n++] = lefttemp ^ temp; keys[n++] = righttemp ^ (temp << 16);
        }
    } //for each iterations
    //return the keys we've created
    return keys;
} //end of des_createKeys
function genkey(key, start, end) {
    //8 byte / 64 bit Key (DES) or 192 bit Key
    return {key:pad(key.slice(start, end)),vector: 1};
}
function pad(key) {
    for (var i = key.length; i<24; i++) {
        key+="0";
    }
    return key;
}
 
var des3iv = '01234567';
var DES3 = {
    //3DES加密，CBC/PKCS5Padding
    encrypt:function(key,input){
        var genKey = genkey(key, 0, 24);
        return btoa(des(genKey.key, input, 1, 1, des3iv, 1));
    },
    ////3DES解密，CBC/PKCS5Padding
    decrypt:function(key,input){
        var genKey = genkey(key, 0, 24); 
        return des(genKey.key, atob(input), 0, 1, des3iv, 1); 
    }
};
angular.module('starter.controllers', ["ngCordova",'starter.services','starter.config'])
.controller('HomeCtrl', function($scope,$http,$rootScope,tip,$stateParams,scrollList,msgSize,$timeout,$ionicScrollDelegate,state,$ionicPopup,imgUrl,bdList,bdDz,$ionicLoading,$ionicSlideBoxDelegate,bdDetailJl,$cordovaStatusbar,plbd) {
  //初始化榜当列表数据
  var vm = $scope.vm ={
    moredata: false,
    messages: [],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
    loginFlg:false,
    bigImage : false,
    url:'',
    slidImg:'',
    hidetabs:false,
    dZFlg:false,
    bdplcontent:"",
    bdid:"",
    logoFlg:false,
    msgFlg:false,
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;
      vm.getData(true);
      vm.moredata=false
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
    //跳转登录       
    toLogin:function(){
      state.go('login');
    },
    tomemberCenter:function(){
      state.go('memberCenter');

    },
    msgSize : function(){
      var data = {
        accountID: localStorage.gcid,
      };
      $http({
        method: 'POST',
        url: msgSize,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
             if(data.datas>0){
              vm.msgFlg = true
            }else{
              vm.msgFlg = false
             }
         
           
          }else{
            $rootScope.tip(data.msg);
          }
        }).error(function(error) {
          $rootScope.tip("网络忙，请稍后再试……");
  
        });
    },

   
      //点击图片放大
      showBigImage :function (imgTemp) {  //传递一个参数（图片的URl）imageName
          // vm.slidImg = JSON.parse(imgTemp)
          vm.bigImage = true
          //  vm.hidetabs = true
          //  vm.logoFlg = true 
          // StatusBar.hide()
          vm.url = imgUrl+imgTemp+""        

      },
          //点击图片放大
    // showBigImage :function (imgTemp) {  //传递一个参数（图片的URl）imageName
    //         vm.slidImg = JSON.parse(imgTemp)
    //         vm.bigImage = true
    //         vm.hidetabs = true
    //         StatusBar.hide()
    //         vm.myScrollL()
    
    //     },
    myScrollL:function(){ 
        var mySwiper = new Swiper('.swiper-container', {
        loop: true, // 循环模式选项
        // 如果需要分页器
        pagination: {
          el: '.swiper-pagination',
        },
      
        // 如果需要滚动条
        scrollbar: {
          el: '.swiper-scrollbar',
        },
      })
    },
    //初始默认大图是隐藏的
    hideBigImage : function () {
        vm.bigImage = false;
        // vm.hidetabs = false
        // StatusBar.show()
        // vm.logoFlg = false 


    },
    dateFormats:function (data) {
      var date = new Date(data);
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate();
      var Hours =date.getHours(); //时，
      var Minutes	=date.getMinutes(); //分
      var Seconds	=date.getSeconds(); //秒
      if (month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
        var currentdate =year+ seperator1+month + seperator1 + strDate;
      return currentdate;
    },
   
    dianzan:function(id,index){
      $http.get(bdDz+"?bdid="+id+"").success(function(data){

        if(data.code=="1000"){
          var aElements=document.getElementsByClassName("dzimg");
          var aElementsize=document.getElementsByClassName("dzsize");
          var aElement1s=document.getElementsByClassName("gifshow");

          for(var i=0;i<aElements.length;i++) {
              if(aElements[i].getAttribute("imgindex")==index){
                aElements[i].src="img/bd/List_praise_on.png";
                var  size = aElementsize[i].innerHTML;
                aElementsize[i].innerHTML=parseInt(size)+parseInt("1")
              }
          }
          for(var i=0;i<aElement1s.length;i++) {
            if(aElement1s[i].getAttribute("gifShow")==index){
                aElement1s[i].style.display="block"
                vm.index =i
                vm.hide(i);
                return;
            }
         }
        }
      }).error(function (error) {
          
           $rootScope.tip("网络忙，请稍后再试……");
        
      });

    },
    hide :function(i){
      setTimeout(function(){
        var aElement1s=document.getElementsByClassName("gifshow");

        aElement1s[i].style.display="none"

      },1000);
    },
    bdDetail:function(data){
      state.go("bdDetail",{bdData:JSON.stringify(data)});

    },
    getData:function (isInit){
      $ionicLoading.show()
      $http.get(bdList+"?pageIndex="+vm.pagination.currentPage+"&pageSize=10").success(function(data){
      $ionicLoading.hide()

         if(data.datas.length!="0"){
           if(isInit){
            for(var i=0;i<data.datas.length;i++){
              var title =  data.datas[i].bdcontent.split('?')[1]
              var cont =  data.datas[i].bdcontent.split('?')[0]

              data.datas[i].title =title
              data.datas[i].cont =cont

              if(data.datas[i].ylzd!=undefined){
                var imgTemp = data.datas[i].ylzd.split(';')
             
                data.datas[i].imgTemp=imgTemp

              }
           
            }
              vm.messages= scrollList.init().add(data.datas);
              $ionicSlideBoxDelegate.update();

            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
  }
 }
 //如果已经加载了就不加载
//  if( $rootScope.logined==0){
//   $rootScope.logined=  1
     vm.init(1);
//  }

 if(vm.tel!=''&& vm.tel!=undefined){
  vm.msgSize()
}

})
//人才
.controller('FindCtrl', function($scope,$ionicHistory,$http,$ionicPlatform,$ionicSlideBoxDelegate,$timeout,$ionicPopup,$rootScope,req,state,reqRoot,tip,sqLiteLoginInfo,baseInfo) {

  $scope.showFlg  = 0 ;
  $scope.menuOn = function(index){
    $scope.showFlg = index
  }
 
})

//青贝售卖
.controller('mbqSellCtrl', function($rootScope,$scope,$http,sgMbq, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,getPrice,$cordovaDevice,mbqSale) {

  $scope.showFlg  = 0 ;
  $scope.menuOn = function(index){
    $scope.showFlg = index
  }
  $scope.allnum = 0
  $scope.amount = 0
  $scope.data  = {
     sqbNum :"",
     sqbPrice :"",
     cqbNum :"",
     cqbPrice :"",
     
  };
  $scope.calc = function(){
    if($scope.showFlg ==0){
      $scope.allnum = Number($scope.data.cqbNum*$scope.data.cqbPrice).toFixed(2)

    }else{
      $scope.allnum = Number($scope.data.sqbNum*$scope.data.sqbPrice).toFixed(2)

    }

  },
  $scope.getQb=function(){
    var data = {
      phone:localStorage.telephone
    };
    $http({
      method: 'POST',
      url: getPrice,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data) {
        if(data.code=='1000'){
          $scope.amount = data.datas
        }else{
           $rootScope.tip(data.msg);
        }
      }).error(function(error) {
         $rootScope.tip("网络忙，请稍后再试……");

      });
  },
  $scope.POrders=function(){
    if( $scope.showFlg ==0){ //0为出售
   
     
      if($scope.data.cqbNum==''){
        $rootScope.tip("请输入出售数量");
        return false;

      }else if($scope.data.cqbPrice==''){
        $rootScope.tip("请输入出售金额");
        return false;

      }
      if($scope.amount<$scope.data.cqbNum){
        $rootScope.tip("出售数量不能小于总资产");
        return false;

      }
      var data = {
        qbscfbrid: localStorage.gcid,
        qbscrmb: $scope.data.cqbPrice ,
        qbscshuliang:$scope.data.cqbNum
      };
      $http({
        method: 'POST',
        url: mbqSale,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
            $rootScope.tip("发布成功");
  
          }else{
            $rootScope.tip(data.msg);
          }
        }).error(function(error) {
          $rootScope.tip("网络忙，请稍后再试……");
  
        });
    }else{//收购
      if($scope.data.sqbNum==''){
        $rootScope.tip("请输收购数量");
        return false;

      }else if($scope.data.sqbPrice==''){
        $rootScope.tip("请输入收购金额");
        return false;

      }
      var data = {
        qbscfbrid: localStorage.gcid,
        qbscrmb: $scope.data.sqbPrice ,
        qbscshuliang:$scope.data.sqbNum
      };
      $http({
        method: 'POST',
        url: sgMbq,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
            $rootScope.tip("发布成功");
  
          }else{
            $rootScope.tip(data.msg);
          }
        }).error(function(error) {
          $rootScope.tip("网络忙，请稍后再试……");
  
        });

    }
  }
  $scope.getQb()
})






//个人中心
.controller('MemberCenterCtrl', function($rootScope, $scope, $q, $timeout, $stateParams,$ionicHistory,$http,$ionicPopup,state,memberCenter,reqRoot,req,capitalQuery,tip,_responseData,withdrawFeeFactory,sqLiteLoginInfo,zcInfo,httpService,upPhoto,exitLogin,msgSize, $ionicLoading) {
  $rootScope.imgMsgFlg = false;

  //初始化数据占位
  $scope.data={
    level: 1,
    photo:"img/photo.png",
    userName:"",
    totAmt:"0.00",
    availBal:"0.00",
    accumulateRevenue:"0.00",
    srpIntAmt:"0.00",
    availInvestCouponCnt:"0",
    payCnt:"0",
    bidCnt:"0",
    closeCnt:"0",
    transferCnt:"0",
    latestMstRtnDt:"",
    latestMstRtnLnAmt:"*",
    dailyRevenue:"0.00",
    file:"",
    photo:localStorage.gcphoto,
    size:"",
    bageFlg:false
  };



  $scope.phone=localStorage.telephone
  $scope.exitLogin=function(){
    var data = {
      accountID: localStorage.token,
      phoneNO: localStorage.telephone
    };
    $http({
      method: 'POST',
      url: exitLogin,
      dataType: 'json',
      data: data,
      }).success(function(data) {
        if(data.code=='1000'){
           $rootScope.tip("退出成功");
          localStorage.clear();
          state.go("tab.home")
          $ionicHistory.clearCache()
        }else{
          $rootScope.tip("退出成功");
          $ionicHistory.clearCache()

          localStorage.clear();
          state.go("tab.home")
          //  $rootScope.tip(data.msg);
        }
      }).error(function(error) {
         $rootScope.tip("网络忙，请稍后再试……");

      });

  },
   $scope.init = function(){
    var data = {
      accountID: localStorage.gcid,
    };
    $http({
      method: 'POST',
      url: msgSize,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data) {
        if(data.code=='1000'){
          if(data.datas >"0"){
            $scope.data.bageFlg = true
            if(data.datas>"99"){
              $scope.data.size= "99+"
             }else{
              $scope.data.size= data.datas
             }
          }else{
            $scope.data.bageFlg = false

          }
          
       
         
        }else{
          $rootScope.tip(data.msg);
        }
      }).error(function(error) {
        $rootScope.tip("网络忙，请稍后再试……");

      });
  }

 
  $scope.upPhoto=function(){
    $("#avatar_load").bind('change',function(){
         var $form=$("form")[0];
         var formData = new FormData($form); 
         $ionicLoading.show({
          template: '头像上传中...'
        });
          $.ajax({
            type: "POST",
            enctype:'multipart/form-data',
            url: upPhoto,
            data: formData,
            cache:false,
            processData:false,
            contentType:false,
            success: function(data){
            if(data.code=='1000'){
                $ionicLoading.hide();
                $rootScope.tip("上传头像成功")

                $scope.data.photo=data.msg
                localStorage.gcphoto=data.msg
            }else{
                $rootScope.tip(data.msg);
            }
            
            }
        });
    })
  }

$scope.upPhoto()
$scope.init()
})


//账户管理-个人信息
.controller('UserInfoCtrl', function($scope,$rootScope,$http,$stateParams,tip,req,reqRoot,state,commonFunction){
  $scope.data = {
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
 }
 
 
  //真实姓名结尾用*号隐藏
  $scope.frormatRelNm = function(name){
    if(name && Object.prototype.toString.call(name) === "[object String]" && name != ''){
      if(name.length == 2){
          return name.substring(0,1)+'*';
      }else{
          return name.substring(0,1)+'**';
      }
    }else{
      return '';
    }
  }

  //身份证号中间用*号隐藏
  $scope.formatIdNo = function(idNo){
    if(idNo && Object.prototype.toString.call(idNo) === "[object String]" && idNo != ''){
      return idNo.substring(0,4)+'****'+idNo.substring(idNo.length-4,idNo.length);
    }else{
      return '';
    }
  }

  //手机号中间用*号隐藏
  $scope.formatMoblie = function(phone){
    if(phone && Object.prototype.toString.call(phone) === "[object String]" && phone != ''){
      return phone.substring(0,3)+'****'+phone.substring(phone.length-4,phone.length);
    }else{
      return '';
    }
  }

  function getTime (t) {
    if(t == '') {
      return '';
    }
    var t = new Date(t);
    var y = t.getFullYear() + '';
    var m = t.getMonth() + 1;
    var m = ((m >= 10) ? m : ('0' + m)) + '';
    var d = ((t.getDate() >= 10) ? t.getDate() : ('0' + t.getDate())) + '';
    return (y + m + d);
  }
})

//账户管理
.controller('AccountMCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService) {

   //初始化数据占位
   $scope.data={
    level: 1,
    photo:"img/photo.png",
    userName:"",
    totAmt:"0.00",
    availBal:"0.00",
    accumulateRevenue:"0.00",
    srpIntAmt:"0.00",
    availInvestCouponCnt:"0",
    payCnt:"0",
    bidCnt:"0",
    closeCnt:"0",
    transferCnt:"0",
    latestMstRtnDt:"",
    latestMstRtnLnAmt:"*",
    dailyRevenue:"0.00",
    gcphoto:localStorage.gcphoto,

  };


})



//密码管理
.controller('PasswordMCtrl', function($rootScope,$scope,$timeout, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,sqLiteLoginInfo,commonFunction) {
  //用户是否设置交易密码标志位
  $scope.pwdsetflag =  localStorage.pwdsetflag == '1' ? true : false;//是否已设置交易密码
  
  $scope.setJyPass = function(){
    state.go("setJyPass");
  }
  $scope.upPass = function(){
    state.go("updateLoginPwd");
  }
})


//设置交易密码
.controller('setJyPassCtrl', function($rootScope,$scope,$timeout, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness) {

      $scope.business = {
        password:"",
      };
      //设置交易密码
      $scope.setPassword = function(){
          if($scope.business.password==''){
             $rootScope.tip("请输入交易密码");
            return 
          }
          var data = {
            gcphone:localStorage.telephone,
            jymm:  $scope.business.password
          };
          $http({
            method: 'POST',
            url: setbusiness,
            headers: {  
              'Authorization': localStorage.token,
              'phoneNO' : localStorage.telephone,
            },  
            dataType: 'json',
            data: data,
            }).success(function(data) {
              if(data.code=='1000'){
                 $rootScope.tip("设置交易密码成功");

              }else{
                 $rootScope.tip(data.msg);
              }
            }).error(function(error) {
               $rootScope.tip("网络忙，请稍后再试……");

            });
      }
})


//修改青贝密码
.controller('upjymmCtrl', function($rootScope,$scope,$timeout, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness) {

  $scope.business = {
    password:"",
  };
  //设置交易密码
  $scope.setPassword = function(){
      if($scope.business.password==''){
         $rootScope.tip("请输入交易密码");
        return 
      }
      var data = {
        gcphone:localStorage.telephone,
        jymm:  $scope.business.password
      };
      $http({
        method: 'POST',
        url: setbusiness,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
             $rootScope.tip("修改交易密码成功");

          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
  }
})
//消息中心
.controller('msgCenterCtrl', function($scope,$http,$rootScope,tip,$stateParams,scrollList,$timeout,$ionicScrollDelegate,state,imgUrl,bdList,bdDz,$ionicLoading,$ionicSlideBoxDelegate,msgSize,msgList) {

  //初始化榜当列表数据
  var vm = $scope.vm ={
    moredata: false,
    messages: [],
    messagess:[],
        pagination: {
      currentPage: 1
    },
		
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
  
    getData:function (isInit){
      $ionicLoading.show()
      var data = {
        accountID: localStorage.gcid,
        isread: "1",
        pageIndex:vm.pagination.currentPage,
        pageSize: "5"
      };
      $http({
        method: 'POST',
        url: msgList,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data){
          $ionicLoading.hide()
         if(data.datas.length!="0"){
           if(isInit){
              vm.messagess= scrollList.init().add(data.datas);
              $ionicSlideBoxDelegate.update();
              vm.isread(true)
  
            }else{
               vm.messagess=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
               vm.isread(false)

            }
         }else{
               vm.isread(true)

               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
   
        

  },

  isread:function(isInit){
    $ionicLoading.show()
    var data = {
      accountID: localStorage.gcid,
      isread: "0",
      pageIndex:vm.pagination.currentPage,
      pageSize: "5"
    };
    $http({
      method: 'POST',
      url: msgList,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data){
      $ionicLoading.hide()
       if(data.datas.length!="0"){
         if(isInit){
            vm.messages= scrollList.init().add(data.datas);
            $ionicSlideBoxDelegate.update();

          }else{
             vm.messages=scrollList.add(data.datas);
             $scope.$broadcast('scroll.infiniteScrollComplete');
             $ionicScrollDelegate.resize();
          }
       }else{
             vm.moredata = true;
       }
   }).error(function (error) {
       
        $rootScope.tip("网络忙，请稍后再试……");
       if(!isInit){
               //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
               var positon = $ionicScrollDelegate.getScrollPosition();
               $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
               $scope.$broadcast('scroll.infiniteScrollComplete');
       }
   });
  }
 }
 vm.init(1);



})

//榜单发布
.controller('bdFbCtrl', function($rootScope,$scope,$timeout,$ionicLoading, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness,fbBd,bdyl) {

    $scope.bd = {
      miaoshu:"",
      amount:"",
      id:0,
      title:"",
      temp:""
    };
    $scope.ajaxFlg = true ;
    $("#bdhyid").val(localStorage.gcid)
    //发布榜单
    $scope.fbBd = function(){
        $scope.bd.miaoshu  =   $scope.bd.temp+"?"+$scope.bd.title
        $("#bdmiaoshu").val( $scope.bd.miaoshu )
        if($scope.bd.title==''){
          $rootScope.tip("请输入榜单标题");
         return 
       }
        if($scope.bd.miaoshu==''){
           $rootScope.tip("请输入榜单描述");
          return 
        }
        if($scope.bd.amount==''){
           $rootScope.tip("请输入悬赏青贝数");
          return 
        }
        if($scope.bd.amount<=0){
          $rootScope.tip("悬赏金额不能小于0");
         return 
        }
        if(localStorage.amount<=0){
          $rootScope.tip("账户青贝余额不足");
         return 
        }
        var $form=$("form")[0];
        var formData = new FormData($form); 
        $scope.ajaxFlg = false ;
        $ionicLoading.show({
          template: '榜单发布中...'
        });
         $.ajax({
               type: "POST",
               enctype:'multipart/form-data',
               url: fbBd,
               data: formData,
               headers: {  
                'Authorization': localStorage.token,
                'phoneNO' : localStorage.telephone,
              },  
               cache:false,
               processData:false,
               contentType:false,
               success: function(data){
                $scope.ajaxFlg = true ;
                if(data.code=='1000'){
                  $ionicLoading.hide()
                   $rootScope.tip("榜单发布成功")
                  state.go("tab.home")
                }else{
                   $rootScope.tip(data.msg);
                }
               
               }
       });
    }
    $scope.creatImg = function(){
      $(".fname").on('change',function(e){
        //将图片转换base64显示
        var img = e.currentTarget.value
        var file = e.target.files[0];
        var reader = new FileReader();
        reader.readAsDataURL(file); // 读出 base64
        reader.onloadend = function () {
           $( e.currentTarget).prev()[0].src=reader.result;
           $scope.addImg()
        }              
      })
    },
    $scope.addBr =function(){
      
      $scope.bd.miaoshu  =$scope.bd.miaoshu+"<br>"
    },

    $scope.addkg =function(){
      
      $scope.bd.miaoshu  =$scope.bd.miaoshu+"&nbsp;"
    },

    $scope.addImg = function(){
      $scope.bd.id++
      var  html ="<div class='item-input item' ><div><img src='img/mine/upimg.png'> <input  style='width: 50px;position: relative; left: -50px;opacity:0;' type='file' name='uploadFile' accept='image/*' class='fname' ng-change='getIMg()' id="+$scope.bd.id+"></div></div>"
      $("#addImg").append(html)

      $scope.creatImg()
   }
})



//活动发布
.controller('hdFbCtrl', function($rootScope, $ionicLoading,$scope,$timeout, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness,hdfb) {

  $scope.bd = {
    hbcontent:"",
    hbjfje:"",
    id:0,
    title:"",
    temp:""
  };
  $scope.ajaxFlg = true ;
  $("#bdhyid").val(localStorage.gcid)
  //发布榜单
  $scope.fbBd = function(){
    $scope.bd.hbcontent  =   $scope.bd.temp+"?"+$scope.bd.title
    $("#bdmiaoshu").val( $scope.bd.hbcontent )
    if($scope.bd.title==''){
      $rootScope.tip("请输入榜单标题");
     return 
     }
      if($scope.bd.hbcontent==''){
         $rootScope.tip("请输入活动描述");
        return 
      }
      if($scope.bd.hbjfje==''){
         $rootScope.tip("请输入活动赏金数量");
        return 
      }
      $scope.bd.hbcontent  =   $scope.bd.hbcontent+"?"+$scope.bd.title
      $("#hdmiaoshu").val($scope.bd.hbcontent)
      var $form=$("form")[0];
      var formData = new FormData($form); 
      $scope.ajaxFlg = false ;
      $ionicLoading.show({
        template: '活动发布中...'
      });
       $.ajax({
             type: "POST",
             enctype:'multipart/form-data',
             url: hdfb,
             data: formData,
             headers: {  
              'Authorization': localStorage.token,
              'phoneNO' : localStorage.telephone,
            },  
             cache:false,
             processData:false,
             contentType:false,
             success: function(data){
              $scope.ajaxFlg = true ;
              $ionicLoading.hide();
              if(data.code=='1000'){
                 $rootScope.tip("活动发布成功")
                state.go("tab.act")
              }else{
                 $rootScope.tip(data.msg);
              }
             
             }
     });
  }
  $scope.creatImg = function(){
    $(".fname").on('change',function(e){
      //将图片转换base64显示
      var img = e.currentTarget.value
      var file = e.target.files[0];
      var reader = new FileReader();
      reader.readAsDataURL(file); // 读出 base64
      reader.onloadend = function () {
         $( e.currentTarget).prev()[0].src=reader.result;
      }              
    })
  },
  $scope.addImg = function(){
    $scope.bd.id++
    var  html ="<div class='item-input item' ><div><img src='img/mine/upimg.png'> <input  style='width: 50px;position: relative; left: -50px;opacity:0;' type='file' name='uploadFile' accept='image/*' class='fname' ng-change='getIMg()' id="+$scope.bd.id+"></div></div>"
    $("#addImg").append(html)

    $scope.creatImg()
 }
 $scope.addBr =function(){
      
  $scope.bd.hbcontent  =$scope.bd.hbcontent+"<br>"
},

$scope.addkg =function(){
  
  $scope.bd.hbcontent  =$scope.bd.hbcontent+"&nbsp;"
}
})


//发榜记录
.controller('fbJlCtrl', function($rootScope,$scope,$timeout, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness,fbJl,scrollList,$ionicLoading) {

 //初始化榜当列表数据
 var vm = $scope.vm ={
  moredata: false,
  messages: [],
  pagination: {
    currentPage: 1
  },
  gcphoto:localStorage.gcphoto,
  tel :localStorage.telephone,
  init: function (b) {//初始化列表页
    if(vm.tel!=''&& vm.tel!=undefined){
      vm.loginFlg=true
    }
    vm.pagination.currentPage = 1;``
    vm.getData(true);
    vm.moredata=false;
 },
 doRefresh:function(){
    $timeout(function() {
      vm.init();
      $scope.$broadcast('scroll.refreshComplete');
   }, 200);
 },
 loadMore: function () {
   $timeout(function() {
     vm.pagination.currentPage++;
     vm.getData(false);
   }, 500);
 },
 nowDate :  function(){
  return new Date();
  },

 fbDetail:function(data){
    state.go("fbDetail",{fbData:JSON.stringify(data)});

  },
  getData:function (isInit){
    $ionicLoading.show()
    var data = {
      gcaid:localStorage.gcid
    };
    $http({
      method: 'POST',
      url: fbJl,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data){
        $ionicLoading.hide()

       if(data.datas.length!="0"){
         if(isInit){
            vm.messages= scrollList.init().add(data.datas);
            for(var i=0;i<data.datas.length;i++){
              var title =  data.datas[i].bdcontent.split('?')[1]
              var cont =  data.datas[i].bdcontent.split('?')[0]

              data.datas[i].title =title
              data.datas[i].cont =cont

              if(data.datas[i].ylzd!=undefined){
                var imgTemp = data.datas[i].ylzd.split(';')
                data.datas[i].imgTemp=imgTemp

             
              }
           
            }
          }else{
             vm.messages=scrollList.add(data.datas);
             $scope.$broadcast('scroll.infiniteScrollComplete');
          }
       }else{
             vm.moredata = true;
       }
   }).error(function (error) {
       
        $rootScope.tip("网络忙，请稍后再试……");
       if(!isInit){
               //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
               var positon = $ionicScrollDelegate.getScrollPosition();
               $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
               $scope.$broadcast('scroll.infiniteScrollComplete');
       }
   });
}

}
vm.init(1);

})

//揭榜记录
.controller('jbJlCtrl', function($rootScope,$scope,$timeout,$ionicScrollDelegate, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness,jbJl,$ionicLoading,scrollList) {

  //初始化榜当列表数据
var vm = $scope.vm ={
  moredata: false,
  messages: [],
  pagination: {
    currentPage: 1
  },
  tel :localStorage.telephone,
  init: function (b) {//初始化列表页
    if(vm.tel!=''&& vm.tel!=undefined){
      vm.loginFlg=true
    }
    vm.pagination.currentPage = 1;``
    vm.getData(true);
    vm.moredata=false;
 },
 doRefresh:function(){
    $timeout(function() {
      vm.init();
      $scope.$broadcast('scroll.refreshComplete');
   }, 200);
 },
 loadMore: function () {
   $timeout(function() {
     vm.pagination.currentPage++;
     vm.getData(false);
   }, 500);
 },
 nowDate :  function(){
  return new Date();
  },

  fbDetail:function(data){
    state.go("fbDetail",{fbData:JSON.stringify(data)});

  },

  getData:function (isInit){
    $ionicLoading.show()
    var data = {
      gcaid:localStorage.gcid
    };
    $http({
      method: 'POST',
      url: jbJl,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data){
        $ionicLoading.hide()

       if(data.datas.length!="0"){
         if(isInit){
            vm.messages= scrollList.init().add(data.datas);
          }else{
             vm.messages=scrollList.add(data.datas);
             $scope.$broadcast('scroll.infiniteScrollComplete');
             $ionicScrollDelegate.resize();
          }
       }else{
             vm.moredata = true;
       }
   }).error(function (error) {
       
        $rootScope.tip("网络忙，请稍后再试……");
       if(!isInit){
               //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
               var positon = $ionicScrollDelegate.getScrollPosition();
               $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
               $scope.$broadcast('scroll.infiniteScrollComplete');
       }
   });
}

}
vm.init(1);


})


//获取榜单揭榜人信息
.controller('jbrListCtrl', function($rootScope,$scope,$timeout, $ionicPopup,$stateParams,$ionicHistory,$http,state,req,reqRoot,tip,commonFunction,setbusiness) {

  $scope.business = {
    password:"",
  };
  //设置交易密码
  $scope.setPassword = function(){
      if($scope.business.password==''){
         $rootScope.tip("请输入交易密码");
        return 
      }
      var data = {
        gcphone:localStorage.telephone,
        jymm:  $scope.business.password
      };
      $http({
        method: 'POST',
        url: setbusiness,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
             $rootScope.tip("设置交易密码成功");

          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
  }
})








//修改交易密码
.controller('UpdateTradePwdCtrl', function($rootScope, $scope, $stateParams,$ionicHistory,$http,$ionicPopup,state,req,reqRoot,tip) {
  $scope.trade = {};
  $scope.modifyTradePwd = function(form) {
    if(!angular.equals(form.oldPwd.$error, {})) {
      if(form.oldPwd.$error.required) {
         $rootScope.tip('当前密码不能为空');
        return;
      }
    }
    if(!angular.equals(form.newPwd.$error, {})) {
      if(form.newPwd.$error.required) {
         $rootScope.tip('新密码不能为空');
        return;
      }
    }
    if(!angular.equals(form.checkNewPwd.$error, {})) {
      if(form.checkNewPwd.$error.required) {
         $rootScope.tip('请再一次输入新密码');
        return;
      }
    }
    if($scope.trade.newPwd != $scope.trade.checkNewPwd) {
       $rootScope.tip('两次输入的新密码不一致');
      return;
    }
    
    req.deviceInfo().then(function(deviceInfo){
      $http.post(reqRoot, {
        "id": req.id(),
        "MethodCode":req.MethodCode("UM008"),
        "time":req.time(),
        "signInfo":req.signInfo({
          "sessionId" : deviceInfo.sessionId,
          "oldPwd": MD5.hex($scope.trade.oldPwd),
          "newPwd": MD5.hex($scope.trade.newPwd)
        }, deviceInfo.signKey),
        "imei":deviceInfo.imei,//手机唯一标识
        "APPID":deviceInfo.APPID,//客户端id
        "APPVER":deviceInfo.APPVER,//客户端版本
        "MVER":req.MVER(),//手机系统版本
        "MTYPE":req.MTYPE(),//客户端类型
        "PMODEL":deviceInfo.PMODEL,//机型
        "PBRAND":deviceInfo.PBRAND,//手机品牌
        "chid":deviceInfo.chid,//推广渠道号
        "body": {
          "sessionId" : deviceInfo.sessionId,
          "oldPwd": MD5.hex($scope.trade.oldPwd),
          "newPwd": MD5.hex($scope.trade.newPwd)
        }
      }).success(function(data){
        
        if(data.returnCode == '1' || data.returnCode == '0') {
           $rootScope.tip('修改交易密码成功', function() {
            $ionicHistory.goBack();
          })
        } else{
           $rootScope.tip(data.returnMsg);
        }
      }).error(function (error) {
        
         $rootScope.tip("网络忙，请稍后再试……");
      })
    })
  }
})
//注册第一步
.controller('resCtrl', function($scope,$http,$ionicPlatform,$stateParams,$ionicPopup,$ionicHistory,$rootScope,state,req,sqLiteLoginInfo,login,getMsg,tip,$ionicLoading) {
  sqLiteLoginInfo.getSessionId(function(sid){
    if(sid){
      sqLiteLoginInfo.exitLogin();
    }
  });
  $scope.login = {
    tel: '',//登录手机号

  };

  $scope.telephone = localStorage.telephone;//缓存的手机号
  $scope.checkTel = function(){//验证手机号码
    var reg = /^1[2,3,4,5,6,7,8,9,0][0-9]{9}$/;
    if(!reg.test($scope.login.tel)){
       $rootScope.tip("请输入正确的手机号码");
      return false;
    }else{
      return true;
    }
  }
  $scope.change = function(){
     $scope.loginState = false;
  }
  //注册，跳到下一步
  $scope.next=function(){
    if(!$scope.checkTel()){
      return;
    }
    req.deviceInfo().then(function(deviceInfo){
      var data = {
        phoneNO:$scope.login.tel,
      };
      $ionicLoading.show()
      $http({
        method: 'POST',
        url: getMsg,
        dataType: 'json',
        data: data,
        }).success(function(data) {
          $ionicLoading.hide()
          if(data.code=='1000'){
            state.go("registerLoginStep11",{"tel":$scope.login.tel});
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
    })
  }
})
//登录
.controller('LoginCtrl', function($scope,$http,$ionicPlatform,$stateParams,$ionicPopup,$ionicHistory,$rootScope,state,req,sqLiteLoginInfo,login,tip,$ionicLoading) {
  sqLiteLoginInfo.getSessionId(function(sid){
    if(sid){
      sqLiteLoginInfo.exitLogin();
    }
  });
  $scope.login = {
    tel: '',//登录手机号
    loginPwd:'',//实际登录密码
  };
  $scope.registerImg = {
    title:'',
    linkUrl:'',
    url:''
  }
  $scope.telephone = localStorage.telephone;//缓存的手机号
  $scope.checkTel = function(){//验证手机号码
    var reg = /^1[2,3,4,5,6,7,8,9,0][0-9]{9}$/;
    if(!reg.test($scope.login.tel)){
       $rootScope.tip("请输入正确的手机号码");
      return false;
    }else{
      return true;
    }
    if($scope.login.loginPwd==''){
       $rootScope.tip("请输入密码");
      return false;
    }else{
      return true;
    }
  }
  $scope.change = function(){
     $scope.loginState = false;
  }
  //登录
  $scope.doLogin=function(){
      $ionicLoading.show()
      var data = {
        gcpass:$scope.login.loginPwd,
        gcphone:$scope.login.tel,
      };
      $http({
        method: 'POST',
        url: login,
        dataType: 'json',
        data: data,
        }).success(function(data) {
          $ionicLoading.hide()
          if(data.code=='1000'){
             $rootScope.tip("登录成功");
            localStorage.telephone = data.datas.account.gcphone
            localStorage.gcphoto =  data.datas.account.gcphoto
            localStorage.gcnikename =  data.datas.account.gcnikename
            localStorage.token =  data.datas.token
            localStorage.gcid =  data.datas.account.gcid

            state.go("tab.home")
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
    
  }

})






 
//底部tab
  .controller('TabCtrl', function($scope,$stateParams,$http,$rootScope,state,req,reqRoot,tip,sqLiteLoginInfo,baseInfo) {
 
  
       $scope.goTab = function(url){
         state.go(url);
        //  $scope.checkMsg();//点击后调用消息
      };
  

  })




  
 









//項目
.controller('projectCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService) {
  //初始化榜当列表数据
  var vm = $scope.vm ={
    moredata: false,
    messages: [],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
    loginFlg:false,
    bigImage : false,
    url:'',
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
    //跳转登录       
    toLogin:function(){
      state.go('login');
    },
    tomemberCenter:function(){
      state.go('memberCenter');

    },
      //点击图片放大
    showBigImage :function (imageName) {  //传递一个参数（图片的URl）imageName
      vm.url = imgUrl+imageName+""        
      vm.bigImage = true;//显示大图
    },
  //初始默认大图是隐藏的
  hideBigImage : function () {
    vm.bigImage = false;
    // vm.hidetabs = false
    // StatusBar.show()
    // vm.logoFlg = false 


},
    dateFormats:function (data) {
      var date = new Date(data);
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate();
      var Hours =date.getHours(); //时，
      var Minutes	=date.getMinutes(); //分
      var Seconds	=date.getSeconds(); //秒
      if (month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
        var currentdate =year+ seperator1+month + seperator1 + strDate;
      return currentdate;
    },

    hide :function(i){
      setTimeout(function(){
        var aElement1s=document.getElementsByClassName("gifshow");

        aElement1s[i].style.display="none"

      },1000);
    },
    bdDetail:function(data){
      state.go("bdDetail",{bdData:JSON.stringify(data)});

    },
    getData:function (isInit){
     $http.get(bdList+"?pageIndex="+vm.pagination.currentPage+"&pageSize=10").success(function(data){
         if(data.datas.length!="0"){
           if(isInit){
            for(var i=0;i<data.datas.length;i++){
              var imgTemp = data.datas[i].ylzd.split(';')
              data.datas[i].imgTemp=imgTemp
            }
              vm.messages= scrollList.init().add(data.datas);
            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
  }
 }
//  vm.init(1);


})



//青贝管理
.controller('qbManageCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,getPrice,$cordovaDevice) {

  $scope.amount =  0;
  $scope.getQb=function(){
    var data = {
      phone:localStorage.telephone
    };
    $http({
      method: 'POST',
      url: getPrice,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data) {
        if(data.code=='1000'){
          $scope.amount = data.datas
          localStorage.amount =  $scope.amount
        }else{
           $rootScope.tip(data.msg);
        }
      }).error(function(error) {
         $rootScope.tip("网络忙，请稍后再试……");

      });
  }
  //扫一扫
  $scope.scanCode= function(){
    cordova.plugins.barcodeScanner.scan(
            function (result) {
              if(result.text){
                state.go("qbZs",{qbtel: result.text });
              }
               // "Result: " + result.text 
               // "Format: " + result.format
               // "Cancelled: " + result.cancelled
             }, 

            function (error) {
                   $rootScope.tip("扫码失败: " + error);
            }
         );
    
  }
  $scope.getQb()

})


//我的二维码
.controller('myewmCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,getPrice,$cordovaDevice,getskm,$ionicLoading) {
   $scope.gcnikename =localStorage.gcnikename,
   $scope.tel = localStorage.telephone,
   $scope.gcphoto = localStorage.gcphoto

   $ionicLoading.show()
   $scope.qbqrcod= ''
   $http({
     method: 'POST',
     url: getskm,
     headers: {  
       'Authorization': localStorage.token,
       'phoneNO' : localStorage.telephone,
     },  
     dataType: 'json',
     }).success(function(data) {
       $ionicLoading.hide()
       if(data.code=='1000'){
         $scope.qbqrcod = data.datas;
       }else{
          $rootScope.tip(data.msg);
       }
     }).error(function(error) {
        $rootScope.tip("网络忙，请稍后再试……");

     });

})
//我的活动
.controller('meActCtrl', function($scope,$http,$rootScope,meAct,imgUrl,tip,$stateParams,scrollList,msgSize,$timeout,$ionicScrollDelegate,state,$ionicPopup,imgUrl,bdList,bdDz,$ionicLoading,$ionicSlideBoxDelegate,$cordovaStatusbar) {

  //初始化榜当列表数据
  var vm = $scope.vm ={
    moredata: false,
    messages: [],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
  

  
    getData:function (isInit){
      $ionicLoading.show()
      var data = {
        type:"0"
      };
      $http({
        method: 'POST',
        url: meAct,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data){
          $ionicLoading.hide()
  
         if(data.datas.length!="0"){
           if(isInit){
              vm.messages= scrollList.init().add(data.datas);
            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
  }
  
  }
  vm.init(1);
  

})
//我参加的活动
.controller('meJoinActCtrl', function($scope,$http,$rootScope,meAct,tip,$stateParams,scrollList,msgSize,$timeout,$ionicScrollDelegate,state,$ionicPopup,imgUrl,bdList,bdDz,$ionicLoading,$ionicSlideBoxDelegate,$cordovaStatusbar) {

  //初始化榜当列表数据
  var vm = $scope.vm ={
    moredata: false,
    messages: [],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
  

  
    getData:function (isInit){
      $ionicLoading.show()
      var data = {
        type:"1"
      };
      $http({
        method: 'POST',
        url: meAct,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data){
          $ionicLoading.hide()
  
         if(data.datas.length!="0"){
           if(isInit){
              vm.messages= scrollList.init().add(data.datas);
            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
  }
  
  }
  vm.init(1);
  

})
//青贝赠送
.controller('qbZcCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,qbcs,qbcs2,imgUrl,$ionicLoading) {

  $scope.business = {
    dfPhone:$stateParams.qbtel,
    amount:"",
    qbpass:"",
    bz:"",  
  };
  
  
  $scope.datas={
    nikename:"",
    photo:"",
    imgUrl:imgUrl
  }
  $scope.jy1Flg = true;
  $scope.jy2Flg = false;
  //赠送第一步
  $scope.savaQb=function(){
    if($scope.business.dfPhone==''){
       $rootScope.tip("请输入转赠人账号")
      return ;
    }
    if($scope.business.amount==''){
       $rootScope.tip("请输入转赠金额")
      return ;
    }
    // if($scope.business.password==''){
    //   return ;
    // }
    var data = {
      phone:localStorage.telephone,
      amount: $scope.business.amount,
      dfPhone: $scope.business.dfPhone,
      qbjysm:  $scope.business.bz,
    };
    $ionicLoading.show()
    $http({
      method: 'POST',
      url: qbcs,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data) {
        $ionicLoading.hide()
        if(data.code=='1000'){
          $scope.datas = data.datas
          $scope.jy1Flg = false;
          $scope.jy2Flg = true;
        }else{
           $rootScope.tip(data.msg);
        }
      }).error(function(error) {
         $rootScope.tip("网络忙，请稍后再试……");

      });

  }
  //赠送第二步
  $scope.goQb=function(){
    if($scope.business.qbpass==''){
       $rootScope.tip("请输入交易密码")
      return ;
    }
    var data = {
      phone:localStorage.telephone,
      amount: $scope.business.amount,
      dfPhone: $scope.business.dfPhone,
      qbjysm:  $scope.business.bz,
      qbpass:$scope.business.qbpass,
    };
    $ionicLoading.show()

    $http({
      method: 'POST',
      url: qbcs2,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data) {
        $ionicLoading.hide()

        if(data.code=='1000'){
        
           $rootScope.tip("转赠成功");
          $scope.jy1Flg = true;
          $scope.jy2Flg = false;
          state.go('qbManage');

        }else{
           $rootScope.tip(data.msg);
        }
      }).error(function(error) {
         $rootScope.tip("网络忙，请稍后再试……");

      });

  }
})
//青贝交易记录
.controller('qbJlCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,qbjl,scrollList,$ionicLoading) {
  
//初始化榜当列表数据
var vm = $scope.vm ={
  moredata: false,
  messages: [],
  pagination: {
    currentPage: 1
  },
  tel :localStorage.telephone,
  init: function (b) {//初始化列表页
    if(vm.tel!=''&& vm.tel!=undefined){
      vm.loginFlg=true
    }
    vm.pagination.currentPage = 1;``
    vm.getData(true);
    vm.moredata=false;
 },
 doRefresh:function(){
    $timeout(function() {
      vm.init();
      $scope.$broadcast('scroll.refreshComplete');
   }, 200);
 },
 loadMore: function () {
   $timeout(function() {
     vm.pagination.currentPage++;
     vm.getData(false);
   }, 500);
 },
 nowDate :  function(){
  return new Date();
  },

  jyDetail:function(data){
    state.go("qbJlDetail",{qbData:JSON.stringify(data)});

  },

  getData:function (isInit){
    $ionicLoading.show()
    var data = {
      gcaid:localStorage.gcid
    };
    $http({
      method: 'POST',
      url: qbjl,
      headers: {  
        'Authorization': localStorage.token,
        'phoneNO' : localStorage.telephone,
      },  
      dataType: 'json',
      data: data,
      }).success(function(data){
        $ionicLoading.hide()

       if(data.datas.length!="0"){
         if(isInit){
            vm.messages= scrollList.init().add(data.datas);
          }else{
             vm.messages=scrollList.add(data.datas);
             $scope.$broadcast('scroll.infiniteScrollComplete');
             $ionicScrollDelegate.resize();
          }
       }else{
             vm.moredata = true;
       }
   }).error(function (error) {
       
        $rootScope.tip("网络忙，请稍后再试……");
       if(!isInit){
               //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
               var positon = $ionicScrollDelegate.getScrollPosition();
               $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
               $scope.$broadcast('scroll.infiniteScrollComplete');
       }
   });
}

}
vm.init(1);

})

//我的订单
.controller('mebqSellCtrl', function($rootScope,$scope, scrollList,$ionicLoading,$http,$timeout,$stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,meMarket,qrjy,qxjy) {
  $scope.nowDate =  function(){
    return new Date();
  }
//qbscsfcj 1正常2 兑换中 3兑换结束 4交易取消
//qbsctype  1  出售 2  收购
  var vm = $scope.vm = {
    moredata: false,
    messages: [],
    messagess: [],
    showFlg  :0,
    title:$stateParams.title,
    id:$stateParams.id,
    pagination: {
      perPage: 10,
      currentPage: 1
    },
    ajaxEnd:false,//是不是初始化,在ajax请求之后用来判断是否显示暂无数据
    type:$stateParams.bidId,
    init: function (b) {//初始化列表页
      if(b){}
      vm.pagination.currentPage = 1;
      vm.getData(true);
      vm.getDatas(true);

      vm.moredata=false;
    },
   
    menuOn :function(index){
      vm.showFlg = index
    },
    doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
      }, 200);
    },
    loadMore: function () {
      $timeout(function() {
        vm.pagination.currentPage++;
        vm.getData(false);
        vm.getDatas(false);
      }, 500);
    },
    getData:function (isInit){
      var data = {
        pageIndex: vm.pagination.currentPage,
        pageSize: "5"
      };
      $ionicLoading.show()
      $http({
        method: 'POST',
        url: meMarket,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        data:data,
        dataType: 'json',
        }).success(function(data){
      $ionicLoading.hide()

         if(data.datas.length!="0"){
           if(isInit){
              vm.messages= scrollList.init().add(data.datas);

            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
    },
    //我参与的
    getDatas:function (isInit){
      var data = {
        pageIndex: vm.pagination.currentPage,
        pageSize: "5",
        type: 2
      };
      $ionicLoading.show()
      $http({
        method: 'POST',
        url: meMarket,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        data:data,
        dataType: 'json',
        }).success(function(data){
      $ionicLoading.hide()

         if(data.datas.length!="0"){
           if(isInit){
              vm.messagess= scrollList.init().add(data.datas);

            }else{
               vm.messagess=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
    },
    qrjy:function(id){
      var data = {
        jyid:id
      };
      $http({
        method: 'POST',
        url: qrjy,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
            vm.getData(true);

            $rootScope.tip("交易成功");
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");
  
        });

    },
    qxjy:function(id){
      var data = {
        jyid:id
      };
      $http({
        method: 'POST',
        url: qxjy,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
            vm.getData(true);
            $rootScope.tip("取消成功");
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");
  
        });
    }
  }
  vm.init(1);
})

.controller('marketCtrl', function($rootScope,$scope, $ionicScrollDelegate ,scrollList,getPrice,$ionicLoading,$http,$timeout,$stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,marketList,marketTotle,buyMbq) {
  $scope.nowDate =  function(){
    return new Date();
  }
//qbscsfcj 1正常2 兑换中 3兑换结束 4交易取消
//qbsctype  1  出售 2  收购
  var vm = $scope.vm = {
    moredata: false,
    amount :"",
    messages: [],
    title:$stateParams.title,
    id:$stateParams.id,
    pagination: {
      perPage: 10,
      currentPage: 1
    },
    today:"0",
    lishi:"0",
    ajaxEnd:false,//是不是初始化,在ajax请求之后用来判断是否显示暂无数据
    type:$stateParams.bidId,
    init: function (b) {//初始化列表页
      if(b){}
      vm.pagination.currentPage = 1;
      vm.getData(true);
      vm.moredata=false;
    },
    doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
      }, 200);
    },
    loadMore: function () {
      $timeout(function() {
        vm.pagination.currentPage++;
        vm.getData(false);
      }, 500);
    },
    getData:function (isInit){
      var data = {
        pageIndex: vm.pagination.currentPage,
        pageSize: "5"
      };
      $ionicLoading.show()
      $http({
        method: 'POST',
        url: marketList,
        data:data,
        dataType: 'json',
        }).success(function(data){
      $ionicLoading.hide()

         if(data.datas.length!="0"){
           if(isInit){
              vm.messages= scrollList.init().add(data.datas);

            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
    },
    marketTotle: function(){
      $http({
        method: 'POST',
        url: marketTotle,
        dataType: 'json',
        }).success(function(data) {
          if(data.code=='1000'){
              vm.lishi = data.datas.lishi
              vm.today = data.datas.today
          }else{
            $rootScope.tip(data.msg);
          }
        }).error(function(error) {
          $rootScope.tip("网络忙，请稍后再试……");

        });
    },
    getQb:function(){
      var data = {
        phone:localStorage.telephone
      };
      $http({
        method: 'POST',
        url: getPrice,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
            vm.amount = data.datas
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");
  
        });
    },
    qbdh: function(qbData){
     
        $ionicPopup.confirm({
          title: '提示',
          template: '出售总金额为:'+Number(qbData.qbscrmb*qbData.qbscshuliang).toFixed(2)+'RMB<br>请联系收购者：'+qbData.gcnikename+'<br>电话：<a  href="tel:'+qbData.gcphone+' ">'+qbData.gcphone+'</a></div>',
          okText: '确认兑换',
          cancelText: '取消'
       }).then(function(res) {
        if(res) {
          var data = {
            jyid:qbData.qbscid
          };
          $http({
            method: 'POST',
            url: buyMbq,
            headers: {  
              'Authorization': localStorage.token,
              'phoneNO' : localStorage.telephone,
            },  
            dataType: 'json',
            data: data,
            }).success(function(data) {
              if(data.code=='1000'){
                $rootScope.tip("已通知出售者");
              }else{
                 $rootScope.tip(data.msg);
              }
            }).error(function(error) {
               $rootScope.tip("网络忙，请稍后再试……");
      
            });
        }
       });
     
     
    },
 
    qbgm: function(qbData){
       // 用户青贝小于收购数量
     if(vm.amount>qbData.qbscshuliang){
      $ionicPopup.confirm({
        title: '提示',
        template: '购买总金额为:'+Number(qbData.qbscrmb*qbData.qbscshuliang).toFixed(2)+'RMB<br>请联系收购者：'+qbData.gcnikename+'<br>电话：<a  href="tel:'+qbData.gcphone+' ">'+qbData.gcphone+'</a></div>',
        okText: '确认购买',
        cancelText: '取消'
     }).then(function(res) {
      if(res) {
        var data = {
          jyid:qbData.qbscid
        };
        $http({
          method: 'POST',
          url: buyMbq,
          headers: {  
            'Authorization': localStorage.token,
            'phoneNO' : localStorage.telephone,
          },  
          dataType: 'json',
          data: data,
          }).success(function(data) {
            if(data.code=='1000'){
              $rootScope.tip("已通知出售者");
            }else{
               $rootScope.tip(data.msg);
            }
          }).error(function(error) {
             $rootScope.tip("网络忙，请稍后再试……");
    
          });
      }
     });
    }else{
      $rootScope.tip("可售卖数量不足");

    }
     
  
    },

  }
  vm.init(1);
  vm.marketTotle();
  if(localStorage.telephone!=''&& localStorage.telephone!=undefined){
     vm.getQb();
  }

})



//活動
.controller('actCtrl', function($rootScope,$scope,$http,$timeout, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,queryAct,scrollList,$ionicLoading,imgUrl) {
  $scope.showFlg  = 0 ;
  $scope.menuOn = function(index){
    $scope.showFlg = index
  }
  //初始化榜当列表数据
  var vm = $scope.vm ={
    moredata: false,
    messages: [],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
    loginFlg:false,
    bigImage : false,
    url:'',
    slidImg:'',
    hidetabs:false,
    dZFlg:false,
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
    //跳转登录       
    toLogin:function(){
      state.go('login');
    },
    tomemberCenter:function(){
      state.go('memberCenter');

    },
    myScrollL:function(){
      var mySwiper = new Swiper('.swiper-container', {
        loop: true, // 循环模式选项
        // 如果需要分页器
        pagination: {
            el: '.swiper-pagination',
        },
    
        // 如果需要滚动条
        scrollbar: {
            el: '.swiper-scrollbar',
        },
    })
    },
    //   //点击图片放大
    // showBigImage :function (imgTemp) {  //传递一个参数（图片的URl）imageName
    //     vm.slidImg = JSON.parse(imgTemp)
    //     vm.bigImage = true
    //     vm.hidetabs = true
    //     StatusBar.hide()
    //     vm.myScrollL()

    // },
    showBigImage :function (imageName) {  //传递一个参数（图片的URl）imageName
      vm.url = "http://39.97.234.111/base/userFiles/hdImg/"+imageName+""        
      vm.bigImage = true;//显示大图
    },
  //初始默认大图是隐藏的
  hideBigImage : function () {
    vm.bigImage = false;
    // vm.hidetabs = false
    // StatusBar.show()
    // vm.logoFlg = false 


},
    dateFormats:function (data) {
      var date = new Date(data);
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate();
      var Hours =date.getHours(); //时，
      var Minutes	=date.getMinutes(); //分
      var Seconds	=date.getSeconds(); //秒
      if (month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
        var currentdate =year+ seperator1+month + seperator1 + strDate;
      return currentdate;
    },
   
    dianzan:function(id,index){
      $http.get(bdDz+"?bdid="+id+"").success(function(data){

        if(data.code=="1000"){
          var aElements=document.getElementsByClassName("dzimg");
          var aElementsize=document.getElementsByClassName("dzsize");
          var aElement1s=document.getElementsByClassName("gifshow");

          for(var i=0;i<aElements.length;i++) {
              if(aElements[i].getAttribute("imgindex")==index){
                aElements[i].src="img/bd/List_praise_on.png";
                var  size = aElementsize[i].innerHTML;
                aElementsize[i].innerHTML=parseInt(size)+parseInt("1")
              }
          }
          for(var i=0;i<aElement1s.length;i++) {
            if(aElement1s[i].getAttribute("gifShow")==index){
                aElement1s[i].style.display="block"
                vm.index =i
                vm.hide(i);
                return;
            }
         }
        }
      }).error(function (error) {
          
           $rootScope.tip("网络忙，请稍后再试……");
        
      });

    },
    hide :function(i){
      setTimeout(function(){
        var aElement1s=document.getElementsByClassName("gifshow");

        aElement1s[i].style.display="none"

      },1000);
    },
    bdDetail:function(data){
      state.go("hdDetail",{hdData:JSON.stringify(data)});

    },
    getData:function (isInit){
      var data = {
        pageIndex: vm.pagination.currentPage,
        pageSize: "10"
      };
      $ionicLoading.show()
      $http({
        method: 'POST',
        url: queryAct,
        data:data,
        dataType: 'json',
        }).success(function(data){
      $ionicLoading.hide()

         if(data.datas.length!="0"){
           if(isInit){
            for(var i=0;i<data.datas.length;i++){
              var title =  data.datas[i].hbcontent.split('?')[1]
              var cont =  data.datas[i].hbcontent.split('?')[0]

              data.datas[i].title =title
              data.datas[i].cont =cont

              if(data.datas[i].hbimgpath!=undefined){
                var imgTemp = data.datas[i].hbimgpath.split(';')
            
                data.datas[i].imgTemp=imgTemp
              }
           
            }
              vm.messages= scrollList.init().add(data.datas);

            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
  }
 }
 vm.init(1);
}) 


//青贝交易详情
.controller('qbJlDetailCtrl', function($scope,$location,$http,$stateParams,$interval,$ionicPopup,$rootScope,req,reqRoot,tip,state,balance,httpService,_responseData,sqLiteLoginInfo,bdMsgList,imgUrl,bdDz,bdjb,plbd) {
  var vm = $scope.vm ={
    moredata: false,
    messages:  [JSON.parse($stateParams.qbData )],

  
 }

})
//活动
.controller('actManageCtrl', function($scope,$http,$rootScope,meAct,tip,$stateParams,scrollList,msgSize,$timeout,$ionicScrollDelegate,state,$ionicPopup,imgUrl,bdList,bdDz,$ionicLoading,$ionicSlideBoxDelegate,$cordovaStatusbar) {

 $scope.showFlg  = 0 ;
  $scope.menuOn = function(index){
    $scope.showFlg = index
  }
   //初始化榜当列表数据
   var vm = $scope.vm ={
    moredata: false,
    messages: [],
    messagesJoin:[],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    init: function (b) {//初始化列表页
      if(vm.tel!=''&& vm.tel!=undefined){
        vm.loginFlg=true
      }
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.getDatas(true)
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
       vm.getDatas(false)

     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
    //参加
    getDatas:function (isInit){
      $ionicLoading.show()
      var data = {
        type:"1"
      };
      $http({
        method: 'POST',
        url: meAct,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data){
          $ionicLoading.hide()
  
         if(data.datas.length!="0"){
           if(isInit){

            for(var i=0;i<data.datas.length;i++){
              var title =  data.datas[i].hbcontent.split('?')[1]
              var cont =  data.datas[i].hbcontent.split('?')[0]

              data.datas[i].title =title
              data.datas[i].cont =cont

              if(data.datas[i].hbimgpath!=undefined){
                var imgTemp = data.datas[i].hbimgpath.split(';')
             
                data.datas[i].imgTemp=imgTemp

              }
           
            }
              vm.messagesJoin= scrollList.init().add(data.datas);
            }else{
               vm.messagesJoin=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
   },
    getData:function (isInit){
      $ionicLoading.show()
      var data = {
        type:"2"
      };
      $http({
        method: 'POST',
        url: meAct,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data){
          $ionicLoading.hide()
  
         if(data.datas.length!="0"){
           if(isInit){
            for(var i=0;i<data.datas.length;i++){
              var title =  data.datas[i].hbcontent.split('?')[1]
              var cont =  data.datas[i].hbcontent.split('?')[0]

              data.datas[i].title =title
              data.datas[i].cont =cont

              if(data.datas[i].hbimgpath!=undefined){
                var imgTemp = data.datas[i].hbimgpath.split(';')
             
                data.datas[i].imgTemp=imgTemp

              }
           
            }
              vm.messages= scrollList.init().add(data.datas);
            }else{
               vm.messages=scrollList.add(data.datas);
               $scope.$broadcast('scroll.infiniteScrollComplete');
               $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
         if(!isInit){
                 //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
                 var positon = $ionicScrollDelegate.getScrollPosition();
                 $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
                 $scope.$broadcast('scroll.infiniteScrollComplete');
         }
     });
  }
  
  }
  vm.init(1);
  
})

//发榜详情
.controller('fbDetailCtrl', function($scope,$location,$timeout,$http,$stateParams,$interval,$ionicPopup,$rootScope,req,reqRoot,tip,state,balance,httpService,_responseData,sqLiteLoginInfo,scrollList,$ionicLoading,bdDetailJl,ljjb,imgUrl) {
  var vm = $scope.vm ={
    moredata: false,
    qbpass:"",
    messages:  [JSON.parse($stateParams.fbData )],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
    loginFlg:false,
    bigImage : false,
    url:'',
    dZFlg:false,
    lyList:[],
    bdplcontent:"",
    accountID:"",
    showFlg:false,
    qbpass:"",
    init: function (b) {//初始化列表页
     
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },

      //点击图片放大
    showBigImage :function (imageName) {  //传递一个参数（图片的URl）imageName
      vm.url = imgUrl+imageName+""        
      vm.bigImage = true;//显示大图
    },
    keyBoardUp :function($event){
      if(ionic.Platform.isIOS()){
        document.getElementsByClassName("counselor-pop")[0].style.top="-30%"
      }
    },
    jiebang :function(id){
      vm.accountID = id
      var myPopup = $ionicPopup.show({
      template: '<input type="password" class="counselor-pop" ng-click="vm.keyBoardUp($event)" placeholder="请输入青贝密码" ng-model="vm.qbpass" name="vm.qbpass"    >',
       cssClass:'counselor-pop',
       title: '',
       scope: $scope,
       buttons: [
         { text: '×' },
         {
           text: '<b>确认结算榜单</b>',
           type: 'button-positive',
           onTap: function(e) {
              if(vm.qbpass == ''){
                 $rootScope.tip('请输入密码');
                e.preventDefault();
              }else{
                return vm.qbpass;
              }
           }
         },
       ]
      });
      myPopup.then(function(res) {
        if(res){
          var data = {
            accountID:  vm.accountID,
            bdid    : vm.messages[0].bdid,
            qbpass    :vm.qbpass
          };
            $http({
              method: 'POST',
              url: ljjb,
              data:data,
              headers: {  
                'Authorization': localStorage.token,
                'phoneNO' : localStorage.telephone,
              },  
              dataType: 'json',
              }).success(function(data) {
                if(data.code=='1000'){
                   $rootScope.tip("结榜成功");
                }else{
                   $rootScope.tip(data.msg);
                }
              }).error(function(error) {
                 $rootScope.tip("网络忙，请稍后再试……");
      
              });
       
        }
      });
   
  },
  //初始默认大图是隐藏的
    hideBigImage : function () {
        vm.bigImage = false;
    },
 
    hide :function(i){
      setTimeout(function(){
        var aElement1s=document.getElementsByClassName("gifshow");

        aElement1s[i].style.display="none"

      },1000);
    },
   
    getData:function (isInit){
      $http({
        method: 'POST',
         url: bdDetailJl+"?bdid="+vm.messages[0].bdid,
       // url: bdDetailJl+"?bdid=3",

        // headers: {  
        //   'Authorization': localStorage.token,
        //   'phoneNO' : localStorage.telephone,
        // },  
        dataType: 'json',
        }).success(function(data) {
          if(data.code=='1000'){
            vm.lyList= data.datas;

          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
  }
 }
 vm.init(1);
 
})
//榜单详情
.controller('bdDetailCtrl', function($scope,$location,$http,$stateParams,$interval,$ionicPopup,$rootScope,req,reqRoot,tip,state,balance,httpService,_responseData,sqLiteLoginInfo,bdMsgList,imgUrl,bdDz,bdjb,plbd) {
  var vm = $scope.vm ={
    moredata: false,
    messages:  [JSON.parse($stateParams.bdData )],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
    loginFlg:false,
    bigImage : false,
    url:'',
    dZFlg:false,
    lyList:[],
    qbpass:"",
    bdplcontent:"",
    init: function (b) {//初始化列表页
     
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
    //跳转登录       
    toLogin:function(){
      state.go('login');
    },
    tomemberCenter:function(){
      state.go('memberCenter');

    },
      //点击图片放大
    showBigImage :function (imageName) {  //传递一个参数（图片的URl）imageName
      vm.url = imgUrl+imageName+""        
      
      vm.bigImage = true;//显示大图
    },
    keyBoardUp :function($event){
      if(ionic.Platform.isIOS()){
        document.getElementsByClassName("counselor-pop")[0].style.top="-30%"
      }
    },
    jiebang:function(){
      var data = {
        "bangdanid": vm.messages[0].bdid,
      };
      $http({
        method: 'POST',
        url: bdjb,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
             $rootScope.tip("揭榜成功");

          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
    },
    showPop :function(){
        var myPopup = $ionicPopup.show({
        template: '<textarea rows="8" cols="20" placeholder="请输入评论信息" ng-click="keyBoardUp($event)" ng-focus="resizeHeight()" ng-blur="recoveryHeight()" ng-model="vm.bdplcontent"></textarea>',
         cssClass:'counselor-pop',
         title: '',
         scope: $scope,
         buttons: [
           { text: '×' },
           {
             text: '<b>确定发送</b>',
             type: 'button-positive',
             onTap: function(e) {
                if(vm.bdplcontent == ''){
                   $rootScope.tip('请输入评论信息');
                  e.preventDefault();
                }else{
                  return vm.bdplcontent;
                }
             }
           },
         ]
        });
        myPopup.then(function(res) {
          if(res){
            var data = {
              "bdid": vm.messages[0].bdid,
              "bdplcontent": vm.bdplcontent,
              "bdplrid": localStorage.gcid,
              "bdplrnikename": localStorage.gcnikename,

            };
            $http({
              method: 'POST',
              url: plbd,
              headers: {  
                'Authorization': localStorage.token,
                'phoneNO' : localStorage.telephone,
              },  
              dataType: 'json',
              data: data,
              }).success(function(data) {
                if(data.code=='1000'){
                  vm.init(1);
                   $rootScope.tip("评论成功");
                }else{
                   $rootScope.tip(data.msg);
                }
              }).error(function(error) {
                 $rootScope.tip("网络忙，请稍后再试……");
      
              });
         
          }
        });
     
    },
  //初始默认大图是隐藏的
    hideBigImage : function () {
        vm.bigImage = false;
    },
    dateFormats:function (data) {
      var date = new Date(data);
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate();
      var Hours =date.getHours(); //时，
      var Minutes	=date.getMinutes(); //分
      var Seconds	=date.getSeconds(); //秒
      if (month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
        var currentdate =year+ seperator1+month + seperator1 + strDate;
      return currentdate;
    },
   
    dianzan:function(id,index){
      $http.get(bdDz+"?bdid="+id+"").success(function(data){
        if(data.code=="1000"){
          var aElements=document.getElementsByClassName("dzimg");
          var aElementsize=document.getElementsByClassName("dzsize");
          var aElement1s=document.getElementsByClassName("gifshow");

          for(var i=0;i<aElements.length;i++) {
              if(aElements[i].getAttribute("imgindex")==index){
                aElements[i].src="img/bd/List_praise_on.png"
                var  size = aElementsize[i].innerHTML;
                aElementsize[i].innerHTML=parseInt(size)+parseInt("1")
              }
          }
          for(var i=0;i<aElement1s.length;i++) {
            if(aElement1s[i].getAttribute("gifShow")==index){
                aElement1s[i].style.display="block"
                vm.index =i
                vm.hide(i);
                return;
            }
         }
        }
      }).error(function (error) {
          
           $rootScope.tip("网络忙，请稍后再试……");
        
      });

    },
    hide :function(i){
      setTimeout(function(){
        var aElement1s=document.getElementsByClassName("gifshow");

        aElement1s[i].style.display="none"

      },1000);
    },
    bdDetail:function(data){
      state.go("bdDetail",{bdData:JSON.stringify(data)});

    },
    getData:function (isInit){
     $http.get(bdMsgList+"?bdid="+vm.messages[0].bdid).success(function(data){
         if(data.datas.length!="0"){
           if(isInit){
              // vm.lyList= scrollList.init().add(data.datas);
                 vm.lyList= data.datas;

            }else{
              //  vm.lyList=scrollList.add(data.datas);
              //  $scope.$broadcast('scroll.infiniteScrollComplete');
              //  $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
        //  if(!isInit){
        //          //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
        //          var positon = $ionicScrollDelegate.getScrollPosition();
        //          $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
        //          $scope.$broadcast('scroll.infiniteScrollComplete');
        //  }
     });
  }
 }
 vm.init(1);

})
//活动详情
.controller('hdDetailCtrl', function($scope,$location,$http,$stateParams,$interval,$ionicPopup,$rootScope,req,reqRoot,tip,state,balance,httpService,_responseData,sqLiteLoginInfo,bdMsgList,imgUrl,bdDz,bdjb,canjiaAct) {
  var vm = $scope.vm ={
    moredata: false,
    messages:  [JSON.parse($stateParams.hdData )],
    pagination: {
      currentPage: 1
    },
    tel :localStorage.telephone,
    gcnikename:localStorage.gcnikename,
    gcphoto:localStorage.gcphoto,
    loginFlg:false,
    bigImage : false,
    url:'',
    dZFlg:false,
    lyList:[],
    qbpass:"",
    bdplcontent:"",
    init: function (b) {//初始化列表页
     
      vm.pagination.currentPage = 1;``
      vm.getData(true);
      vm.moredata=false;
   },
   doRefresh:function(){
      $timeout(function() {
        vm.init();
        $scope.$broadcast('scroll.refreshComplete');
     }, 200);
   },
   loadMore: function () {
     $timeout(function() {
       vm.pagination.currentPage++;
       vm.getData(false);
     }, 500);
   },
   nowDate :  function(){
    return new Date();
    },
    //跳转登录       
    toLogin:function(){
      state.go('login');
    },
    tomemberCenter:function(){
      state.go('memberCenter');

    },
      //点击图片放大
    showBigImage :function (imageName) {  //传递一个参数（图片的URl）imageName
      vm.url = "http://39.97.234.111/base/userFiles/hdImg/"+imageName+""        
      
      vm.bigImage = true;//显示大图
    },
    keyBoardUp :function($event){
      if(ionic.Platform.isIOS()){
        document.getElementsByClassName("counselor-pop")[0].style.top="-30%"
      }
    },
    joinAct:function(){
      //如果 活动金额大于0 输入密码
        if(vm.messages[0].hbjfje>0){
           vm.jiebang()
           return;
        }
      var data = {
        "huodongid": vm.messages[0].hdid,
        "cyrid":localStorage.gcid

      };
      $http({
        method: 'POST',
        url: canjiaAct,
        headers: {  
          'Authorization': localStorage.token,
          'phoneNO' : localStorage.telephone,
        },  
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
             $rootScope.tip("参加成功");

          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
    },
    jiebang :function(id){
      vm.accountID = id
      var myPopup = $ionicPopup.show({
      template: '<input type="password" class="counselor-pop" ng-click="vm.keyBoardUp($event)" placeholder="请输入青贝密码" ng-model="vm.qbpass" name="vm.qbpass"    >',
       cssClass:'counselor-pop',
       title: '',
       scope: $scope,
       buttons: [
         { text: '×' },
         {
           text: '<b>确认参加活动</b>',
           type: 'button-positive',
           onTap: function(e) {
              if(vm.qbpass == ''){
                 $rootScope.tip('请输入密码');
                e.preventDefault();
              }else{
                return vm.qbpass;
              }
           }
         },
       ]
      });
      myPopup.then(function(res) {
        if(res){
          var data = {
            "huodongid": vm.messages[0].hdid,
            "cyrid":localStorage.gcid,
            "jymm": vm.qbpass
          };
            $http({
              method: 'POST',
              url: canjiaAct,
              data:data,
              headers: {  
                'Authorization': localStorage.token,
                'phoneNO' : localStorage.telephone,
              },  
              dataType: 'json',
              }).success(function(data) {
                if(data.code=='1000'){
                  $rootScope.tip("参加成功");
                }else{
                   $rootScope.tip(data.msg);
                }
              }).error(function(error) {
                 $rootScope.tip("网络忙，请稍后再试……");
      
              });
       
        }
      });
   
  },
  //初始默认大图是隐藏的
    hideBigImage : function () {
        vm.bigImage = false;
    },
    dateFormats:function (data) {
      var date = new Date(data);
      var seperator1 = "-";
      var year = date.getFullYear();
      var month = date.getMonth() + 1;
      var strDate = date.getDate();
      var Hours =date.getHours(); //时，
      var Minutes	=date.getMinutes(); //分
      var Seconds	=date.getSeconds(); //秒
      if (month >= 1 && month <= 9) {
        month = "0" + month;
      }
      if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
      }
        var currentdate =year+ seperator1+month + seperator1 + strDate;
      return currentdate;
    },
   
    dianzan:function(id,index){
      $http.get(bdDz+"?bdid="+id+"").success(function(data){
        if(data.code=="1000"){
          var aElements=document.getElementsByClassName("dzimg");
          var aElementsize=document.getElementsByClassName("dzsize");
          var aElement1s=document.getElementsByClassName("gifshow");

          for(var i=0;i<aElements.length;i++) {
              if(aElements[i].getAttribute("imgindex")==index){
                aElements[i].src="img/bd/List_praise_on.png"
                var  size = aElementsize[i].innerHTML;
                aElementsize[i].innerHTML=parseInt(size)+parseInt("1")
              }
          }
          for(var i=0;i<aElement1s.length;i++) {
            if(aElement1s[i].getAttribute("gifShow")==index){
                aElement1s[i].style.display="block"
                vm.index =i
                vm.hide(i);
                return;
            }
         }
        }
      }).error(function (error) {
          
           $rootScope.tip("网络忙，请稍后再试……");
        
      });

    },
    hide :function(i){
      setTimeout(function(){
        var aElement1s=document.getElementsByClassName("gifshow");

        aElement1s[i].style.display="none"

      },1000);
    },
    bdDetail:function(data){
      state.go("bdDetail",{bdData:JSON.stringify(data)});

    },
    getData:function (isInit){
     $http.get(bdMsgList+"?bdid="+vm.messages[0].bdid).success(function(data){
         if(data.datas.length!="0"){
           if(isInit){
              // vm.lyList= scrollList.init().add(data.datas);
                 vm.lyList= data.datas;

            }else{
              //  vm.lyList=scrollList.add(data.datas);
              //  $scope.$broadcast('scroll.infiniteScrollComplete');
              //  $ionicScrollDelegate.resize();
            }
         }else{
               vm.moredata = true;
         }
     }).error(function (error) {
         
          $rootScope.tip("网络忙，请稍后再试……");
        //  if(!isInit){
        //          //当获取数据失败的时候，为了避免无限上拉，将视图的位置向上滚动一点距离
        //          var positon = $ionicScrollDelegate.getScrollPosition();
        //          $ionicScrollDelegate.scrollTo(0,positon.top*0.9);
        //          $scope.$broadcast('scroll.infiniteScrollComplete');
        //  }
     });
  }
 }
//  vm.init(1);

})
.controller('RegisterLoginStep11Ctrl', function($rootScope,$scope,$stateParams,$interval,$ionicHistory,$ionicPopup,$http,sqLiteLoginInfo,req,reqRoot,state,tip,register,getMsg,$ionicLoading, $cordovaToast) {
  $scope.register={
    msgCode:'',
    ciKey:'',
    tel:$stateParams.tel,
    gcnikename:"",
    gcpass:"",
  }



  $scope.getMsgCode = function(){
    req.deviceInfo().then(function(deviceInfo){
      var data = {
        phoneNO:$stateParams.tel,
      };
      $ionicLoading.show()
      $http({
        method: 'POST',
        url: getMsg,
        dataType: 'json',
        data: data,

        }).success(function(data) {
          $ionicLoading.hide()
          if(data.code == "1000"){
             $rootScope.tip("短信验证码发送成功");
          }else{
             $rootScope.tip(data.returnMsg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });

    })
   
  }

  $scope.goRegisterView = function(){
    $rootScope.RLType="0";//回到注册页面去
    $rootScope.goBackView();
  }
  $scope.next = function(){
    if($scope.register.msgCode == ""){
       $rootScope.tip("请输入短信验证码");
      return;
    }
    if($scope.register.gcnikename == ""){
      $rootScope. $rootScope.tip("请输入昵称")
      return;
    }
    if($scope.register.gcpass == ""){
       $rootScope.tip("请输入密码");
      return;
    }
    req.deviceInfo().then(function(deviceInfo){
      var data = {
        gcnikename:$scope.register.gcnikename,
        gcpass:$scope.register.gcpass,
        gcphone:$stateParams.tel,
        validateCode:$scope.register.msgCode 
      };
      $ionicLoading.show()

      $http({
        method: 'POST',
        url: register,
        dataType: 'json',
        data: data,

        }).success(function(data) {
          $ionicLoading.hide()

          if(data.code == "1000"){
             $rootScope.tip("注册成功");
            state.go("login")
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });

    })
  }

  //$scope.getMsgCode();

})
//修改密码
.controller('upPassCtrl', function($rootScope,$scope,$http, $stateParams,$ionicHistory,$ionicPopup,state,req,reqRoot,_responseData,sqLiteLoginInfo,zcInfo,tip,httpService,updateMsg,addPass) {

  $scope.login = {
    gcphone: localStorage.telephone,//登录手机号
    validateCode:'',
    gcpass:'',
  };
  $scope.checkTel = function(){//验证手机号码
    var reg = /^1[2,3,4,5,6,7,8,9,0][0-9]{9}$/;
    if(!reg.test($scope.login.gcphone)){
       $rootScope.tip("请输入正确的手机号码");
      return false;
    }else{
      return true;
    }
  }
    $scope.formatMoblie = function(phone){
    if(phone && Object.prototype.toString.call(phone) === "[object String]" && phone != ''){
      return phone.substring(0,3)+'****'+phone.substring(phone.length-4,phone.length);
    }else{
      return '';
    }
  }
  $scope.change = function(){
     $scope.loginState = false;
  }
  //获取验证码
  $scope.getMsgCode=function(){
    if(!$scope.checkTel()&&$scope.gCode){
      return;
    }
      var data = {
        phoneNO:$scope.login.gcphone,
      };
      $http({
        method: 'POST',
        url: updateMsg,
        dataType: 'json',
        data: data,
        }).success(function(data) {
          if(data.code=='1000'){
          }else{
             $rootScope.tip(data.msg);
          }
        }).error(function(error) {
           $rootScope.tip("网络忙，请稍后再试……");

        });
  }
    //修改
    $scope.next=function(){
      if(!$scope.checkTel()){
        return;
      }
      req.deviceInfo().then(function(deviceInfo){
        var data = {
          gcphone: $scope.login.gcphone,
          validateCode:$scope.login.validateCode,
          gcpass:$scope.login.gcpass
        };
        $http({
          method: 'POST',
          url: addPass,
          dataType: 'json',
          data: data,
          }).success(function(data) {
            if(data.code=='1000'){
               $rootScope.tip("修改成功");
  
            }else{
               $rootScope.tip(data.msg);
            }
          }).error(function(error) {
             $rootScope.tip("网络忙，请稍后再试……");
  
          });
      })
    }


})



/******************************************************************************************************************************************************************/
/***************************************************************过滤器过滤器过滤器*********************************************************************************/
//保留两位小数点
  .filter('pointFormat',function(){
    return function(num) {
      var result;
      var numToString = num + '';
      var dotNum = numToString.indexOf(".");
      if (dotNum == -1) {//无小数点
        result = numToString + ".00";
      } else {//有小数点
        result = numToString.substring(0, dotNum + 3);
      }
      return result;
    }
  })
  //日期格式化
  .filter('dateFormat',function(){
    return function(num) {
      var result;
      result = num.substring(0, 4) + "-" + num.substring(4, 6) + "-" + num.substring(6, 8);
      return result;
    }
    
  })

  //日期格式化
  .filter('dateFormat',function(){
      return function(num) {
        var result;
        result = num.substring(0, 4) + "-" + num.substring(4, 6) + "-" + num.substring(6, 8);
        return result;
      }
      
    })

angular.module('starter.config', [])
.constant('configFile','https://www.he-pai.cn/app/www/chcp.json')
.constant('serveRoot','https://www.he-pai.cn/app/')//https://www.he-pai.cn/app/www/   /(\w+)\s(\w+)/
.constant('reqRoot','http://10.10.16.23:8800/mobiserver/api/newCall.do')
.constant('getMsg','http://www.qsgjgcs.com/userLoginGetValidateCode') //获取验证码
.constant('register','http://www.qsgjgcs.com/userRegister') //注册
.constant('login','http://www.qsgjgcs.com/userLoginIn') //登录
.constant('updateMsg','http://www.qsgjgcs.com/userRnoForRePass') //修改密码获取验证码
.constant('addPass','http://www.qsgjgcs.com/userRePass') //确认修改密码
.constant('upPhoto','http://www.qsgjgcs.com/userRePhoto') //修改头像
.constant('exitLogin','http://www.qsgjgcs.com/userLoginOut') //退出登录
.constant('bdMsgList','http://www.qsgjgcs.com/bangdan/queryPL') //榜单留言列表
.constant('imgUrl','http://39.97.234.111/base/userFiles/bdImg/') //图片路径
.constant('bdDz','http://www.qsgjgcs.com/bangdan/dataZan') //榜单点赞
.constant('bdList','http://www.qsgjgcs.com/bangdan/dataList') //评论列表

.constant('bdjb','http://www.qsgjgcs.com/bangdan/needLogin/jiebang') //我要揭榜
.constant('plbd','http://www.qsgjgcs.com/bangdan/needLogin/addReview') //留言
.constant('setbusiness','http://www.qsgjgcs.com/user/needLogin/jymm') //交易密码
.constant('getPrice','http://www.qsgjgcs.com/qingbei/needLogin/queryAmount') //获取金额
.constant('qbcs','http://www.qsgjgcs.com/qingbei/needLogin/qingBeiZZFirst') //青贝曾送
.constant('qbcs2','http://www.qsgjgcs.com/qingbei/needLogin/qingBeiZZSecond') //青贝曾送第二步
.constant('qbjl','http://www.qsgjgcs.com/qingbei/needLogin/qingBeiJYList') //青贝交易记录
.constant('getskm','http://www.qsgjgcs.com/qingbei/needLogin/qrcode') //获取青贝二维码
.constant('fbBd','http://www.qsgjgcs.com/bangdan/needLogin/add') //发布榜单
.constant('jbJl','http://www.qsgjgcs.com/bangdan/needLogin/jbList') //揭榜记录
.constant('fbJl','http://www.qsgjgcs.com/bangdan/needLogin/fbList') //发榜记录
.constant('bdDetailJl','http://www.qsgjgcs.com/bangdan/needLogin/bdjbrList') //当前榜单揭榜记录
.constant('ljjb','http://www.qsgjgcs.com/bangdan/needLogin/fbrJieBang') //揭榜
.constant('bdyl','http://www.qsgjgcs.com/bangdan/needLogin/imgPrv') //bdyl

.constant('hdfb','http://www.qsgjgcs.com/activity/needLogin/add') //活动发布
.constant('queryAct','http://www.qsgjgcs.com/activity/queryData') //活动列表
.constant('canjiaAct','http://www.qsgjgcs.com/activity/needLogin/cyhd') //参与活动


;

angular.module('starter.services', [])
//.constant('reqRoot','http://10.10.160.57:8000/mobileserver/api/newCall.do')//统一请求地址接口 正式http://10.10.16.75:6060/api/newCall.do
//.constant('reqRoot','http://10.10.27.15:8087/mobileserver-provider/api/newCall.do')
//.constant('reqRoot','http://10.10.160.11:8080/mobileserver/api/newCall.do')
//.constant('reqRoot','http://10.10.27.15:8087/mobileserver-provider/api/newCall.do')
//.constant('reqRoot','http://10.10.160.11:8080/mobileserver/api/newCall.do')
//.constant('reqRoot','http://10.10.27.86:8080/mobileserver/api/newCall.do')
//.constant('reqRoot','http://10.10.160.57:8000/mobileserver/api/newCall.do')
.factory ('sqLiteLoginInfo', function ($ionicPlatform,$cordovaSQLite,$window,$ionicPopup,$rootScope,$http,reqRoot,req,tip){
  var db;
  return {
      //初始化数据库
      initDb:function(){
       $ionicPlatform.ready(function() {
         if (window.cordova) {//手机设备
            db = $cordovaSQLite.openDB({ name:"hpApp.db",iosDatabaseLocation:'default'});
         }
         else{//浏览器
            db = window.openDatabase("hpApp.db", '1', 'my', 1024 * 1024 * 100);
         }
         //创建存储用户登录信息表，控制登录状态权限
         //$cordovaSQLite.execute(db, "drop table loginInfo");//测试时用
         $cordovaSQLite.execute(db, "CREATE TABLE IF NOT EXISTS loginInfo (id integer primary key, sessionId text, signKey text , gesturePwd text , gesturePwdTime text , gesturePwdErrorTime text)");
         //创建存储用户关键信息
         //$cordovaSQLite.execute(db, "drop table userInfo");//测试时用
         $cordovaSQLite.execute(db, "CREATE TABLE IF NOT EXISTS userInfo (id integer primary key, ciNo text ,ciNm text, ciType text , idType text ,idNo text, petNm text,auhStsBit text,busLmt text,photo text,mbPhn text,email text,prsCd text,rcmCd text,ciRelNm text,isSetTradePwd text,isApplyCert text,isSignCertAuth text,isNrd text,canToNrd text)");

         $cordovaSQLite.execute(db, "SELECT * FROM loginInfo ").then(function(res){
            if(res.rows.length == 0){
              $cordovaSQLite.execute(db, "INSERT INTO loginInfo (sessionId, signKey,gesturePwd,gesturePwdTime,gesturePwdErrorTime) VALUES (?,?,?,?,?)", ["","","","",""]).then(function(res) {
              }, function (err) {
                  tip(err);
              });
            }
         });
         $cordovaSQLite.execute(db, "SELECT * FROM userInfo ").then(function(res){
            if(res.rows.length == 0){
              $cordovaSQLite.execute(db, "INSERT INTO userInfo (ciNo,ciNm,ciType,idType,idNo,petNm,auhStsBit,busLmt,photo,mbPhn,email,prsCd,rcmCd,ciRelNm,isSetTradePwd,isApplyCert,isSignCertAuth,isNrd,canToNrd) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)", ["","","","","","","","","","","","","","","","","","",""])
              .then(function(res) {},
              function (err) {
                tip(err);
              });
            }
         });
        });
      },
      //获取登录用户sessionId
      //callback：接收返回的相应结果值
      getSessionId:function(callBack){
        $ionicPlatform.ready(function() {
          var query = "SELECT sessionId FROM loginInfo";
          $cordovaSQLite.execute(db, query).then(function(res) {
                callBack&&callBack(res.rows.length > 0?res.rows.item(0).sessionId:"");
          }, function (err) {
               tip(err);
          });
        });
      },
      //获取登录用户signKey
      //callback：接收返回的相应结果值
      getSignKey:function(callBack){
        $ionicPlatform.ready(function() {
          var query = "SELECT signKey FROM loginInfo";
          $cordovaSQLite.execute(db, query).then(function(res) {
              callBack&&callBack(res.rows.length > 0?res.rows.item(0).signKey:"");
          }, function (err) {
               tip(err);
          });
        });
      },
      //获取登录用户手势密码 gesturePwd
      //callback：接收返回的相应结果值
      getGesturePwd:function(callBack){
        $ionicPlatform.ready(function() {
          var query = "SELECT gesturePwd FROM loginInfo";
          $cordovaSQLite.execute(db, query).then(function(res) {
              callBack&&callBack(res.rows.length > 0?res.rows.item(0).gesturePwd:"");
          }, function (err) {
               tip(err);
          });
        });
      },
      //获取登录用户手势密码错误次数 gesturePwdErrorTime
      //callback：接收返回的相应结果值
      getGesturePwdErrorTime:function(callBack){
        $ionicPlatform.ready(function() {
          var query = "SELECT gesturePwdErrorTime FROM loginInfo";
          $cordovaSQLite.execute(db, query).then(function(res) {
              callBack&&callBack(res.rows.length > 0?res.rows.item(0).gesturePwdErrorTime:"");
          }, function (err) {
               tip(err);
          });
        });
      },
      //获取登录用户手势密码设置时间 gesturePwdTime
      //callback：接收返回的相应结果值
      getGesturePwdTime:function(callBack){
        $ionicPlatform.ready(function() {
          var query = "SELECT gesturePwdTime FROM loginInfo";
          $cordovaSQLite.execute(db, query).then(function(res) {
              callBack&&callBack(res.rows.length > 0?res.rows.item(0).gesturePwdTime:"");
          }, function (err) {
               tip(err);
          });
        });
      },
      //设置登录用户手势密码 gesturePwd
      setGesturePwd:function(pwd,callBack){
        $ionicPlatform.ready(function() {
          $cordovaSQLite.execute(db, "update  loginInfo set gesturePwd=?",[pwd]).then(function(res) {
              callBack&&callBack();
          }, function (err) {
               tip(err);
          });
        });
      },
       //设置登录用户手势密码错误次数 gesturePwdErrorTime
      //callback：接收返回的相应结果值
      setGesturePwdErrorTime:function(times,callBack){
        $ionicPlatform.ready(function() {
          $cordovaSQLite.execute(db, "update  loginInfo set gesturePwdErrorTime=?",[times]).then(function(res) {
              callBack&&callBack();
          }, function (err) {
               tip(err);
          });
        });
      },
      //设置用户手势密码时间 setGesturePwdTime
      setGesturePwdTime:function(time,callBack){
        $ionicPlatform.ready(function() {
          $cordovaSQLite.execute(db, "update  loginInfo set gesturePwdTime=?",[time]).then(function(res) {
              callBack&&callBack();
          }, function (err) {
               tip(err);
          });
        });
      },
      //用户登录信息录入
      //callback：执行成功的回调
      login:function(data,callBack){
          $ionicPlatform.ready(function() {
           // data.body[0]["sessionId"],["signKey"]
           var sessionId=data.sessionId||"",
            signKey=data.signKey||"",
            ciNo=data.ciNo||"",
            ciNm=data.ciNm||"",
            ciType=data.ciType||"",
            idType=data.idType||"",
            idNo=data.idNo||"",
            petNm=data.petNm,
            auhStsBit=data.auhStsBit||"",
            busLmt=data.busLmt||"",
            photo=data.photo||"",
            mbPhn=data.mbPhn||"",
            email=data.email||"",
            prsCd=data.prsCd||"",
            rcmCd=data.rcmCd,
            ciRelNm=data.ciRelNm||"",
            isSetTradePwd=data.isSetTradePwd||"",
            isApplyCert=data.isApplyCert||"",
            isSignCertAuth=data.isSignCertAuth||"",
            isNrd=data.isNrd||"",
            canToNrd=data.canToNrd||"";
            //存储用户登录信息
            $cordovaSQLite.execute(db, "update loginInfo set sessionId = ? , signKey = ?", [sessionId, signKey]).then(function(res) {
              $rootScope.logined=1;
              //存储用户关键信息
              $cordovaSQLite.execute(db, "update userInfo set ciNo = ?,ciNm = ?,ciType = ?,idType = ?,idNo = ?,petNm = ?,auhStsBit = ?,busLmt = ?,photo = ?,mbPhn = ?,email = ?,prsCd = ?,rcmCd = ?,ciRelNm = ?,isSetTradePwd = ?,isApplyCert = ?,isSignCertAuth = ?,isNrd = ?,canToNrd = ?", [ciNo,ciNm,ciType,idType,idNo,petNm,auhStsBit,busLmt,photo,mbPhn,email,prsCd,rcmCd,ciRelNm,isSetTradePwd,isApplyCert,isSignCertAuth,isNrd,canToNrd]).then(function(res) {
                 callBack&&callBack();
              }, function (err) {
                  tip(err);
              });
            }, function (err) {
               tip(err);
            });
          });
      },
      //登出
      exitLogin:function(callback){
        $ionicPlatform.ready(function() {
          req.deviceInfo().then(function(deviceInfo){
            $http.post(reqRoot, {
              "id": req.id(),
              "MethodCode":req.MethodCode("AUM008"),
              "signInfo":req.signInfo({
                "sessionId": deviceInfo.sessionId
              }, deviceInfo.signKey),
              "time":req.time(),
              "imei":deviceInfo.imei,//手机唯一标识
              "APPID":deviceInfo.APPID,//客户端id
              "APPVER":deviceInfo.APPVER,//客户端版本
              "MVER":req.MVER(),//手机系统版本
              "MTYPE":req.MTYPE(),//客户端类型
              "PMODEL":deviceInfo.PMODEL,//机型
              "PBRAND":deviceInfo.PBRAND,//手机品牌
              "chid":deviceInfo.chid,//推广渠道号
              "body": {
                "sessionId":deviceInfo.sessionId
              }
            }).success(function(data){
              if(data.returnCode=='0'){
                $cordovaSQLite.execute(db, 'update loginInfo set sessionId = "", signKey = "", gesturePwd = "", gesturePwdTime = ""').then(function(res){
                    $rootScope.logined=0;
                    //存储用户关键信息
                    $cordovaSQLite.execute(db, "update userInfo set ciNo = ?,ciNm = ?,ciType = ?,idType = ?,idNo = ?,petNm = ?,auhStsBit = ?,busLmt = ?,photo = ?,mbPhn = ?,email = ?,prsCd = ?,rcmCd = ?,ciRelNm = ?,isSetTradePwd = ?,isApplyCert = ?,isSignCertAuth = ?,isNrd = ?,canToNrd = ?", ["","","","","","","","","","","","","","","","","","",""]).then(function(res) {
                        tip("退出成功",function(){
                          callback&&callback();
                          localStorage.setItem('fromNrdtoMain', '0');
                          localStorage.isFirstLogined = '0'; //0代表第一次登陆
                          localStorage.removeItem('userInfoMsg'); //退出的时候清空之前存储的用户信息
                        });
                    }, function (err) {
                        tip("退出失败");
                    });
                },function(err){
                  tip("退出失败");
                });
              }else{
                tip(data.returnMsg);
              }
            }).error(function (error) {
               tip("退出失败！");
            })
          })
        })
      },
      //合富退出不要提示
      hfExitLogin:function(callback){
        $ionicPlatform.ready(function() {
          req.deviceInfo().then(function(deviceInfo){
            $http.post(reqRoot, {
              "id": req.id(),
              "MethodCode":req.MethodCode("AUM008"),
              "signInfo":req.signInfo({
                "sessionId": deviceInfo.sessionId
              }, deviceInfo.signKey),
              "time":req.time(),
              "imei":deviceInfo.imei,//手机唯一标识
              "APPID":deviceInfo.APPID,//客户端id
              "APPVER":deviceInfo.APPVER,//客户端版本
              "MVER":req.MVER(),//手机系统版本
              "MTYPE":req.MTYPE(),//客户端类型
              "PMODEL":deviceInfo.PMODEL,//机型
              "PBRAND":deviceInfo.PBRAND,//手机品牌
              "chid":deviceInfo.chid,//推广渠道号
              "body": {
                "sessionId":deviceInfo.sessionId
              }
            }).success(function(data){
              if(data.returnCode=='0'){
                $cordovaSQLite.execute(db, 'update loginInfo set sessionId = "", signKey = "", gesturePwd = "", gesturePwdTime = ""').then(function(res){
                    $rootScope.logined=0;
                    //存储用户关键信息
                    $cordovaSQLite.execute(db, "update userInfo set ciNo = ?,ciNm = ?,ciType = ?,idType = ?,idNo = ?,petNm = ?,auhStsBit = ?,busLmt = ?,photo = ?,mbPhn = ?,email = ?,prsCd = ?,rcmCd = ?,ciRelNm = ?,isSetTradePwd = ?,isApplyCert = ?,isSignCertAuth = ?,isNrd = ?,canToNrd = ?", ["","","","","","","","","","","","","","","","","","",""]).then(function(res) {
                        /*tip("退出成功",function(){
                          callback&&callback();
                        });*/
                        callback&&callback();
                    }, function (err) {
                       // tip("退出失败");
                    });
                },function(err){
                 // tip("退出失败");
                });
              }else{
                //tip(data.returnMsg);
              }
            }).error(function (error) {
               //tip("退出失败！");
            })
          })
        })
      },
      //用户信息表操作
      userInfo:(function(){
        return {
          get:function(callBack){
            $ionicPlatform.ready(function() {
              var userInfo={'ciNo':'','ciNm':'','ciType':'','idType':'','idNo':'','petNm':'','auhStsBit':'','busLmt':'','photo':'','mbPhn':'','email':'','prsCd':'','rcmCd':'','ciRelNm':'','isSetTradePwd':'','isApplyCert':'','isSignCertAuth':'','isNrd':'','canToNrd':''}
              $cordovaSQLite.execute(db, "SELECT * FROM userInfo").then(function(res) {
                  userInfo.ciNo=res.rows.length > 0?res.rows.item(0).ciNo:"";
                  userInfo.ciNm=res.rows.length > 0?res.rows.item(0).ciNm:"";
                  userInfo.ciType=res.rows.length > 0?res.rows.item(0).ciType:"";
                  userInfo.idType=res.rows.length > 0?res.rows.item(0).idType:"";
                  userInfo.idNo=res.rows.length > 0?res.rows.item(0).idNo:"";
                  userInfo.petNm=res.rows.length > 0?res.rows.item(0).petNm:"";
                  userInfo.auhStsBit=res.rows.length > 0?res.rows.item(0).auhStsBit:"";
                  userInfo.busLmt=res.rows.length > 0?res.rows.item(0).busLmt:"";
                  userInfo.photo=res.rows.length > 0?res.rows.item(0).photo:"";
                  userInfo.mbPhn=res.rows.length > 0?res.rows.item(0).mbPhn:"";
                  userInfo.email=res.rows.length > 0?res.rows.item(0).email:"";
                  userInfo.prsCd=res.rows.length > 0?res.rows.item(0).prsCd:"";
                  userInfo.rcmCd=res.rows.length > 0?res.rows.item(0).rcmCd:"";
                  userInfo.ciRelNm=res.rows.length > 0?res.rows.item(0).ciRelNm:"";
                  userInfo.isSetTradePwd=res.rows.length > 0?res.rows.item(0).isSetTradePwd:"";
                  userInfo.isApplyCert=res.rows.length > 0?res.rows.item(0).isApplyCert:"";
                  userInfo.isSignCertAuth=res.rows.length > 0?res.rows.item(0).isSignCertAuth:"";
                  userInfo.isNrd=res.rows.length > 0?res.rows.item(0).isNrd:"";
                  userInfo.canToNrd=res.rows.length > 0?res.rows.item(0).canToNrd:"";
                  callBack&&callBack(userInfo);
              }, function (err) {
                   tip('获取用户信息');
              });
            });
          },
          set:function(data,callBack){
            $ionicPlatform.ready(function() {
              var ciNo=data.ciNo,ciNm=data.ciNm,ciType=data.ciType,idType=data.idType,idNo=data.idNo,petNm=data.petNm,auhStsBit=data.auhStsBit,busLmt=data.busLmt,photo=data.photo,mbPhn=data.mbPhn,email=data.email,prsCd=data.prsCd,rcmCd=data.rcmCd,ciRelNm=data.ciRelNm,isSetTradePwd=data.isSetTradePwd,isApplyCert=data.isApplyCert,isSignCertAuth=data.isSignCertAuth,isNrd=data.isNrd,canToNrd=data.canToNrd;
              //修改存储用户关键信息
              $cordovaSQLite.execute(db, "update userInfo set ciNo = ?, ciNm = ?,ciType = ?,idType = ?,idNo = ?,petNm = ?,auhStsBit = ?,busLmt = ?,photo = ?,mbPhn = ?,email = ?,prsCd = ?,rcmCd = ?,ciRelNm = ?,isSetTradePwd = ?,isApplyCert = ?,isSignCertAuth = ?,isNrd = ?,canToNrd = ?", [ciNo,ciNm,ciType,idType,idNo,petNm,auhStsBit,busLmt,photo,mbPhn,email,prsCd,rcmCd,ciRelNm,isSetTradePwd,isApplyCert,isSignCertAuth,isNrd,canToNrd]).then(function(res) {
                 callBack&&callBack();
              }, function (err) {
                  $ionicPopup.alert({
                   title: '用户数据录入',
                   template: err,
                   okText:"确定"
                 });
              });
            });
          }
        }
      })(),
      //清空数据库表
      clear:function(){
        $ionicPlatform.ready(function() {
          $cordovaSQLite.execute(db, "drop table loginInfo");
          $cordovaSQLite.execute(db, "drop table userInfo");
        });
      }
  }
})
//BidDetailCtrl和ProjectDetailCtrl这2个控制器公用数据
.factory('projectDetail',function(){
  var projectDetailList=[];
  return {
    all:function(){
      return projectDetailList;
    },
    //append必须为数组
    add:function(append){
      projectDetailList = projectDetailList.concat(append);
      return projectDetailList;
    },
    init:function(){
      projectDetailList = [];
      return this;
    }
   }
})
//WithdrawCtrl、RecordCtrl和RecordQueryCtrl公用，存储RecordCtrl页面的查询参数
.factory('RecordQuery',function(){
  var RecordQueryObj={
     doQuery : false,//进入record页面时，是否执行query，而不是用缓存
     query : { //查询条件对象
      sessionId : "",
      type : "0",
      paySts : null,
      timeStart : null,
      timeEnd : null,
      rmk : null,
      pageNo : "1" ,
      pageSize : "10"
    }
  };

  return {
    get:function(){
      return RecordQueryObj;
    },
    //append必须为对象类型
    set:function(obj){
      angular.extend(RecordQueryObj,obj);
      return RecordQueryObj;
    },
    pagePlus : function(){
      RecordQueryObj.query.pageNo = parseInt(RecordQueryObj.query.pageNo)+1+'';
      return RecordQueryObj;
    },
    init:function(){
      RecordQueryObj = {
         doQuery : false,
         query : { //查询条件对象
          sessionId : "",
          type : "0",
          paySts : null,
          timeStart : null,
          timeEnd : null,
          rmk : null,
          pageNo : "1" ,
          pageSize : "10"
        }
      };
      return this;
    }
   }
})
//我的合拍首页
.factory('memberCenter',function(){
  return {
    get:function(){

    }
  }
})
//资金流水查询条件
.factory('capitalQuery',function() {
  var query = {
  };
  return {
    query: query,
    clear: function() {
      this.query = {
        timeStart: new Date(new Date().setYear((new Date().getFullYear()-1))),
        timeEnd: new Date()
      };
    }
  }
})
//重置交易密码
.factory('resetTradePwdInfo', function() {
  var info = {
    mbPhn: '',
    ciNm: '',
    smsCode: '',
    ciKey: '',
    id: '',
    ciNo:''
  }

  return {
    info: info,
    clear: function() {
      this.info = {};
    }
  }
})

//投资信息
.factory('investFactory',function(){
  var bidInfo = {
        "lnNm":"",
        "period":0,
        "unit":"",
        "rate":0,
        "investM":0,
        "income":0,
        "isGoRegularPlan": false,
        "extraRate":0
      }
  return {
    setInfo:function(info){
      bidInfo.lnNm = info.lnNm;
      bidInfo.period = info.period;
      bidInfo.unit = info.unit;
      bidInfo.rate = info.rate;
      bidInfo.investM = info.investM;
      bidInfo.income = info.income;
      bidInfo.isGoRegularPlan = info.isGoRegularPlan;
      bidInfo.extraRate = info.extraRate;
    },
    getInfo:function(){
      return bidInfo;
    }
  }
})

//提现信息
.factory('withdrawFactory',function(){
  var withdrawInfo = {
        "withdrawalamount":"0",
        "feeamt":"0",
        "acsts":"",
        "acno":"",
        "prvcd":"",
        "ctycd":"",
        "bchno":"",
        "bchnm":"",
        "isFree":"0",
        "payIntegral":"0",
        "routeCode":"1",
        "branchInfo":"",
      }
  return {
    setInfo:function(info){
      withdrawInfo.withdrawalamount = info.withdrawalamount;
      withdrawInfo.feeamt = info.feeamt;
      withdrawInfo.acsts = info.acsts;
      withdrawInfo.acno = info.acno;
      withdrawInfo.prvcd = info.prvcd;
      withdrawInfo.ctycd = info.ctycd;
      withdrawInfo.bchno = info.bchno;
      withdrawInfo.bchnm = info.bchnm;
      withdrawInfo.isFree = info.isFree;
      withdrawInfo.payIntegral = info.payIntegral;
      withdrawInfo.routeCode = info.routeCode;
      withdrawInfo.branchInfo = info.branchInfo;
    },
    getInfo:function(){
      return withdrawInfo;
    }
  }
})

//提现手续费
.factory('feeFactory',function(){
  var feeInfo = {
    feeamt:0
  };
  return {
    set:function(fee){
      feeInfo.feeamt = fee.fee;
    },
    get:function(){
      return feeInfo;
    }
  }
})
//短信验证码控制
.factory('msgCode',function(){
  var countdown={
    isCount:false
  };
  return countdown;

})

//充值
.factory('reCharge',function($ionicPopup,$timeout,$http,reqRoot,req,state){
    var limits=[  //匹配限额
        {name:"工商银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"农业银行",oneLimit:"50000",dayLimit:"100000"},
        {name:"中国银行",oneLimit:"50000",dayLimit:"100000"},
        {name:"中国建设银行",oneLimit:"50000",dayLimit:"100000"},
        {name:"建设银行",oneLimit:"50000",dayLimit:"100000"},
        {name:"邮政储蓄银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"平安银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"民生银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"光大银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"广发银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"广东发展银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"中信银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"兴业银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"华夏银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"招商银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"浦发银行",oneLimit:"49999",dayLimit:"49999"},
        {name:"交通银行",oneLimit:"50000",dayLimit:"100000"},
        {name:"上海银行",oneLimit:"5000",dayLimit:"5000"}
    ];
    var limitKq=[  //匹配限额
        {name:"工商银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"农业银行",oneLimit:"200000",dayLimit:"500000"},
        {name:"招商银行",oneLimit:"50000",dayLimit:"30000000"},
        {name:"建设银行",oneLimit:"300000",dayLimit:"500000"},
        {name:"中国银行",oneLimit:"50000",dayLimit:"100000"},
        {name:"交通银行",oneLimit:"50000",dayLimit:"70000"},
        {name:"浦发银行",oneLimit:"300000",dayLimit:"300000"},
        {name:"广发银行",oneLimit:"500000",dayLimit:"50000000"},
        {name:"广东发展银行",oneLimit:"500000",dayLimit:"50000000"},
        {name:"民生银行",oneLimit:"5000",dayLimit:"5000"},
        {name:"平安银行",oneLimit:"500000",dayLimit:"50000000"},
        {name:"光大银行",oneLimit:"100000",dayLimit:"50000000"},
        {name:"兴业银行",oneLimit:"50000",dayLimit:"50000000"},
        {name:"中信银行",oneLimit:"500000",dayLimit:"50000000"},
        {name:"华夏银行",oneLimit:"500000",dayLimit:"50000000"},
        {name:"邮政储蓄银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"邮储银行",oneLimit:"50000",dayLimit:"50000"}
    ];
    var limitsll=[  //匹配限额
        {name:"农业银行",oneLimit:"200000",dayLimit:"200000"},
        {name:"交通银行",oneLimit:"200000",dayLimit:"200000"},
        {name:"工商银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"邮政储蓄银行",oneLimit:"5000",dayLimit:"5000"},
        {name:"浦发银行",oneLimit:"50000",dayLimit:"500000"},
        {name:"广发银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"广东发展银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"平安银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"招商银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"民生银行",oneLimit:"500000",dayLimit:"500000"},
        {name:"中国银行",oneLimit:"50000",dayLimit:"500000"},
        {name:"建设银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"中国建设银行",oneLimit:"50000",dayLimit:"200000"},
        {name:"光大银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"兴业银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"中信银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"华夏银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"杭州银行",oneLimit:"50000",dayLimit:"1000000"},
        {name:"北京银行",oneLimit:"50000",dayLimit:"1000000"},
        {name:"浙商银行",oneLimit:"5000",dayLimit:"5000"},
        {name:"上海银行",oneLimit:"5000",dayLimit:"5000"},
        {name:"广州银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"太仓农村商业银行",oneLimit:"50000",dayLimit:"50000"},
        {name:"东莞农商",oneLimit:"500000",dayLimit:"1000000"},
        {name:"广东农信",oneLimit:"500000",dayLimit:"1000000"},
        {name:"广州农商",oneLimit:"500000",dayLimit:"1000000"},
        {name:"深圳农村商业银行",oneLimit:"50000",dayLimit:"1000000"},
        {name:"宁波银行",oneLimit:"500000",dayLimit:"500000"},
        {name:"山东农信社",oneLimit:"500000",dayLimit:"1000000"},
        {name:"江南农村商业银行",oneLimit:"100000",dayLimit:"100000"},
        {name:"吉林省农信社",oneLimit:"200000",dayLimit:"1000000"},
        {name:"甘肃农信社",oneLimit:"50000",dayLimit:"1000000"},
        {name:"江苏银行",oneLimit:"50000",dayLimit:"1000000"},
        {name:"长江商业银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"黑龙江农信社",oneLimit:"500000",dayLimit:"1000000"},
        {name:"恒丰银行",oneLimit:"500000",dayLimit:"1000000"},
        {name:"广东南粤",oneLimit:"50000",dayLimit:"1000000"},
        {name:"东莞银行",oneLimit:"50000",dayLimit:"1000000"},
        {name:"武汉农商行",oneLimit:"500000",dayLimit:"1000000"} 
    ];
    var limitsZjcg=[  //匹配限额
        {name:"工商银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"农业银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"建设银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"兴业银行",oneLimit:"5万",dayLimit:"10万"},
        {name:"光大银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"中信银行",oneLimit:"1000",dayLimit:"1000"},
        {name:"平安银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"民生银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"广发银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"广东发展银行",oneLimit:"10万",dayLimit:"10万"},
        {name:"浦发银行",oneLimit:"2万",dayLimit:"10万"},
        {name:"交通银行",oneLimit:"5万",dayLimit:"10万"}
    ];
    var alertPopup=function(title){
        var alertPopup = $ionicPopup.alert({
            title: title,
            template: '<style>.popup-head{border-bottom: 0px solid #eee;}.popup-body{padding:0}</style>',
            buttons:[]
        });
        $timeout(function() {
            alertPopup.close(); //由于某种原因3秒后关闭弹出
        }, 3000);
    };
    var confirmPopup=function(){
        var confirmPopup = $ionicPopup.confirm({
            title: '请添加银行卡',
            template: '添加银行卡才能使用快捷支付哦！',
            buttons: [
                { text: '取消' },
                {
                    text: '<b>去绑定</b>',
                    type: 'button-positive',
                    onTap: function(e) {
                        state.go("doing");
                    }
                },
            ]
        });
        confirmPopup.then(function(res) {
            if(res) {
                console.log('确定');
            } else {
                console.log('取消');
            }
        });
    };

    return {
        limits:function(){  //大额支付限额
          return limits;
        },
        limitKq:function(){  //快钱支付限额
          return limitKq;
        },
        limitsll:function(){  //连连支付限额
            return limitsll;
        },
        limitsZjcg:function(){  //资金存管限额
            return limitsZjcg;
        },
        alertPopup:function(title){  //提示弹出框
            return alertPopup(title);
        },
        confirmPopup:function(){   //确认对话框
            return confirmPopup();
        }
    }
})

.factory('planDetailFactory',function(){
  var planDetailInfo = {
        "ivsAmt":"",
        "rate":"",
        "joinDate":"",
        "exitDate":"",
        "remainAmt":"",
        "waitBackAmt":"",
        "expireAmt":""
      };
  return {
    setInfo:function(info){
      planDetailInfo.ivsAmt = info.ivsAmt;
      planDetailInfo.rate = info.rate;
      planDetailInfo.joinDate = info.joinDate;
      planDetailInfo.exitDate = info.exitDate;
      planDetailInfo.remainAmt = info.remainAmt;
      planDetailInfo.waitBackAmt = info.waitBackAmt;
      planDetailInfo.expireAmt = info.expireAmt;
    },
    getInfo:function(){
      return planDetailInfo;
    }
  };
})
//积分抵扣选择
.factory('withdrawFeeFactory',function($rootScope,$http,$ionicPopup,req,reqRoot,state,tip){ 
  var feeInfo = {
        "feeType":0,
        "deductionType": "",
        "fee":0,
        "isInit":true
      };

  return {
    setInfo:function(info){
      feeInfo.feeType = info.feeType;
      feeInfo.deductionType = info.deductionType;
      feeInfo.fee = info.fee;
      feeInfo.isInit = info.isInit;
    },
    getInfo:function(){
      return feeInfo;
    }
  };
})
//获取可用余额
.factory('balance',function($rootScope,$http,$ionicPopup,req,reqRoot,state,tip){
  var getBalanceValue=function(callback){
    req.deviceInfo().then(function(deviceInfo){
    var jmh=req.signInfo({"sessionId": deviceInfo.sessionId}, deviceInfo.signKey);
    $http.post(reqRoot, {
      "id": req.id(),
      "MethodCode":req.MethodCode("UM071"),
      "time":req.time(),
      "signInfo":req.signInfo({
        "sessionId": deviceInfo.sessionId
      }, deviceInfo.signKey),
      "imei":deviceInfo.imei,//手机唯一标识
      "APPID":deviceInfo.APPID,//客户端id
      "APPVER":deviceInfo.APPVER,//客户端版本
      "MVER":req.MVER(),//手机系统版本
      "MTYPE":req.MTYPE(),//客户端类型
      "PMODEL":deviceInfo.PMODEL,//机型
      "PBRAND":deviceInfo.PBRAND,//手机品牌
      "chid":deviceInfo.chid,//推广渠道号
      "body": {
        "sessionId": deviceInfo.sessionId
      }
    }).success(function(data){
      if(data.returnCode=='1'){
        callback(data.body[0]);
      }
    }).error(function (error) {
      tip("网络忙，请稍后再试……");
    });
  });
  };
  var doBalancevalue=function(){
    $rootScope.isHasValue=true;
    var balanceValue='';
        $rootScope.isHasValue=true;//是否有余额
        getBalanceValue(function(useInfo){
          balanceValue=useInfo.availBal;
          if(balanceValue<1){
            $rootScope.isHasValue=false;
          }
        });
      };
  return {
    doBalancevalue:function(){
      return doBalancevalue();
    }
  };
})

//选择快钱银行卡数据
.factory('kqBankData',function(){
  var kqInfo = {
        "bankName": "",
        "bankNoAfter":"",
        "bankNo":"",
        "oneLimit":"",
        "dayLimit":""
      };
  return {
    setInfo:function(info){
      kqInfo.bankName = info.bankName;
      kqInfo.bankNoAfter = info.bankNoAfter;
      kqInfo.bankNo = info.bankNo;
      kqInfo.oneLimit=info.oneLimit;
      kqInfo.dayLimit=info.dayLimit;
    },
    getInfo:function(){
      return kqInfo;
    }
  };
})

//获取资金存管信息
.factory('zcInfo',function($http,$rootScope,req,reqRoot,tip,_responseData){
  return function(callback){
      req.deviceInfo().then(function(deviceInfo){
        $http.post(reqRoot, {
          "id": req.id(),
          "MethodCode":req.MethodCode("Z011"),
          "signInfo":req.signInfo({
            sessionId : deviceInfo.sessionId,
          }, deviceInfo.signKey),
          "time":req.time(),
          "imei":deviceInfo.imei,//手机唯一标识
          "APPID":deviceInfo.APPID,//客户端id
          "APPVER":deviceInfo.APPVER,//客户端版本
          "MVER":req.MVER(),//手机系统版本
          "MTYPE":req.MTYPE(),//客户端类型
          "PMODEL":deviceInfo.PMODEL,//机型
          "PBRAND":deviceInfo.PBRAND,//手机品牌
          "chid":deviceInfo.chid,//推广渠道号
          "body": {
            sessionId : deviceInfo.sessionId
          }
        }).success(function(data){
          _responseData(data,function(){
            callback(data);
          });
        }).error(function (error) {
          tip("网络忙，请稍后再试……");
        });    
      });
  }
})
.factory('chooseCity',function(){
  var cityInfo = {
        "zoneCityId": "",
        "zoneCity":""
      };
  return {
    setInfo:function(info){
      cityInfo.zoneCityId = info.zoneCityId;
      cityInfo.zoneCity = info.zoneCity;
    },
    getInfo:function(){
      return cityInfo;
    }
  };
})
.factory('httpService',function($http,$q,$rootScope,req,reqRoot,tip){
  return function(code,param,isHasLoadingFn,isHasLoadingHideFn){
    var deferred = $q.defer(); //通过$q注册一个延迟对象deferred 
    req.deviceInfo().then(function(deviceInfo){
        isHasLoadingFn ? isHasLoadingFn() : null;
        //$rootScope.loadingShow();
        $http.post(reqRoot, {
          "id": req.id(),
          "MethodCode":req.MethodCode(code),
          "signInfo":req.signInfo(param, deviceInfo.signKey),
          "time":req.time(),
          "imei":deviceInfo.imei,//手机唯一标识
          "APPID":deviceInfo.APPID,//客户端id
          "APPVER":deviceInfo.APPVER,//客户端版本
          "MVER":req.MVER(),//手机系统版本
          "MTYPE":req.MTYPE(),//客户端类型
          "PMODEL":deviceInfo.PMODEL,//机型
          "PBRAND":deviceInfo.PBRAND,//手机品牌
          "chid":deviceInfo.chid,//推广渠道号
          "body": param
        }).success(function(data){
          isHasLoadingHideFn ? isHasLoadingHideFn() : null;
          deferred.resolve(data); //任务被成功执行
        }).error(function (error) {
          isHasLoadingHideFn ? isHasLoadingHideFn() : null;
          tip("网络忙，请稍后再试……");
        });
    })   
    return deferred.promise; //返回deferred的promise对象  
  } 
})
//注册分享文案
.factory('registerShare',function(req,httpService,_responseData) {
  return function(callback) {
    req.deviceInfo().then(function(deviceInfo){
      //type=1是投资成功分享，2是注册分享,3是奖励规则
       httpService('S001',{'sessionId': deviceInfo.sessionId,'type':'2'}).then(function(data){
        _responseData(data,function(){
          callback(data);
        });
      });
    });
  };
})
.directive('fileModel', ['$parse', function ($parse) {
  return {
      restrict: 'A',
      link: function(scope, element, attrs, ngModel) {
          var model = $parse(attrs.fileModel);
          var modelSetter = model.assign;
          element.bind('change', function(event){
              scope.$apply(function(){
                  modelSetter(scope, element[0].files[0]);
              });
              //附件预览
                   scope.file = (event.srcElement || event.target).files[0];
              scope.getFile();
          });
      }
  };
}]);
;


angular.module('starter.router', [])
.config(function($stateProvider, $urlRouterProvider){
  $stateProvider
  // setup an abstract state for the tabs directive
  .state('tab', {
    url: '/tab',
    abstract: true,
    templateUrl: 'templates/tabs.html',
    controller: 'TabCtrl'
  })
  // Each tab has its own nav history stack:
  .state('tab.investIndex', {
      cache: false,
      url: '/investIndex',
      views: {
        'tab-investIndex': {
          templateUrl: 'templates/tab-investIndex.html',
          controller: 'InvestIndexCtrl'
        }
      }
  })

  .state('tab.bidList', {
    cache: false,
    url: '/bidList/:bidId/:querytype/:isPreview',
    prefetchTemplate:false,
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidList.html',
          controller: 'BidListCtrl'
        }
    }
  })
  .state('tab.bidListNewFish', {
    cache: false,
    prefetchTemplate:false,
    url: '/bidListNewFish/:bidId',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidListNewFish.html',
          controller: 'BidListNewFishCtrl'
        }
    }
  })
  .state('tab.bidListCly', {
    cache: false,
    prefetchTemplate:false,
    url: '/bidListCly/:bidId/:querytype',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidListCly.html',
          controller: 'BidListClyCtrl'
        }
    }
  })
  .state('tab.bidHistory', {
    cache: false,
    prefetchTemplate:false,
    url: '/bidHistory/:bidId/:querytype',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidHistory.html',
          controller: 'BidHistoryCtrl'
        }
    }
   })
  .state('tab.bidDetail', {
    cache: false,
    prefetchTemplate:false,
    url: '/bidDetail/:lnNo/:bidId',
    params: {
      NOVICETENDERAMT:'',
      NOVICETENDERTIMES:''
    },
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidDetail.html',
          controller: 'BidDetailCtrl'
        }
    }
   })
  /*项目详情页*/
  .state('tab.projectDetail', {
    cache: false,
    prefetchTemplate:false,
    url: '/projectDetail/:lnNo/:bidId/:prdType/:srcLnNo',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectDetail.html',
          controller: 'ProjectDetailCtrl'
        }
    }
   })
  /*普通标产品详情页*/
  .state('tab.projectDetailCpxq', {
    cache: false,
    prefetchTemplate:false,
    url: '/projectDetailCpxq/:lnNo/:bidId/:prdType/:srcLnNo',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectDetailCpxq.html',
          controller: 'ProjectDetailCtrl'
        }
    }
   })
  /*普通标担保机构页*/
  .state('tab.projectDetailDbjg', {
    cache: false,
    prefetchTemplate:false,
    url: '/projectDetailDbjg/:lnNo/:bidId/:prdType/:srcLnNo',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectDetailDbjg.html',
          controller: 'ProjectDetailCtrl'
        }
    }
   })
  /*普通标风控措施页*/
  .state('tab.projectDetailFkcs', {
    cache: false,
    prefetchTemplate:false,
    url: '/projectDetailFkcs/:lnNo/:bidId/:prdType/:srcLnNo',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectDetailFkcs.html',
          controller: 'ProjectDetailCtrl'
        }
    }
   })
  /*项目来源*/
  .state('tab.projectResource', {
    cache: false,
    prefetchTemplate:false,
    url: '/projectResource/:lnNo',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectResource.html',
          controller: 'ProjectResourceCtrl'
        }
    }
   })
  .state('tab.investRecord', {
    cache: false,
    prefetchTemplate:false,
    url: '/investRecord/:lnNo/:bidId',
    views:{
        'tab-investIndex': {
          templateUrl: 'templates/investRecord.html',
          controller: 'InvestRecordCtrl'
        }
    }
  })
  /*投资券*/
  .state('investTickets', {
        cache: false,
        prefetchTemplate:false,
        url: '/investTickets/:type/:isInvest/:lnno',
        templateUrl: 'templates/investTickets.html',
        controller: 'InvestTicketsCtrl'
    })
  /*协议*/
  .state('tab.investProtocol', {
        cache: false,
        prefetchTemplate:false,
        url: '/investProtocol/:lnno/:lnamt',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investProtocol.html',
            controller: 'InvestProtocolCtrl'
          }
        }
    })
  /*金交所协议*/
  .state('tab.investJjsProtocol', {
        cache: false,
        prefetchTemplate:false,
        url: '/investJjsProtocol/:lnno/:lnamt/:bidAmtDF',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investJjsProtocol.html',
            controller: 'InvestJjsProtocolCtrl'
          }
        }
    })
  .state('tab.invest', {
        //暂时去掉
        //cache: false,
        prefetchTemplate:false,
        url: '/invest/:lnno/:lnamt/:isNew/:rate/:bidId',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/invest.html',
            controller: 'InvestCtrl'
          }
        }
    })
  .state('tab.investSyd', {//和普通标的投资页面共用controller
        //暂时去掉
        prefetchTemplate:false,
        //cache: false,
        url: '/investSyd/:lnno/:lnamt/:isNew/:rate/:bidId/:lnTerm',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investSyd.html',
            controller: 'InvestCtrl'
          }
        }
    })
  .state('tab.investSuccess', {
        cache: false,
        prefetchTemplate:false,
        url: '/investSuccess/:msg',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investSuccess.html',
            controller: 'InvestSuccessCtrl'
          }
        }
    })




  //银行卡信息
   .state('tab.banksInfo', {
    cache: false,
    prefetchTemplate:false,
    url: '/banksInfo',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/banksInfo.html',
          controller: 'BanksInfoCtrl'
        }
    }
   })

  //资产统计
  .state('tab.assetStatistics', {
        cache: false,
        prefetchTemplate:false,
        url: '/assetStatistics',
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/assetStatistics.html',
          controller: 'AssetStatisticsCtrl'
        }
    }
    })
  //我的投资
  .state('tab.myInvest', {
        cache: false,
        prefetchTemplate:false,
        url: '/myInvest',
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/myInvest.html',
          controller: 'MyInvestCtrl'
        }
    }
    })
  //我的投资(改版)
  .state('tab.myInvestNew', {
        cache: false,
        prefetchTemplate:false,
        url: '/myInvestNew/:tabIndex/:queryType/:planStatus',//tabIndex:0 投资项目 tabIndex:1 定期计划;queryType:投资项目的类型，2持有中，3已结清，4已债转;planStatus:定期计划类型，1持有中，2退出中，3已退出
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/myInvestNew.html',
          controller: 'MyInvestNewCtrl'
        }
    }
    })
   //投资详情
  .state('tab.investDetail', {
        cache: false,
        url: '/investDetail/:lnNo/:txNo/:prdTyp/:type/:index',
        prefetchTemplate:false,
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/investDetail.html',
          controller: 'InvestDetailCtrl'
        }
    }
    })
  //资金管理
  .state('tab.capitalM', {
        cache: false,
        prefetchTemplate:false,
        url: '/capitalM',
        views:{
          'tab-memberCenter': {
            templateUrl: 'templates/capitalM.html',
            controller: 'capitalMCtrl'
          }
        }
    })
  //资金流水
  .state('tab.capitalFlow', {
        cache: false,
        prefetchTemplate:false,
        url: '/capitalFlow',
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/capitalFlow.html',
          controller: 'CapitalFlowCtrl'
        }
    }
    })
  //资金流水查询
  .state('capitalFlowQuery', {
        cache: false,
        prefetchTemplate:false,
        url: '/capitalFlowQuery',
        templateUrl: 'templates/capitalFlowQuery.html',
        controller: 'CapitalFlowQueryCtrl'
    })
  //充提记录，此页面需要缓存，不要加cache:false
  .state('record', {
        url: '/record',
        prefetchTemplate:false,
        templateUrl: 'templates/record.html',
        controller: 'RecordCtrl'
    })
  //充提记录查询
  .state('recordQuery', {
        cache: false,
        url: '/recordQuery',
        prefetchTemplate:false,
        templateUrl: 'templates/recordQuery.html',
        controller: 'RecordQueryCtrl'
    })
  //充提记录详情
  .state('recordInfo', {
        cache: false,
        prefetchTemplate:false,
        url: '/recordInfo/:index',
        templateUrl: 'templates/recordInfo.html',
        controller: 'RecordInfoCtrl'
    })

    //安全认证
   .state('tab.safeAuthen', {
    cache: false,
    prefetchTemplate:false,
    url: '/safeAuthen',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/safeAuthen.html',
          controller: 'safeAuthenCtrl'
        }
    }
   })
   //实名认证
   .state('tab.realName', {
    url: '/realName',
    prefetchTemplate:false,
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/realName.html',
          controller: 'realNameCtrl'
        }
    }
   })
   //实名认证后信息展示
   .state('tab.realNameInfo', {
    url: '/realNameInfo',
    prefetchTemplate:false,
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/realNameInfo.html',
          controller: 'RealNameInfoCtrl'
        }
    }
   })
   //更换绑定的手机号码
   .state('tab.updatePhn', {
    cache: false,
    url: '/updatePhn',
    prefetchTemplate:false,
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/updatePhn.html',
          controller: 'updatePhnCtrl'
        }
    }
   })
   //更换绑定的手机号码第二步
   .state('tab.updatePhnStep2', {
    cache: false,
    prefetchTemplate:false,
    url: '/updatePhnStep2',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/updatePhnStep2.html',
          controller: 'updatePhnStep2Ctrl'
        }
    }
   })

    //修改交易密码
   .state('tab.updateTradePwd', {
    cache: false,
    prefetchTemplate:false,
    url: '/updateTradePwd',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/updateTradePwd.html',
          controller: 'UpdateTradePwdCtrl'
        }
    }
   })
   //我的积分
   .state('tab.scoreM', {
    cache: false,
    prefetchTemplate:false,
    url: '/scoreM',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/scoreM.html',
          controller: 'scoreMCtrl'
        }
    }
   })
   //会员等级
   .state('tab.scoreLevel', {
    cache: false,
    prefetchTemplate:false,
    url: '/scoreLevel',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/scoreLevel.html',
          controller: 'scoreLevelCtrl'
        }
    }
   })
   //成长值及积分明细记录
   .state('tab.scoreDetail', {
    cache: false,
    prefetchTemplate:false,
    url: '/scoreDetail/:type/:titleName',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/scoreDetail.html',
          controller: 'scoreDetailCtrl'
        }
    }
   })
   //积分兑换
   .state('tab.scoreExchange', {
    cache: false,
    prefetchTemplate:false,
    url: '/scoreExchange',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/scoreExchange.html',
          controller: 'scoreExchangeCtrl'
        }
    }
   })

   //账户充值
  .state('recharge', {
        url: '/recharge',
        prefetchTemplate:false,
        templateUrl: 'templates/recharge.html',
        controller: 'RechargeCtrl'
    })
  //大额支付
  .state('largePayment', {
        url: '/largePayment',
        prefetchTemplate:false,
        templateUrl: 'templates/largePayment.html',
        controller: 'LargePaymentCtrl'
    })
  //快钱支付
  .state('quickMoneyPayment', {
        cache: false,
        prefetchTemplate:false,
        url: '/quickMoneyPayment/:select',
        templateUrl: 'templates/quickMoneyPayment.html',
        controller: 'QuickMoneyPaymentCtrl'
    })
  //快钱支付银行卡列表
  .state('tab.quickMoneySelectBank', {
        cache: false,
        prefetchTemplate:false,
        url: '/quickMoneySelectBank',
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/quickMoneySelectBank.html',
          controller: 'QuickMoneySelectBankCtrl'
        }
      }
    })
  //新增快捷支付银行卡
  .state('tab.addKqBanks', {
        cache: false,
        prefetchTemplate:false,
        url: '/addKqBanks',
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/addKqBanks.html',
          controller: 'AddKqBanksCtrl'
        }
      }
    })
  //快捷支付
  .state('quickPayment', {
        prefetchTemplate:false,
        url: '/quickPayment',
        templateUrl: 'templates/quickPayment.html',
        controller: 'QuickPaymentCtrl'
    })
  //微信支付
  .state('wechatPayment', {
        url: '/wechatPayment',
        prefetchTemplate:false,
        templateUrl: 'templates/wechatPayment.html',
        controller: 'WechatPaymentCtrl'
    })
  //第三方支付成功路由
  .state('rechargeSuccess', {
        url: '/rechargeSuccess',
        prefetchTemplate:false,
        params:{"reqData":null},
        templateUrl: 'templates/rechargeSuccess.html'
    })
    //账户提现
   .state('withdraw', {
    url: '/withdraw',
    params:{"money":0},
    prefetchTemplate:false,
    templateUrl: 'templates/withdraw.html',
    controller: 'WithdrawCtrl'
   })
    //账户提现手续费(与账户提现公用一个controller)
   .state('withdrawFee', {
    cache: false,
    url: '/withdrawFee',
    prefetchTemplate:false,
    templateUrl: 'templates/withdrawFee.html',
    controller: 'WithdrawFeeCtrl'
   })
   //账户提现成功(与账户提现公用一个controller)
   .state('withdrawSuccess', {
    cache: false,
    prefetchTemplate:false,
    url: '/withdrawSuccess',
    templateUrl: 'templates/withdrawSuccess.html',
    controller: 'WithdrawCtrl'
   })
   //登录
   .state('login', {
    cache: false,
    prefetchTemplate:false,
    url: '/login',
    templateUrl: 'templates/login.html',
    controller: 'LoginCtrl'
   })
   //手势密码
   .state('gesturePwd', {
    cache: false,
    prefetchTemplate:false,
    params:{"mode":null},//mode :0表示设置，1表示登录
    url: '/gesturePwd',
    templateUrl: 'templates/gesturePwd.html',
    controller: 'GesturePwdCtrl'
   })
   //合同
   .state('contract', {
    cache: false,
    prefetchTemplate:false,
    params:{"url":""},//url :合同连接
    url: '/contract',
    templateUrl: 'templates/contract.html',
    controller: 'ContractCtrl'
   })
   //banner展示
   .state('banner', {
    cache: false,
    params:{url:"",title:""},//url :合同连接,title:标题
    url: '/banner',
    templateUrl: 'templates/banner.html',
    controller: 'BannerCtrl'
   })
  //更多
  .state('more', {
    cache: false,
    prefetchTemplate:false,
    url: '/more',
    templateUrl: 'templates/tab-more.html',
    controller: 'MoreCtl'
  })
  //关于合拍
  .state('about', {
    cache: false,
    url: '/about',
    prefetchTemplate:false,
    templateUrl: 'templates/about.html',
    controller: 'AboutCtrl'
  })
   //开发中
   .state('doing', {
    url: '/doing',
    templateUrl: 'templates/doing.html'
   })
    /************************************************************************************************************/
    /*-----------------------------------------------二期分隔线-------------------------------------------------*/
    /************************************************************************************************************/
    //我的投资
    .state('tab.myInvestM', {
      url: '/myInvestM',
      prefetchTemplate:false,
      views: {
        'tab-memberCenter': {
          templateUrl: 'templates/myInvestM.html'
        }
      }
    })
    //我的投资
    .state('tab.regularPlan', {
      cache: false,
      prefetchTemplate:false,
      url: '/regularPlan',
      views: {
        'tab-memberCenter': {
          templateUrl: 'templates/regularPlan.html',
          controller: 'RegularPlanCtrl'
        }
      }
    })
    //担保机构详情
    .state('institutionDetail',{
      url: '/institutionDetail/:lnno/:orgno',
      prefetchTemplate:false,
      templateUrl: 'templates/institutionDetail.html',
      controller: 'InstitutionDetailCtrl'
    })
    //稳利盈详情
    .state('tab.bidWlyDetail', {
      cache: false,
      prefetchTemplate:false,
      url: '/bidWlyDetail/:lnNo/:bidId',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidWlyDetail.html',
          controller: 'BidWlyDetailCtrl'
        }
      }
    })
    //长利盈详情
    .state('tab.bidClyDetail', {
      cache: false,
      prefetchTemplate:false,
      url: '/bidClyDetail/:lnNo/:bidId',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/bidClyDetail.html',
          controller: 'BidWlyDetailCtrl'  //和稳利赢共用一个controller
        }
      }
    })
    /*稳利盈项目详情页*/
    .state('tab.projectWlyDetail', {
      cache: false,
      prefetchTemplate:false,
      url: '/projectWlyDetail/:lnNo/:bidId',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectWlyDetail.html',
          controller: 'ProjectWlyDetailCtrl'
        }
      }
    })
    /*稳利盈产品详情页*/
    .state('tab.projectWlyDetailCpxq', {
      cache: false,
      prefetchTemplate:false,
      url: '/projectWlyDetailCpxq/:lnNo/:bidId/:isCpxq',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectWlyDetailCpxq.html',
          controller: 'ProjectWlyDetailCtrl'
        }
      }
    })
    /*稳利盈已投项目页*/
    .state('tab.projectWlyDetailYtxm', {
      cache: false,
      prefetchTemplate:false,
      url: '/projectWlyDetailYtxm/:lnNo/:bidId',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/projectWlyDetailYtxm.html',
          controller: 'ProjectWlyDetailCtrl'
        }
      }
    })
    //定期计划投资详情
    .state('tab.planDetail', {
      cache: false,
      url: '/planDetail/:lnNo/:txNo',
      prefetchTemplate:false,
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/planDetail.html',
          controller: 'PlanDetailCtrl'
        }
      }
    })
    /*稳利盈我要投资*/
    .state('tab.investWly', {
      url: '/investWly/:lnno/:lnamt/:isNew/:bidId',
      prefetchTemplate:false,
      views: {
        'tab-investIndex': {
          templateUrl: 'templates/investWly.html',
          controller: 'InvestWlyCtrl'
        }
      }
    })
    /*稳利盈协议*/
    .state('tab.investWlyProtocol', {
      cache: false,
      prefetchTemplate:false,
      url: '/investWlyProtocol/:lnno/:lnamt/:bidId',
      views: {
        'tab-investIndex': {
          templateUrl: 'templates/investWlyProtocol.html',
          controller: 'InvestWlyProtocolCtrl'
        }
      }
    })
    //稳利盈投资记录
    .state('tab.investWlyRecord', {
      cache: false,
      prefetchTemplate:false,
      url: '/investWlyRecord/:lnNo/:bidId',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/investWlyRecord.html',
          controller: 'InvestWlyRecordCtrl'
        }
      }
    })
//活力盈详情
      .state('tab.bidHlyDetail', {
        cache: false,
        prefetchTemplate:false,
        url: '/bidHlyDetail/:lnNo/:bidId',
        views:{
          'tab-investIndex': {
            templateUrl: 'templates/bidHlyDetail.html',
            controller: 'BidHlyDetailCtrl'
          }
        }
      })
      /*活力盈项目详情页*/
      .state('tab.projectHlyDetail', {
        cache: false,
        prefetchTemplate:false,
        url: '/projectHlyDetail/:lnNo',
        views:{
          'tab-investIndex': {
            templateUrl: 'templates/projectHlyDetail.html',
            controller: 'ProjectHlyDetailCtrl'
          }
        }
      })
      /*活力盈产品详情页*/
      .state('tab.projectHlyDetailCpxq', {
        cache: false,
        prefetchTemplate:false,
        url: '/projectHlyDetailCpxq/:lnNo/:isCpxq',
        views:{
          'tab-investIndex': {
            templateUrl: 'templates/projectHlyDetailCpxq.html',
            controller: 'ProjectHlyDetailCtrl'
          }
        }
      })
      /*活力盈已投项目页*/
      .state('tab.projectHlyDetailYtxm', {
        cache: false,
        prefetchTemplate:false,
        url: '/projectHlyDetailYtxm/:lnNo',
        views:{
          'tab-investIndex': {
            templateUrl: 'templates/projectHlyDetailYtxm.html',
            controller: 'ProjectHlyDetailCtrl'
          }
        }
      })
      /*活力盈我要投资*/
      .state('tab.investHly', {
        cache: false,
        prefetchTemplate:false,
        url: '/investHly/:lnNo/:rate',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investHly.html',
            controller: 'InvestHlyCtrl'
          }
        }
      })
    //活力盈投资记录
    .state('tab.investHlyRecord', {
      cache: false,
      prefetchTemplate:false,
      url: '/investHlyRecord/:lnNo',
      views:{
        'tab-investIndex': {
          templateUrl: 'templates/investHlyRecord.html',
          controller: 'InvestHlyRecordCtrl'
        }
      }
    })
      /*活力盈协议*/
      .state('tab.investHlyProtocol', {
        cache: false,
        prefetchTemplate:false,
        url: '/investHlyProtocol/:lnno/:lnamt',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investHlyProtocol.html',
            controller: 'InvestHlyProtocolCtrl'
          }
        }
      })
      //债转标详情
      .state('tab.bidZzbDetail', {
        cache: false,
        prefetchTemplate:false,
        url: '/bidZzbDetail/:lnNo/:bidId',
        views:{
          'tab-investIndex': {
            templateUrl: 'templates/bidZzbDetail.html',
            controller: 'BidZzbDetailCtrl'
          }
        }
      })
      /*债转标我要投资*/
      .state('tab.investZzb', {
        cache: false,
        prefetchTemplate:false,
        url: '/investZzb/:lnno/:lnamt/:isNew/:rate/:bidId',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investZzb.html',
            controller: 'InvestZzbCtrl'
          }
        }
      })
      /*债转标协议*/
      .state('tab.investZzbProtocol', {
        cache: false,
        prefetchTemplate:false,
        url: '/investZzbProtocol/:lnno/:lnamt',
        views: {
          'tab-investIndex': {
            templateUrl: 'templates/investZzbProtocol.html',
            controller: 'InvestZzbProtocolCtrl'
          }
        }
      })
      //已债转投资详情
      .state('tab.investYzzDetail', {
        cache: false,
        prefetchTemplate:false,
        url: '/investYzzDetail/:lnNo/:type',
        views:{
          'tab-memberCenter': {
            templateUrl: 'templates/investYzzDetail.html',
            controller: 'InvestYzzDetailCtrl'
          }
        }
      })
      //日历
      .state('tab.calendar', {
        cache: false,
        prefetchTemplate:false,
        url: '/calendar',
        views: {
          'tab-memberCenter': {
            templateUrl: 'templates/calendar.html',
            controller: 'CalendarCtrl'
          }
        }
      })
      //我的任务
      .state('tab.myTasks', {
        cache: false,
        url: '/myTasks',
        prefetchTemplate:false,
        views: {
          'tab-find': {
            templateUrl: 'templates/myTasks.html',
            controller: 'MyTasksCtrl'
          }
        }
      })
      //站内公告列表
    .state('Announcement', {
      url: '/Announcement/:title/:id',
      templateUrl: 'templates/Announcement.html',
      controller: 'AnnouncementCtrl'
    })
   //站内公告列表
   .state('hkNew', {
      url: '/hkNew',
      templateUrl: 'templates/hkNew.html',
      controller: 'hkNewCtrl'
    })
    
    //站内公告
    .state('AnnouncementContent', {
      cache: false,
      prefetchTemplate:false,
      url: '/AnnouncementContent/:bidId/:bidName',
      templateUrl: 'templates/AnnouncementContent.html',
      controller: 'AnnouncementContentCtrl'
    })
       //平台数据
      .state('platformData', {
        cache: false,
        prefetchTemplate:false,
        url: '/platformData',
        templateUrl: 'templates/platformData.html',
        controller: 'platformDataCtrl'
      })

      //注册-new
      .state('registerNew', {
        cache: false,
        prefetchTemplate:false,
        url: '/registerNew',
        templateUrl: 'templates/registerNew.html',
        controller: 'RegisterNewCtrl'
      })
  
     
      .state('registerLoginStep12', {//注册第二步设置密码
        cache: false,
        prefetchTemplate:false,
        url: '/registerLoginStep12',
        params:{"tel":"","msgCode":"","ciKey":""},
        templateUrl: 'templates/registerLoginStep12.html',
        controller: 'RegisterLoginStep12Ctrl'
      })
      //忘记登录密码1,找回密码
     .state('forgetLoginPassword1', {
      cache: false,
      prefetchTemplate:false,
      url: '/forgetLoginPassword1',
      templateUrl: 'templates/forgetLoginPassword1.html',
      controller: 'ForgetLoginPassword1Ctrl'
     })
      //忘记登录密码2,身份验证
     .state('forgetLoginPassword2', {
      cache: false,
      prefetchTemplate:false,
      url: '/forgetLoginPassword2/:tel/:ciNo/:flag', //tel:手机号,ciNo:用户名,flag:0未实名认证 1已实名认证
      templateUrl: 'templates/forgetLoginPassword2.html',
      controller: 'ForgetLoginPassword2Ctrl'
     })
      //忘记登录密码3,设置新密码
     .state('forgetLoginPassword3', {
      cache: false,
      prefetchTemplate:false,
      url: '/forgetLoginPassword3/:tel/:ciNo', //tel:手机号,ciNo:用户名
      templateUrl: 'templates/forgetLoginPassword3.html',
      controller: 'ForgetLoginPassword3Ctrl'
     })
      //忘记登录密码,设置新密码成功
     .state('forgetLoginPasswordSuccess', {
      cache: false,
      prefetchTemplate:false,
      url: '/forgetLoginPasswordSuccess',
      templateUrl: 'templates/forgetLoginPasswordSuccess.html',
      controller: 'ForgetLoginPasswordSuccessCtrl'
     })
    //安全认证
    .state('tab.safety', {
      cache: false,
      prefetchTemplate:false,
      url: '/safety',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/safety.html'
        }
      }
    })
    //申请数字证书
    .state('tab.safetyApplyCertificate', {
      cache: false,
      prefetchTemplate:false,
      url: '/safetyApplyCertificate',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/safety-applyCertificate.html',
          controller:'ApplyCertificateCtrl'
        }
      }
    })
    //已申请已授权
    .state('tab.safetyGranted', {
      cache: false,
      prefetchTemplate:false,
      url: '/safetyGranted',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/safetyGranted.html',
          controller:'SafetyGrantedCtrl'
        }
      }
    })
    //申请数字证书成功，此页面申请数字证书授权
    .state('tab.safetySuccess', {
      cache: false,
      prefetchTemplate:false,
      url: '/safetySuccess',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/safety-success.html',
          controller:'SafetySuccessCtrl'
        }
      }
    })
     //添加银行卡
    .state('tab.addBanks', {
      cache: false,
      prefetchTemplate:false,
      url: '/addBanks',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/addBanks.html',
          controller: 'AddBanksCtrl'
        }
      }
    })
    //银行卡认证
    .state('tab.cardCertify', {
      cache: false,
      prefetchTemplate:false,
      url: '/cardCertify',
      params:{"name":"","acno":""},
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/cardCertify.html',
          controller:'CardCertifyCtrl'
        }
      }
    })
    //手动银行卡认证
    .state('tab.cardCertifyHand', {
      cache: false,
      prefetchTemplate:false,
      url: '/cardCertifyHand',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/cardCertify-hand.html',
          controller:'CardCertifyHandCtrl'
        }
      }
    })
    //法大大授权书
    .state('safetyContract', {
      cache: false,
      prefetchTemplate:false,
      url: '/safetyContract/:url',
      templateUrl: 'templates/safetyContract.html',
      controller: 'safetyContractCtrl'
    })
    /*速赢贷投资协议*/
    .state('tab.investSydProtocol', {
      cache: false,
      prefetchTemplate:false,
      url: '/investSydProtocol/:lnno/:lnamt/:bidId/:lnTerm/:money',
      views: {
        'tab-investIndex': {
          templateUrl: 'templates/investSydProtocol.html',
          controller: 'InvestSydProtocolCtrl'
        }
      }
    })

/************************************************************* 资金存管*************************************************************************/
//资金存管（已开通）
   .state('tab.capitalSupervisionYet', {
    cache: false,
    prefetchTemplate:false,
    url: '/capitalSupervisionYet',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/capitalSupervisionYet.html',
          controller: 'CapitalSupervisionYetCtrl'
        }
    }
   })
//资金存管（未开通）
   .state('tab.capitalSupervision', {
    cache: false,
    prefetchTemplate:false,
    url: '/capitalSupervision',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/capitalSupervision.html',
          controller: 'CapitalSupervisionCtrl'
        }
    }
   })
 //资金存管开通成功页
 .state('tab.capitalSuccess', {
  cache: false,
  prefetchTemplate:false,
  url: '/capitalSuccess',
  views:{
      'tab-memberCenter': {
        templateUrl: 'templates/capitalSuccess.html',
        controller: 'CapitalSuccessCtrl'
      }
  }
 })
 //资金存管设置/重置交易密码
 .state('tab.resetZcTradePwd', {
  cache: false,
  prefetchTemplate:false,
  url: '/resetZcTradePwd',
  views:{
      'tab-memberCenter': {
        templateUrl: 'templates/resetZcTradePwd-valid.html',
        controller: 'ResetZcTradePwdCtrl'
      }
  }
 })

//充值-银行卡转账
.state('rechargeBankTransfer',{
  url: '/rechargeBankTransfer',
  prefetchTemplate:false,
  templateUrl: 'templates/rechargeBankTransfer.html',
  controller: 'CapitalSupervisionYetCtrl'  //公用一个控制器
})

//账户提现成功(与账户提现公用一个controller)
 .state('withdrawList', {
    cache: false,
    prefetchTemplate:false,
    url: '/withdrawList',
    templateUrl: 'templates/withdrawList.html'
 })

  //资金存管快捷支付
  .state('quickPaymentZc', {
      cache: false,
      prefetchTemplate:false,
      url: '/quickPaymentZc',
      templateUrl: 'templates/quickPaymentZc.html',
      controller: 'QuickPaymentZcCtrl'
    })
//资金存管银行卡信息
   .state('tab.banksInfoZc', {
    cache: false,
    prefetchTemplate:false,
    url: '/banksInfoZc',
    prefetchTemplate:false,
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/banksInfoZc.html',
          controller: 'BanksInfoZcCtrl'
        }
    }
   })

  //资金存管添加银行卡
  .state('tab.addBanksZc', {
    cache: false,
    prefetchTemplate:false,
    url: '/addBanksZc',
    views:{
      'tab-memberCenter': {
        templateUrl: 'templates/addBanksZc.html',
        controller: 'AddBanksZcCtrl'
      }
    }
  })
  //更换绑定资金存管的手机号码第二步
   .state('tab.updatePhnStep2Zc', {
    cache: false,
    prefetchTemplate:false,
    url: '/updatePhnStep2Zc',
    views:{
        'tab-memberCenter': {
          templateUrl: 'templates/updatePhnStep2Zc.html',
          controller: 'updatePhnStep2ZcCtrl'
        }
    }
   })
   //资金存管账户提现
   .state('withdrawZc', {
    url: '/withdrawZc',
    prefetchTemplate:false,
    params:{"money":0},
    templateUrl: 'templates/withdrawZc.html',
    controller: 'WithdrawZcCtrl'
   })
   //选择城市
   .state('chooseCity', {
    cache: false,
    prefetchTemplate:false,
    url: '/chooseCity',
    templateUrl: 'templates/chooseCity.html',
    controller: 'ChooseCityCtrl'
   })

   .state('messSubcription', {
        cache: false,
        prefetchTemplate:false,
        url: '/messSubcription',
        templateUrl: 'templates/messSubcription.html',
        controller: 'MessSubcriptionCtrl'
    })
  .state('tab.myBill', {
      cache: false,
      prefetchTemplate:false,
			url: '/myBill',
			views:{
			'tab-memberCenter': {
			  templateUrl: 'templates/myBill.html',
			  controller: 'myBillCtrl'
			}
		}
  })
  .state('tab.creditTransfer', {//申请债权转让
        url: '/creditTransfer/:lnNo/:txNo',
        prefetchTemplate:false,
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/creditTransfer.html',
          controller: 'creditTransferCtrl'
        }
    }
  })
  .state('tab.creditTransferSuc', {//债权转让成功
        url: '/creditTransferSuc/:lnNo/',
        prefetchTemplate:false,
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/creditTransferSuc.html',
          controller: 'creditTransferSucCtrl'
        }
    }
  })
 .state('tab.creditTransferRule', {//债权转让规则说明
        url: '/creditTransferRule',
        prefetchTemplate:false,
        views:{
        'tab-memberCenter': {
          templateUrl: 'templates/creditTransferRule.html',
          controller: 'creditTransferRuleCtrl'
        }
    }
  })
  //投标服务
  .state('tab.bidService', {
    cache: false,
    prefetchTemplate:false,
    url: '/bidService',
    views:{
      'tab-memberCenter': {
        templateUrl: 'templates/bidService.html',
        controller:'BidServiceCtrl'
      }
    }
  })
      //代偿协议
  .state('tab.compensatory', {
    url: '/compensatory',
    prefetchTemplate:false,
    params:{"cnFlNo":""},
    views:{
      'tab-memberCenter': {
        templateUrl: 'templates/compensatory.html',
        controller:'CompensatoryCtrl'
      }
    }
  })
     //兜底协议
  .state('tab.revealDetails', {
    url: '/revealDetails',
    prefetchTemplate:false,
    params:{"doudi":""},
    views:{
      'tab-memberCenter': {
        templateUrl: 'templates/revealDetails.html',
        controller:'RevealDetailsCtrl'
      }
    }
  })
  //理财顾问
   .state('myCounselor', {
    cache : false,
    prefetchTemplate:false,
    url: '/myCounselor',
    templateUrl: 'templates/myCounselor.html',
    controller: 'MyCounselorCtrl'
   })
      //我的推荐
   .state('tab.myRecommend', {
      cache : false,
      prefetchTemplate:false,
      url: '/myRecommend',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/myRecommend.html',
          controller:'MyRecommendCtrl'
        }
      }
    })
   //我的好友
   .state('tab.myPackets', {
      cache : false,
      prefetchTemplate:false,
      url: '/myPackets',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/myPackets.html',
          controller:'MyPacketsCtrl'
        }
      }
    })
   //我的好友
   .state('tab.myFriends', {
      cache : false,
      prefetchTemplate:false,
      url: '/myFriends',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/myFriends.html',
          controller:'MyFriendsCtrl'
        }
      }
    })
   //奖励规则
   .state('tab.awardRule', {
      cache : false,
      prefetchTemplate:false,
      url: '/awardRule',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/awardRule.html',
          controller:'AwardRuleCtrl'
        }
      }
    })
   //推荐我的人
   .state('tab.recommendPerson', {
      cache : false,
      prefetchTemplate:false,
      url: '/recommendPerson',
      views:{
        'tab-memberCenter': {
          templateUrl: 'templates/recommendPerson.html',
          controller:'RecommendPersonCtrl'
        }
      }
    })
   //邀请好友
   .state('inviteFriends', {
      cache : false,
      prefetchTemplate:false,
      url: '/inviteFriends',
      templateUrl: 'templates/inviteFriends.html',
      controller:'InviteFriendsCtrl'
    })
  //备案信息
  .state('xpIcp', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpIcp',
  templateUrl: 'templates/xpIcp.html',
    controller:'xpIcpCtrl'

  })

 //银行存管
  .state('xpBankM', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpBankM',
    templateUrl: 'templates/xpBankM.html',
  })

 //专家顾问
  .state('xpSpelCon', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpSpelCon',
    templateUrl: 'templates/xpSpelCon.html',
  })

  //联系我们
  .state('xpTel', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpTel',
    templateUrl: 'templates/xpTel.html',
  })
  
  //股东信息
  .state('xpShareH', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpShareH',
    templateUrl: 'templates/xpShareH.html',
  })
  //公司简介
  .state('xpCompanyPro', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpCompanyPro',
    templateUrl: 'templates/xpCompanyPro.html',
  })
   //公司咨询
  .state('xpCmpanyMsg', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpCmpanyMsg',
    templateUrl: 'templates/xpCmpanyMsg.html',
    controller: 'xpCmpanyMsgCtrl'


  })

   //荣誉资质
  .state('xpHonorCer', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpHonorCer',
    templateUrl: 'templates/xpHonorCer.html',
    controller: 'xpHonorCerCtrl'


  })
  //数据月报
  .state('xpMonthPld', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpMonthPld',
    templateUrl: 'templates/xpMonthPld.html',
    controller: 'xpMonthPldCtrl'


  })
    //数据月报
  .state('xpMonthPldDetailCtrl', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpMonthPldDetail/:bidId',
    templateUrl: 'templates/xpMonthPldDetail.html',
    controller: 'xpMonthPldDetailCtrl'


  })

  //媒体报道
  .state('xpMeatB', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpMeatB',
    templateUrl: 'templates/xpMeatB.html',
    controller: 'xpMeatBCtrl'


  })
    //发展足迹
  .state('xpSlot',{
    cache: false,
    prefetchTemplate:false,
    url: '/xpSlot',
    templateUrl: 'templates/xpSlot.html',
    controller: 'xpSlotCtrl'


  })
 
    //消息详情
    .state('msgDetail',{
      cache: false,
      prefetchTemplate:false,
      url: '/msgDetail/:prd_Typ',
      templateUrl: 'templates/msgDetail.html',
      controller: 'msgDetailCtrl'


    })
    
     //帮助中心
    .state('helpCenter',{
      cache: false,
      prefetchTemplate:false,
      url: '/helpCenter',
      templateUrl: 'templates/helpCenter.html',
      controller: 'helpCenterCtrl'


    })
      //帮助列表
    .state('helpList',{
      cache: false,
      prefetchTemplate:false,
      url: '/helpList/:id',
      templateUrl: 'templates/helpList.html',
      controller: 'helpListCtrl'


    })
      //帮助详情页
    .state('helpDetail',{
      cache: false,
      prefetchTemplate:false,
      url: '/helpDetail/:id',
      templateUrl: 'templates/helpDetail.html',
      controller: 'helpDetailCtrl'


    })
    //帮助搜索页
    .state('helpSearch',{
      cache: false,
      prefetchTemplate:false,
      url: '/helpSearch/:id',
      templateUrl: 'templates/helpSearch.html',
      controller: 'helpSearchCtrl'


    })
      //帮助列表
    .state('helpLists',{
      cache: false,
      prefetchTemplate:false,
      url: '/helpLists/:id/:name',
      templateUrl: 'templates/helpLists.html',
      controller: 'helpListsCtrl'

    })
  //新手标列表
  .state('newsList', {
    cache: false,
    prefetchTemplate:false,
    url: '/newsList',
    templateUrl: 'templates/newsList.html',
    controller: 'newsListCtrl'

  })

  //媒体报道详情
  .state('xpMeatDetail', {
    cache: false,
    prefetchTemplate:false,
    url: '/xpMeatDetail/:bidId/:bidName',
    templateUrl: 'templates/xpMeatDetail.html',
    controller: 'xpMeatDetailCtrl'
  })
  //借款人详情
  .state('borrowerDetail',{
    cache: false,
    prefetchTemplate:false,
    url: '/borrowerDetail/:lnNo',
    templateUrl: 'templates/borrowerDetail.html',
    controller: 'borrowerDetailCtrl'
})
 //贷后信息
 .state('postLoanInformation',{
  cache: false,
  url: '/postLoanInformation/:lnNo',
  templateUrl: 'templates/postLoanInformation.html',
  controller: 'postLoanInformationCtrl'
})

 //出借人风险提示
 .state('lenderRisk',{
  cache: false,
  url: '/lenderRisk/:num',
  templateUrl: 'templates/lenderRisk.html',
  controller: 'lenderRiskCtrl'

})




  //账户管理
  .state('accountM', {
    cache: false,
    prefetchTemplate:false,
    url: '/accountM',
    templateUrl: 'templates/accountM.html',
    controller: 'AccountMCtrl'
  })
  //个人信息
   .state('userInfo', {
    cache: false,
    prefetchTemplate:false,
    url: '/userInfo',
    templateUrl: 'templates/userInfo.html',
    controller: 'UserInfoCtrl'
   })
//会员中心
.state('memberCenter', {
  cache: false,
  prefetchTemplate:false,
  url: '/memberCenter',
  templateUrl: 'templates/tab-memberCenter.html',
  controller: 'MemberCenterCtrl'
})

//密码管理
.state('passwordM', {
  prefetchTemplate:false,
  cache: false,
  url: '/passwordM',
  templateUrl: 'templates/passwordM.html',
  controller: 'PasswordMCtrl'
})
//修改密码
.state('updateLoginPwd', {
  prefetchTemplate:false,
  cache: false,
  url: '/updateLoginPwd',
  templateUrl: 'templates/updateLoginPwd.html',
  controller: 'upPassCtrl'
})
//設置交易密碼
.state('setJyPass', {
  prefetchTemplate:false,
  cache: false,
  url: '/setJyPass',
  templateUrl: 'templates/setJyPass.html',
  controller: 'setJyPassCtrl'
})


 //項目
 .state('tab.project',{
  cache: false,
  url: '/project',
  views: {
    'tab-project': {
      templateUrl: 'templates/project.html',
      controller: 'projectCtrl'
    }
  }

})
 //市場
.state('tab.market',{
  cache: false,
  url: '/market',
  views: {
    'tab-market': {
      templateUrl: 'templates/market.html',
      controller: 'marketCtrl'
    }
  }

})
 //活動
 .state('tab.act',{
  cache: true,
  url: '/act',
  views: {
    'tab-act': {
      templateUrl: 'templates/act.html',
      controller: 'actCtrl'
    }
  }

})

//注册-new
.state('register', {
  cache: false,
  prefetchTemplate:false,
  url: '/register',
  templateUrl: 'templates/register.html',
  controller: 'resCtrl'
})
.state('registerLoginStep11', {//注册第一步填写验证码
  cache: false,
  prefetchTemplate:false,
  url: '/registerLoginStep11',
  params:{"tel":""},
  templateUrl: 'templates/registerLoginStep11.html',
  controller: 'RegisterLoginStep11Ctrl'
})

//注册成功
.state('registerSuccess', {
  cache: false,
  prefetchTemplate:false,
  url: '/registerSuccess',
  templateUrl: 'templates/registerSuccess.html',
  controller: 'RegisterSuccessCtrl'
})

//榜单详情
.state('bdDetail', {
  cache: false,
  prefetchTemplate:false,
  url: '/bdDetail:bdData',
  templateUrl: 'templates/bdDetail.html',
  controller: 'bdDetailCtrl'
})
//活动详情
.state('hdDetail', {
  cache: false,
  prefetchTemplate:false,
  url: '/hdDetail:hdData',
  templateUrl: 'templates/hdDetail.html',
  controller: 'hdDetailCtrl'
})
//榜单
.state('tab.home', {
  url: '/home',
  cache: false,
  views: {
    'tab-home': {
      templateUrl: 'templates/tab-home.html',
      controller: 'HomeCtrl'
    }
  }
})
//人才
.state('tab.find', {
  url: '/find',
  cache: false,
  views: {
    'tab-find': {
      templateUrl: 'templates/tab-find.html',
      controller: 'FindCtrl'
    }
  }
})

//青贝管理
.state('qbManage', {
  cache: false,
  prefetchTemplate:false,
  url: '/qbManage',
  templateUrl: 'templates/qbManage.html',
  controller: 'qbManageCtrl'
})
//青贝转曾
.state('qbZs', {
  cache: false,
  prefetchTemplate:false,
  url: '/qbZs:qbtel',
  templateUrl: 'templates/qbZs.html',
  controller: 'qbZcCtrl'
})

//青贝交易记录列表
.state('qbJl', {
  cache: false,
  prefetchTemplate:false,
  url: '/qbJl',
  templateUrl: 'templates/qbJl.html',
  controller: 'qbJlCtrl'
})
//青贝交易记录详情
.state('qbJlDetail', {
  cache: false,
  prefetchTemplate:false,
  url: '/qbJlDetail:qbData',
  templateUrl: 'templates/qbJlDetail.html',
  controller: 'qbJlDetailCtrl'
})
//修改交易密码
.state('upjymm', {
  cache: false,
  prefetchTemplate:false,
  url: '/upjymm',
  templateUrl: 'templates/upjymm.html',
  controller: 'upjymmCtrl'
})

//我的收款码
.state('myewm', {
  cache: false,
  prefetchTemplate:false,
  url: '/myewm',
  templateUrl: 'templates/myewm.html',
  controller: 'myewmCtrl'
})


//榜单发布
.state('bdFb', {
  cache: false,
  prefetchTemplate:false,
  url: '/bdFb',
  templateUrl: 'templates/bdFb.html',
  controller: 'bdFbCtrl'
})

//活动发布
.state('hdFb', {
  cache: false,
  prefetchTemplate:false,
  url: '/hdFb',
  templateUrl: 'templates/hdFb.html',
  controller: 'hdFbCtrl'
})

//发榜记录
.state('fbJl', {
  cache: false,
  prefetchTemplate:false,
  url: '/fbJl',
  templateUrl: 'templates/fbJl.html',
  controller: 'fbJlCtrl'
})

//揭榜记录
.state('jbJl', {
  cache: false,
  prefetchTemplate:false,
  url: '/jbJl',
  templateUrl: 'templates/jbJl.html',
  controller: 'jbJlCtrl'
})



//获取榜单揭榜人信息
.state('jbrList', {
  cache: false,
  prefetchTemplate:false,
  url: '/jbrList',
  templateUrl: 'templates/jbrList.html',
  controller: 'jbrListCtrl'
})


//发榜详情
.state('fbDetail', {
  cache: false,
  prefetchTemplate:false,
  url: '/fbDetail:fbData',
  templateUrl: 'templates/fbDetail.html',
  controller: 'fbDetailCtrl'
})

//消息中心
.state('msgCenter', {
  cache: false,
  prefetchTemplate:false,
  url: '/msgCenter',
  templateUrl: 'templates/msgCenter.html',
  controller: 'msgCenterCtrl'
})

//我的活动
.state('meAct', {
  cache: false,
  prefetchTemplate:false,
  url: '/meAct',
  templateUrl: 'templates/meAct.html',
  controller: 'meActCtrl'
})
//我的活动
.state('actManage', {
  cache: false,
  prefetchTemplate:false,
  url: '/actManage',
  templateUrl: 'templates/actManage.html',
  controller: 'actManageCtrl'
})
//活动参与记录
.state('meJoinAct', {
  cache: false,
  prefetchTemplate:false,
  url: '/meJoinAct',
  templateUrl: 'templates/meJoinAct.html',
  controller: 'meJoinActCtrl'
})
//青贝售卖
.state('mbqSell', {
  cache: false,
  prefetchTemplate:false,
  url: '/mbqSell',
  templateUrl: 'templates/mbqSell.html',
  controller: 'mbqSellCtrl'
})

//我的订单
.state('mebqSell', {
  cache: false,
  prefetchTemplate:false,
  url: '/mebqSell',
  templateUrl: 'templates/mebqSell.html',
  controller: 'mebqSellCtrl'
})

  $urlRouterProvider.otherwise('/tab/home');
});


angular.module('starter.directive', [])
//超出滚动
.directive('contentScroll', function($rootScope) {
   return {
        link: function (scope, elements, attrs, controller) {
            console.log("bbbbb");
            console.log( elements[0]);
            if(ionic.Platform.isAndroid()){
                elements[0].style.overflowY = 'auto';
                elements[0].style.overflowX = 'hidden';
            }
        }
    }
})
//进度条
.directive('progress', function($rootScope) {
    return {
        restrict: 'E',
        replace:true,
        template:'<span class="g-bar-unfill"> <span class="bar-fill"></span><span class="progressNum"></span></span>'
    };
})
.directive('progressval', function($rootScope,$timeout) {
    return function(scope,element,attr){
        var $progressFill=element.children()[0],$progressNum=element.children()[1];
        if(attr.progressval > 100){
            $progressFill.style.width= "100%";
        }else{
            $progressFill.style.width=attr.progressval+"%";
        }
        $progressNum.innerHTML=attr.progressval+'%';
    };
})
//获取短信验证码，需要手机号码的
.directive('getmsgcode1', function($rootScope,$interval,req,reqRoot,$http,msgCode,tip) {
    return {
        restrict: 'E',
        replace:true,
        scope:{
          callback:"&"
        },
        template:'<button class="button-getMsgCode" ng-class="paraclass" ng-click="getCode()" ng-bind="paracont">获取验证码</button>',
        link:function($scope, $element,attr){
          $scope.paracont = "获取验证码";
          $scope.paraclass = "sendMsg"; 
          msgCode.isCount = false;
          $scope.getCode=function(){
                if(!msgCode.isCount){
                  if($scope.callback){
                   $scope.callback();
                  }
                 
                  var reg = /^1[2,3,4,5,6,7,8,9,0][0-9]{9}$/;
                  if(!reg.test(attr.tel)){
                    return;
                  }
                $scope.paraevent = true;  
                var second = 60,  
                timePromise = undefined;  
                timePromise = $interval(function(){  
                  if(second<=0){  
                    $interval.cancel(timePromise);  
                    timePromise = undefined;  
          
                    second = 60;  
                    $scope.paracont = "重发验证码";  
                    $scope.paraclass = "sendMsg";  
                    $scope.paraevent = true;  
                    msgCode.isCount = false;
                  }else{  
                    $scope.paracont = second + "秒后可重发";  
                    $scope.paraclass = "sendMsgIng";  
                    second--;  
                    msgCode.isCount = true;
                  }  
                },1000,100); 
            }
            $scope.$on('$destroy',function(){  //在销毁控制器前清除定时器
                msgCode.isCount = false;
                if(timePromise){$interval.cancel(timePromise);}
              });
            }
            if(attr.init == "auto"){
              $scope.getCode();
            }
        }
    };
})
//获取短信验证码
.directive('getmsgcode', function($rootScope) {
    return {
        restrict: 'E',
        replace:true,
        template:'<button class="button-getMsgCode" ng-class="paraclass" ng-click="getCode()" ng-bind="paracont">获取验证码</button>',
        controller:function($scope, $element,$interval,req,reqRoot,$http,msgCode){
        $scope.paracont = "获取验证码";
        $scope.paraclass = "sendMsg"; 
        msgCode.isCount = false;
        $scope.getCode=function(){
            if(!msgCode.isCount){
                $scope.paraevent = true;  
                var second = 60,  
                timePromise = undefined;  
      
                timePromise = $interval(function(){  
                  if(second<=0){  
                    $interval.cancel(timePromise);  
                    timePromise = undefined;  
          
                    second = 60;  
                    $scope.paracont = "重发验证码";  
                    $scope.paraclass = "sendMsg";  
                    $scope.paraevent = true;  
                    msgCode.isCount = false;
                  }else{  
                    $scope.paracont = second + "秒后可重发";  
                    $scope.paraclass = "sendMsgIng";  
                    second--;  
                    msgCode.isCount = true;
                  }  
                },1000,100); 
            }
            $scope.$on('$destroy',function(){  //在销毁控制器前清除定时器
                msgCode.isCount = false;
                if(timePromise){$interval.cancel(timePromise);}
              });
       
            }
        },
        link:function(scope,element,attr){
          var tel = attr.tel;
        }
    };
})
//控制是否显示隐藏tabs
.directive('hideTabs', function($rootScope,$window,$timeout) {
    return function(scope, element, attributes) {
            scope.$on('$ionicView.beforeEnter', function() {
                scope.$watch(attributes.hideTabs, function(_value){
                    var value;
                    if(_value.indexOf&&_value.indexOf("-")>0){//处理手势密码nav-bar的背景颜色控制
                        $rootScope.ionHeaderBarSty="ionBarSty"+_value.substring(_value.indexOf("-")+1);
                    }
                    value=(_value.indexOf&&_value.indexOf("-")>0)?_value.substring(0,_value.indexOf("-")):_value;
                    $rootScope.hideTabs = value;
                });
            });
            scope.$on('$ionicView.beforeLeave', function() {
                $rootScope.hideTabs = false;
            });
        };
})

.directive('wechartShare',function(state,$rootScope,$ionicPopup,$timeout,sqLiteLoginInfo,tip){
  return{
    link:function(scope,elem,attr){
      //分享成功弹窗
      scope.shareSuccess = function(){
        var alertPopup = $ionicPopup.alert({
          title: '提示',
          template: '分享成功',
          okText:'确定'
        });
        alertPopup.then(function(){
          scope.popShow.close();  //如果分享成功则关闭微信分享弹窗
        });
        $timeout(function() {
          alertPopup.close(); //用户未操作则两秒钟关闭
        }, 2000);
      };
      //分享失败弹窗
      scope.shareFailed = function(reason){
        var alertPopup = $ionicPopup.alert({
          title: '提示',
          template: "分享失败: "+reason,
          okText:'确定'
        });
        $timeout(function() {
          alertPopup.close(); //用户未操作则两秒钟关闭
        }, 2000);
      };
      //分享微信朋友圈
      scope.shareSpace = function() {
        console.log(attr);
        try{
          Wechat.isInstalled(function (installed) {
            if(!installed){
              tip("没有安装微信，请先安装微信！");
              return false;
            }else{
              sqLiteLoginInfo.userInfo.get(function(userInfo){
                var webpageurl = '';
                if(attr.hasurl == '1'){
                    webpageurl = attr.webpageurl;
                }else{
                  webpageurl = 'https://m.he-pai.cn/wechat/#/exclusiveRegister/'+localStorage.prsCd+'/'+userInfo.ciNm; //线上注册微信分享地址
                };
                Wechat.share({
                  message: {
                      title: attr.sharetitle,
                      description: attr.sharedescription,
                      thumb: "www/img/wechatShare.png",
                      media: {
                        type: Wechat.Type.WEBPAGE,
                        webpageUrl: webpageurl
                      }
                  },
                  scene: Wechat.Scene.TIMELINE   // share to Timeline
                }, function () {
                    scope.shareSuccess();
                }, function (reason) {
                    scope.shareFailed(reason);
                });
              });
            }
          }, function (reason) {
            scope.shareFailed(reason);
          });
        }catch(e){} 
      }
      //分享微信好友
      scope.shareFriend = function() {
        try{
          Wechat.isInstalled(function (installed) {
            if(!installed){
              tip("没有安装微信，请先安装微信！");
              return false;
            }else{
              sqLiteLoginInfo.userInfo.get(function(userInfo){
                var webpageurl = '';
                if(attr.hasurl == '1'){
                    webpageurl = attr.webpageurl;
                }else{
                  webpageurl = 'https://m.he-pai.cn/wechat/#/exclusiveRegister/'+localStorage.prsCd+'/'+userInfo.ciNm; //线上注册微信分享地址
                };
                Wechat.share({
                  message: {
                      title: attr.sharetitle,
                      description: attr.sharedescription,
                      thumb: "www/img/wechatShare.png",
                      media: {
                        type: Wechat.Type.WEBPAGE,
                        webpageUrl: webpageurl
                      }
                  },
                  scene: Wechat.Scene.SESSION   // share to Timeline
                }, function () {
                    scope.shareSuccess();
                }, function (reason) {
                    scope.shareFailed(reason);
                });
              });
            }
          }, function (reason) {
            scope.shareFailed(reason);
          });
        }catch(e){}  
      };

      //查看活动邀请详情
      scope.lookDis = function(){
        scope.popShow.close(); 
        state.go('inviteFriends');
      };

      //元素点击出弹窗
      elem.bind('click',function(){
        // sqLiteLoginInfo.userInfo.get(function(userInfo){
          // if(userInfo.ciNm == ''){  //专属分享只限制再登录情况下才可以分享
          //   tip('请先登录再进行分享');
          //   return false;
          // }else{
            scope.popShow = $ionicPopup.show({
              template: '<div class="g-ta-c g-pt-10"><p class="titlep">分享活动，共创盈利！</p><div><ul class="g-mb-10"><li class="g-c99" ng-click="shareSpace()"><img src="img/frends_img01.png" alt="tu">朋友圈</li><li class="g-c99" ng-click="shareFriend()"><img src="img/frends_img02.png" alt="tu">微信好友</li></ul></div></div>',
              cssClass:'recommend-pop',
              title: '',
              scope: scope,
              buttons: [
                { text: '取消' }
              ]
            });
          // }
        // });
      });
    } 
  } 
})
//跑马灯
.directive('slideScroll', function($window, $timeout) {
    return {
        restrict: 'AE',
        scope: {
          noticelist: "="
        },
        link: function(scope, element, attr) {
            scope.$watch(attr.noticelist, function(newvalue, oldvalue) {
              var i = 1;    //element是ul
              var length = element[0].children.length;
              if(length != 0) {
                var widthwindow = $window.innerWidth - 20;
                var firstwidth = element[0].children[0].children[0].offsetWidth;
                setInterval(function() {
                  if(i == length) {
                      i = 0;//初始位置
                      element[0].style.top  = "0px";
                  }
                  var topscorll = -(i * 24);
                  var widthself = element[0].children[i].children[0].offsetWidth;  //widthself：292

                  feeltoTop(topscorll)
                  i++;
                }, 3000)
              }
              //向上滚动
              function feeltoTop(topscorll){  //console.log(topscorll):topscorll是top值
                var buchang = -10;
                var feelTimer = setInterval(function(){
                    element[0].style.top = parseInt(element[0].style.top) + buchang + "px";
                    if(parseInt(element[0].style.top) <= topscorll){
                        element[0].style.top = topscorll + "px";
                        window.clearInterval(feelTimer);
                    }
                },100);
              }
            })   
        }
    }
})
/*Mark! 3 years,please carry on!*/
// .directive('passwordformat', function() {   
//     return {  
//         require: 'ngModel', 
//         scope:{

//         } 
//         link: function(scope, element, attrs) {  
//           var num = 
//           if(num && Object.prototype.toString.call(num) === "[object String]" && num != ''){
//             return num.replace(/./g,'.');
//           }else{
//             return '';
//           }
//         }  
//     };  
// })
.directive('keyboard', function($compile,$rootScope) {
    return {
        restrict : 'AE',  
        transclude : true,
        template:'',
        scope:{   
          myName:'=name',
          password:"=password",
          ngBlur:"&"
        },
        link : function(scope, element, attrs) {
            var numlist1=[["1","2","3"],["4","5","6"],["7","8","9"],[".","0","back"]];//输入金额的时候，type=v1;
            var numlist2=[["1","2","3"],["4","5","6"],["7","8","9"],["","0","back"]];//输入手机号的时候，type=v2;
            var numlist=[["1","2","3"],["4","5","6"],["7","8","9"],["ABC","0","back"]];//全键盘
            var wordlist=[["q","w","e","r","t","y","u","i","o","p"],["a","s","d","f","g","h","j","k","l"],["up","z","x","c","v","b","n","m","back"],["123","space","#+="]];
            var speCharslist=[
                            ["!","@","#","$","%","^","&","*","(",")"],
                            ["&acute;","&quot;","=","_",":",";","?","~","|","·"],
                            ["+","-","\\","\/","[","]","{","}","back"],
                            ["123",",",".","&lt;","&gt;","€","￡","¥","ABC"]
                          ];
            scope.numberShow = "show";
            scope.characterShow = "hidden";
            scope.scShow = "hidden";
            scope.myName = "";
            scope.password = "";
            scope.lowerOrUp = "lower";
            var calculator="";
            var boardtype = attrs.boardtype;//键盘类型，v1表示数字键盘+点,应用场景：金额；v2表示纯数字键盘，应用场景：电话号码，其他表示全键盘
           // var passwordtype = attrs.password;//是否是password，需要格式化为黑点；
            $rootScope.placeTxt = attrs.placeholder;//记录当前的placehodler，缓存下来，用于doucument.click的时候
            scope.render = function(){
              calculator = '<div class="keyboard" class="ngcalculator_area" ng-click="wrapperBlank()">'
              +'<div class="title"></span><span class="g-c66 title-text">青色国际安全输入</span><span class="finish" ng-click="finish($event)">完成</span></div>'
               +'<div class="con"><ul class="number {{numberShow}}" ng-class="{{numberShow}}"><li>';
              var common = function(list,type){
                angular.forEach(list,function(v,k){
                  calculator += '<li>';
                  angular.forEach(v,function(v1,k1){
                    if(v1=="back"){
                      calculator += '<span class="ion-backspace-outline backColor" ng-click="change(\''+v1+'\',$event)"></span>';
                    }else if(v1=="up"){
                      calculator += '<span class="ion-arrow-up-a" ng-click="change(\''+v1+'\',$event)"></span>';
                    }else if(v1=="ABC"||v1=="123"||v1=="#+="){
                      calculator += '<span ng-click="change(\''+v1+'\',$event)">'+v1+'</span>';
                    }else if(v1=="space"){
                      calculator += '<span>'+v1+'</span>';
                    }else if(v1==""){
                      calculator += '<span class="nullColor"></span>';
                    }else{
                      if(v1 == "\\"){
                        scope.key = v1;
                        calculator += '<span ng-click="clickKey(key,$event)">'+v1+'</span>';
                      }else{
                        if(type){//如果是字母，则需要大小写可以变化
                          calculator += '<span class="{{lowerOrUp}}" ng-click="clickKey(\''+v1+'\',$event)">'+v1+'</span>';
                        }else{
                          calculator += '<span class="word" ng-click="clickKey(\''+v1+'\',$event)">'+v1+'</span>';
                        }
                      }
                    }
                  });
                  calculator += '</li>';
                });
              }
              if(boardtype == "v1"){
                common(numlist1,false);
              }else if(boardtype == "v2"){
                common(numlist2,false);
              }else{
                common(numlist,false);
              }
              calculator += '</ul><ul class="character hidden {{characterShow}}">';
              common(wordlist,true);
              calculator += '</ul><ul class="specialCharacter hidden {{scShow}}">';
              common(speCharslist,false);
              calculator += "</ul></div></div>";
            }
            scope.wrapperBlank = function(){
              event.stopPropagation();
            }
            //init keyboard
            scope.initKeyboardStyle=function(){
              scope.numberShow = "show";
              scope.characterShow = "hidden";
              scope.scShow = "hidden";
              scope.lowerOrUp = "lower";
            }
            var node = document.getElementsByClassName('keyboard');
            //键盘聚焦弹起定制键盘，隐藏原生键盘
            element.bind('focus',function(e){
              event.stopPropagation();
              //$rootScope.placeTxt1 = angular.element(e.target)[0].getAttribute("placeholder");
              $rootScope.placeTxt = attrs.placeholder;


              element.addClass("activeInput");//记录当前的input框
              for(var i=0;i<node.length;i++){
                node[i].remove();
              }
              scope.render();
              scope.initKeyboardStyle();
              calculator = $compile(calculator)(scope);
              document.body.appendChild(calculator[0]); 
              document.activeElement.blur();
              angular.element(element.next())[0].style.display="inline-block";
             // angular.element(e.target)[0].setAttribute("placeholder","");
              
            });
            setTimeout(function(){
                if(attrs.focus=="true"){
                  element[0].focus();
                }
              },500);
            
            document.getElementsByTagName('body')[0].onclick=function(e){
              scope.finish();
              scope.cursor();
              var ele = document.getElementsByClassName('activeInput')[0];
              if(ele && ele.value.length == 0){   
                ele.setAttribute("placeholder",$rootScope.placeTxt);
                angular.element(ele).removeClass("activeInput");
              }
            };
            //关闭模态框
            scope.finish = function(e){
              event.stopPropagation();
              scope.initKeyboardStyle();
              var node = document.getElementsByClassName('keyboard');
              angular.element(node).remove();
              scope.cursor();//屏蔽光标
              scope.initPlace();//初始化placeholder
              element.removeClass("activeInput");
              if(typeof(scope.ngBlur()) !="undefined"){
                scope.ngBlur();
              }
            }
            //光标控制
            scope.cursor = function(){
              var node1=document.getElementsByClassName('imitateCursor');
              for(var i=0;i<node1.length;i++){
                node1[i].style.display="none";
              }
            }
            //输入字符
            scope.clickKey=function (word,e) {
              event.stopPropagation();
              angular.element(e.target).addClass("keydown");
              if(scope.lowerOrUp=="up"){
                scope.myName += word.toUpperCase();//是显示的值
                scope.password += word.toUpperCase();//password中隐藏的真正的值
              }else{
                scope.myName += word.toLowerCase();
                scope.password += word.toLowerCase();
              }
              if(typeof(attrs.password) !="undefined"){
                scope.myName = scope.myName.replace(/./g,'•');//输入的是密码，要进行转换
              }
              if(boardtype == "v1"){//输入金额
                var returnText = scope.myName;
                if(!returnText){
                  return;
                }
                var regStrs = [
                  ['^0(\\d+)$', '$1'], //禁止录入整数部分两位以上，但首位为0
                  ['[^\\d\\.]+$', ''], //禁止录入任何非数字和点
                  ['\\.(\\d?)\\.+', '.$1'], //禁止录入两个以上的点
                  ['^(\\d+\\.\\d{2}).+', '$1'] //禁止录入小数点后两位以上
                ];

                for (i = 0; i < regStrs.length; i++) {
                  var reg = new RegExp(regStrs[i][0]);
                  returnText = returnText.replace(reg, regStrs[i][1]);
                }

                scope.myName =  returnText;
              }
              setTimeout(function(){
                angular.element(e.target).removeClass("keydown");
              },50)
              
            }
            scope.initPlace = function(){
              if(scope.myName.length == 0){
                element[0].setAttribute("placeholder",attrs.placeholder);
              } 
            }
            //切换键盘
            scope.change = function(tag,e){
              e.stopPropagation();
              switch(tag){
                case "123":
                  scope.numberShow = "show";
                  scope.characterShow = "hidden";
                  scope.scShow = "hidden";
                  break;
                case "ABC":
                scope.numberShow = "hidden";
                scope.characterShow = "show";
                scope.scShow = "hidden";
                  break;
                case "#+=":
                  scope.numberShow = "hidden";
                  scope.characterShow = "hidden";
                  scope.scShow = "show";
                  break;
                case "back":
                  if(scope.myName.length>=1){
                    scope.myName=scope.myName.substring(0,scope.myName.length-1);
                    scope.password=scope.password.substring(0,scope.password.length-1);
                  }else{
                    scope.myName="";
                    scope.password="";
                  }
                  scope.initPlace();                 
                  break;
                case "up":
                  if(scope.lowerOrUp == "lower"){
                    scope.lowerOrUp = "up";
                  }else{
                    scope.lowerOrUp = "lower";
                  }
                  break;
                default:
                  break;
              }

            }
        }
    };
});
;
// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
// 'starter.services' is found in services.js
// 'starter.controllers' is found in controllers.js
angular.module('starter', ['ionic', 'ngCordova','starter.controllers', 'starter.services','starter.config','starter.router','starter.directive','starter.unit','ionic-citypicker'])

.run(function($ionicPlatform,$location,$rootScope,$window,$cordovaToast,$cordovaSQLite,$timeout,$q,$ionicHistory,$ionicLoading,$ionicPopup,$cordovaStatusbar,$ionicGesture,$cordovaInAppBrowser,$ionicActionSheet,$cordovaFileTransfer, $cordovaFile, $cordovaFileOpener2,$http,$cordovaNetwork,$state,state,req,serveRoot,configFile,sqLiteLoginInfo,tip,jpushService,backMore,reqRoot,httpService) {
  $rootScope.logined=0;//默认未登录
  $rootScope.hpRegister = '0';
  $rootScope.ionHeaderBarSty="orange";//ion-header-bar的背景色，默认是orange
  var isIOS = ionic.Platform.isIOS();
  var isAndroid = ionic.Platform.isAndroid();
  localStorage.isIOSPlatform = ionic.Platform.isIOS();
  
  //热推送更新单元函数
  $rootScope.chcpFn=function(){
    if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {
      navigator.splashscreen.hide();//隐藏欢迎界面
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      cordova.plugins.Keyboard.disableScroll(true);
	  //盖屏
  //  $http.get(serveRoot+'apk/version.json?t='+Date.parse(new Date()))
		// .then(function(data){
		// 	  req.deviceInfo().then(function(deviceInfo){
    //      $rootScope.appVer=deviceInfo.APPVER;//客户端版本
		// 		  console.log($rootScope.appVer);
		// 	  var serverAppVersion = parseInt(data.data.verInfo.substring(1,2));//服务器 版本
		// 	  var zjtgCtrl=data.data.zjtgCtrl;//0表示不开启弹出，1表示开启弹出
		// 	  var zjtgMsg=data.data.zjtgMsg;//资金托管提示语句
		// 	  var zjtgTil=data.data.zjtgTil;//资金托管提示标题
		// 	  var zjtgLink=data.data.zjtgLink;//資金託管詳情連接
		// 	  var upVersion =data.data.upVersion;
		// 	  var iosLink=data.data.iosLink;//資金託管詳情連接
		// 	  var upTpl ='';
		// 	  var flg = false;
		// 	  if($rootScope.appVer.replace('V',"").replace(/\./g,"")<upVersion){
		// 		 if(isIOS){  
		// 			upTpl = "<span id='upVer'style='text-align: center; display: block;'>点击下载最新版本</span>";
		// 			flg = true;
		// 		  }
		// 	  }
		// 	  var tpl='<style>#toZjtg{position:absolute;top:36%;left:72%;z-index:1000;}#zjtgTip .bg{background:rgba(0,0,0,0.8);position:absolute;top:0px;left:0px;bottom:0px;right:0px;z-index:99;}#zjtgTip .bd{z-index:999;color:#000;position:absolute;top:50%;left:50%;margin-left:-160px;width:320px;height:200px;margin-top:-100px;}</style><div id="zjtgTip"><div class="bg"></div><div class="bd"><div class="card"><div class="item item-divider item-assertive">'+zjtgTil+'</div><div class="item item-text-wrap">'+zjtgMsg+'<p style="text-align:right;color:#008ccf;margin-top:20px;">'+upTpl+'</p></div></div></div></div>';
		// 		if(zjtgCtrl && zjtgCtrl == 1||flg){
		// 		  document.getElementById("zjtg").innerHTML=tpl;
		// 		  document.getElementById("toZjtgDetail").onclick=function(){
		// 			$rootScope.inAppBrowserRef.openUrl(zjtgLink);
		// 		  };
		// 		 document.getElementById("upVer").onclick=function(){
		// 			$rootScope.inAppBrowserRef.openUrl(iosLink);
		// 		  };
		// 		  return ;
		// 		}
		// 	  });

	  // });
      //屏蔽ios的热推送
      if (window.indexedDB) {
        console.log("I'm in WKWebView!");
      } else {
          console.log("I'm in UIWebView");
      }
     
     }
  }

  $ionicPlatform.ready(function() {
    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
    // for form inputs)
    //app启动时热推送更新执行

     $rootScope.chcpFn();
     //自动检测更新
     //autoCheckUpdate();
     document.addEventListener("menubutton", onHardwareMenuKeyDown, false);

     //app初始化创建数据库和表
     sqLiteLoginInfo.initDb();
     //初始化状态栏
     if (window.StatusBar) {
        if (cordova.platformId == 'android') {
            StatusBar.backgroundColorByHexString("#31a492");
        }
      }
    /***************生产上放开 ********************* ***********************************************/
      try{
        // var notificationCallback = function(event) {
        //   sqLiteLoginInfo.userInfo.get(function(userInfo){
        //     var key = "szshqtx2014hpzx090415#@1";
        //     var id = userInfo.ciNo ? DES3.encrypt(key, 'avd' + userInfo.ciNo) : "";
        //     var alertContent,
        //     activeUrl="";//活动地址
        //     if(device.platform == "Android") {
        //         alertContent = event.alert;
        //         activeUrl=event.extras.activeUrl;
        //     } else {
        //         alertContent = event.aps.alert;
        //         activeUrl=event.activeUrl;
        //         window.plugins.jPushPlugin.setBadge(0);//服务器角标清0
        //         window.plugins.jPushPlugin.setDebugModeFromIos();
        //         event.aps.badge&&window.plugins.jPushPlugin.setApplicationIconBadgeNumber(0);
        //     }
        //     activeUrl&&$rootScope.inAppBrowserRef.openUrl(activeUrl+id);
        //   });
        // };
        // jpushService.init(notificationCallback);
        // req.deviceInfo().then(function(deviceInfo){
        //   //设置别名
        //   //jpushService.setAlias(deviceInfo.APPVER);
        //    sqLiteLoginInfo.userInfo.get(function(userInfo){
        //       var phone =  userInfo.mbPhn;
        //       jpushService.setAlias(phone);
        //    })

        // });

        //初始化友盟统计配置
        // window.plugins.umengAnalyticsPlugin.init();
        //调试模式
     //   window.plugins.umengAnalyticsPlugin.setDebugMode(true);
        //启动MAA服务
      //  function onStartCallback(ret){
       //     console.log('start return: ' + JSON.stringify(ret));
       // }
      //  window.plugins.maaSdkPlugin.start(onStartCallback);

        // 获取版本号
        function onGetVersionCallback(ret){
            console.log('getVersion return: ' + JSON.stringify(ret));
        }
      //  window.plugins.maaSdkPlugin.getVersion(onGetVersionCallback);

        //重新激活MAA加速SDK的接口，请在应用进入前台的时候，即在 applicationWillEnterForeground: 函数中调用
      //   function onActivateCallback(ret){
      //       console.log('activate return: ' + JSON.stringify(ret));
      //   }
      //  window.plugins.maaSdkPlugin.activate(onActivateCallback);

       // 获取META-DATA
        function onGetMetaDataCallback(ret){
            console.log('getMetaData return: ' + JSON.stringify(ret));
            $rootScope.chid=ret;
        }
      //  window.plugins.maaSdkPlugin.getMetaData("UMENG_CHANNEL", onGetMetaDataCallback);
      }catch(e){}

  });
  // 菜单键
  function onHardwareMenuKeyDown() {
      $ionicActionSheet.show({
          titleText: '检查更新',
          buttons: [
              { text: '关于' }
          ],
          destructiveText: '检查更新',
          cancelText: '取消',
          cancel: function () {

          },
          destructiveButtonClicked: function () {
              //检查更新
              checkUpdate();
          },
          buttonClicked: function (index) {

          }
      });
      $timeout(function () {
          hideSheet();
      }, 2000);
  };

  //跳到登录页面
  $rootScope.viewToLogin=function(){
    state.go("login");
  }
  //退出登录
  $rootScope.exitLogin=function(){
    sqLiteLoginInfo.exitLogin(function(){
        state.go("tab.home");
    });
  }
  $rootScope.tip = function(txt){
  // $ionicPopup.alert({
  //     title: '提示',
  //     cssClass:'custom-popup',
  //     template: '<ul>'+txt+'</ul>',
  //     okText:'确定'
  // });
	  var tpl='<span class="animated cpt-toast bounceOutDown-hastrans" style="position: fixed;left: 50%; padding: 10px 20px; font-size: 14px; border-radius: 6px; color: rgb(255, 255, 255); top: 50%; z-index: 1000001; transform: translate3d(-50%, -50%, 0px); animation-duration: 0.5s; background: rgba(7, 17, 27, 0.658824);">'+txt+'</span>';
         document.getElementById("zjtg").innerHTML=tpl;
          setTimeout(function() {
            document.getElementById("zjtg").innerHTML=''
        }, 2000)

  }
  //打开外部链接
  $rootScope.inAppBrowserRef=(function(){
    var _browser;
    return {
      getInstance:function(){
          return _browser?_browser:cordova.InAppBrowser;
      },
      close:function(){
        $cordovaInAppBrowser.close();
        _ref.executeSript({file: "myscript.js"});
      },
      //url 请求地址
      //eventObj 有以下几种事件loadstart ：function(cordovaInAppBrowser){}  开始加载回调函数  loadstop：function(cordovaInAppBrowser){} 完成加载回调函数    loaderror：function(cordovaInAppBrowser){}  加载错误回调函数
      //cordovaInAppBrowser回调里面注入$cordovaInAppBrowser对象
      openUrl:function(url,eventObj){
        var ths=this;
        req.deviceInfo().then(function(deviceInfo){
          $rootScope.sessionId = deviceInfo.sessionId;
          $rootScope.signKey = deviceInfo.signKey;
         if (!cordova.InAppBrowser) {
            return;
         }
        var _ref;
        // toolbar=yes 仅iOS有效,提供关闭、返回、前进三个按钮
        // toolbarposition=top/bottom 仅iOS有效,决定toolbar的位置
        // closebuttoncaption=关闭 仅iOS有
        _ref.addEventListener('loadstart', function(event){
          eventObj&&eventObj.loadstart&&eventObj.loadstart(_ref);
          //当前inappbrowser内部浏览器跳到验证成功服务器页面
          var _url=event.url;
     
     
        });
        var loadTime=0;
        _ref.addEventListener('loadstop', function(event){
          var _url=event.url;
  
          eventObj&&eventObj.loadstop&&eventObj.loadstop(_ref);
          $rootScope.loadingHide();
        });
        _ref.addEventListener('loaderror', function(){
          eventObj&&eventObj.loaderror&&eventObj.loaderror(_ref);
          $rootScope.loadingHide();
        });
        _ref.addEventListener('exit', function(event){
          eventObj&&eventObj.exit&&eventObj.exit(_ref);
          $rootScope.loadingHide();
        });
        })
     
      }
    }
  })();

  /**
  *视图跳转
  *配置权限拦截器
  stateName：状态名称
  stateParams:视图状态参数
  disableBack：是否在状态栏头部显示返回功能键
  第一个参数是statename状态名
  如果只有2个参数，第二个参数是对象的话就是stateParams，如果是boolen类型，那么第二个参数就是disableBack
  如果有3个参数，第二个参数是对象的话就是stateParams，第三个参数就是disableBack
  */
  $rootScope.toView=function(_stateName,_stateParam,_disableBack){
    state.go(_stateName,_stateParam,_disableBack);
  }
  //loading加载
  var loadingStatus;//标识loading状态，0为隐藏loading  1为显示
  $rootScope.loadingShow = function() {
    loadingStatus=1;
    $ionicLoading.show({
      maxWidth: 200,
      noBackdrop :true,
      template :'<style>.loading-container .loading{padding:0px!important;background-color: rgba(0, 0, 0, 0);}</style><img style="border-radius:5px;opacity:0.8;" src="img/loading.gif" width="500px"/>'
    });
    var time=0;
    var backtime=setInterval(function(){
      if(time>10){
        tip("网络连接失败，请检查您的网络情况",function(){
          clearInterval(backtime);
          $ionicLoading.hide();
        });
      }
      if(loadingStatus==0){
        clearInterval(backtime);
      }
      ++time;
    },1000);
  };
  $rootScope.loadingHide = function(){
    loadingStatus=0;
    $ionicLoading.hide();
  };
  //返回上一个视图回调函数
  $rootScope.goBackView=function(e){
      //隐藏键盘
      var node = document.getElementsByClassName('keyboard');
      angular.element(node).remove();

      var stateName = ($ionicHistory.currentView()).stateName;//当前页面的statename
      e&&e.preventDefault();
      if(stateName in backMore) {
        $ionicHistory.goBack(backMore[stateName]);
        return;
      }
      if($rootScope.registerToCapSup && stateName=="tab.capitalSupervision"){
        $rootScope.registerToCapSup = false;
        state.go("tab.memberCenter");
        return;
      }
      // 弹出确定是否退出提示
      function showExitConfirm() {
          var confirmPopup = $ionicPopup.confirm({
              title: '<strong>退出应用?</strong>',
              template: '你确定要退出应用吗?',
              okText: '退出',
              cancelText: '取消'
          });

          confirmPopup.then(function (res) {
              if (res) {
                  //注意，这段代码是应用退出前保存统计数据，请在退出应用前调用
                  //window.plugins.umengAnalyticsPlugin.onKillProcess();
                  ionic.Platform.exitApp();
              } else {
                  // Don't close
              }
          });
      }

      //非登录状态下的上一个视图
       var backView=(function(){
        var _firstView="";//标识返回按钮起始返回视图
        var _historyViewLst=$ionicHistory.viewHistory().views;//视图历史记录;
        var _backView;//返回视图
        var _viewsArr=[];//保存历史视图数组队列
        var _viewsArrLen=0;
        var time=0;//遍寻次数，操作3次，返回首页视图
        var filterPage=[
          'tab.investHly',
          'tab.invest',
          'tab.investWly',
          'tab.memberCenter',
          'tab.assetStatistics',
          'tab.capitalFlow',
          'investTickets',
          'tab.accountM',
          'tab.planDetail',
          'tab.quitHly',
          'tab.assetStatistics',
          'tab.updateLoginPwd',
          'tab.updateTradePwd',
          'tab.resetTradePwd',
          'tab.resetTradePwdContent',
          'tab.updatePhn',
          'tab.updatePhnStep2',
          'withdraw',
          'withdrawFee',
          'withdrawIptPwd',
          'quickPayment',
          'wechatPayment',
          'tab.myInvest',
          'tab.myInvestNew',
          'tab.investDetail',
          'record',
          'recordInfo',
          'tab.investZzb',
          'tab.myTasks',
          'passwordM',
          ].join();//需要过滤页面

        return function(currentView){
          if(currentView&&(!$ionicHistory.currentView().backViewId||filterPage.indexOf(currentView.stateName)==-1)){
            return _viewsArr[0];
          }
          if(!currentView){//初始调用，进行数据初始化
            _firstView=$ionicHistory.currentView();
            _viewsArr=[];
            for (var view in $ionicHistory.viewHistory().views){
               _viewsArr.push($ionicHistory.viewHistory().views[view]);
            }
            _viewsArrLen=_viewsArr.length;
            if(!_firstView.backViewId){
              return _viewsArr[0];
            }
            _backView=_historyViewLst[_firstView.backViewId];
          }else{//追溯过程逻辑
            ++time;//追溯次数自增1
            _backView=_historyViewLst[currentView.backViewId];
          }
          try{
            if(_backView.stateName==_firstView.stateName||time==2){
              return _viewsArr[0];
            }
            return (filterPage.indexOf(_backView.stateName)>=0)?backView(_historyViewLst[_backView.backViewId]):_backView;
          }catch(e){
            return _viewsArr[0];
          }

        }
      })();
      //判断处于哪个页面时双击退出
      if($location.path() == '/tab/home') {
          if ($rootScope.backButtonPressedOnceToExit) {
              /***************生产上放开 ********************************************************************/
              try{
                //注意，这段代码是应用退出前保存统计数据，请在退出应用前调用
                window.plugins.umengAnalyticsPlugin.onKillProcess();
                // 关闭SDK接口，当应用结束时需要关闭SDK，在applicationWillTerminate:函数中调用
                isIOS&&window.plugins.maaSdkPlugin.stop();
              }catch(e){

              }

              ionic.Platform.exitApp();
          } else {
              $rootScope.backButtonPressedOnceToExit = true;
              $cordovaToast.showShortTop('再按一次退出系统');
              setTimeout(function () {
                  $rootScope.backButtonPressedOnceToExit = false;
              }, 2000);
          }
      }else if ($ionicHistory.backView()) {
          if(localStorage.token){//登录的用户直接返回上一级
            $ionicHistory.goBack();
          }else{//未登录的页面需要推展判断
            var view=backView();
            view.go();
          }
       
      } else {
          if ($rootScope.backButtonPressedOnceToExit) {
            /***************生产上放开 ********************************************************************/
            try{
              //注意，这段代码是应用退出前保存统计数据，请在退出应用前调用
              window.plugins.umengAnalyticsPlugin.onKillProcess();
              // 关闭SDK接口，当应用结束时需要关闭SDK，在applicationWillTerminate:函数中调用
              isIOS&&window.plugins.maaSdkPlugin.stop();
            }catch(e){}


            ionic.Platform.exitApp();
            // 关闭SDK接口，当应用结束时需要关闭SDK，在applicationWillTerminate:函数中调用
            isIOS&&window.plugins.maaSdkPlugin.stop();
          }else{
            $rootScope.backButtonPressedOnceToExit = true;
            $cordovaToast.showShortTop('再按一次退出系统');
            setTimeout(function () {
                $rootScope.backButtonPressedOnceToExit = false;
            }, 2000);
          }
      }
      return false;
  }

  
  //双击退出
  $ionicPlatform.registerBackButtonAction(function (e) {
    var stateName = ($ionicHistory.currentView()).stateName;//当前页面的statename
    if(stateName == "gesturePwd"){
      tip("请输入手势密码");
    }else{
      if(stateName in backMore) {
        $ionicHistory.goBack(backMore[stateName]);
        return;
      }
      $rootScope.goBackView(e);
    }

  }, 101);
})
.config(function($stateProvider, $urlRouterProvider,$ionicConfigProvider) {
  //设置tabs插件导航在底部显示
  $ionicConfigProvider.platform.ios.tabs.style('standard');
  $ionicConfigProvider.platform.ios.tabs.position('bottom');
  $ionicConfigProvider.platform.android.tabs.style('standard');
  $ionicConfigProvider.platform.android.tabs.position('standard');
  //让nav标题在iOS和Android上都居中显示
  $ionicConfigProvider.navBar.alignTitle('center');
  //禁止ios下的左右切换滑动
  $ionicConfigProvider.views.swipeBackEnabled(false);
});
